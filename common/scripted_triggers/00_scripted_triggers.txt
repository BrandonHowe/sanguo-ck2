###TRAIT GROUP TRIGGERS####
#If you make changes, update the "Trait group triggers CK2" spreadsheet

#Agreeable
#has_benevolent_trait_trigger		Has a benevolent trait.



#is_benevolent_trigger				Has a benevolent trait and not any evil traits.
#has_pleasant_trait_trigger			Has a pleasant personality trait. 
#has_pleasant_personality_trigger	Has a pleasant personality trait and not any unpleasant personality traits.
#has_pious_trait_trigger			Has a piety trait.
#is_pious_trigger					Has a piety trait and not any impious traits.
#has_virtue_trigger					Has a virtue trait.

#Disagreeable
#has_evil_trait_trigger				Has an evil trait.
#is_evil_trigger					Has an evil trait and not any benevolent traits.
#has_unpleasant_trait_trigger		Has an unpleasant personality trait. 
#has_unpleasant_personality_trigger	Has an  unpleasant personality trait and not any pleasant personality traits.
#has_impious_trait_trigger			Has an impious trait.
#is_impious_trigger					Has a impious trait and not any piety traits.
#has_vice_trigger					Has a vice trait.

#Attractiveness
#has_attractive_trait_trigger		Has a sex appeal trait.
#is_attractive_trigger				Has a sex appeal trait and not any traits with negative sex appeal.
#has_unattractive_trait_trigger		Has a negative sex appeal trait.
#is_unattractive_trigger			Has a negative sex appeal trait and not any traits with sex appeal.
#has_fair_trait_trigger				Is Fair/Groomed.
#has_ugly_trait_trigger				Is Ugly/Uncouth.

#Health/congential
#is_smart_trigger					Has a smart trait.
#is_dumb_trigger					Has a dumb trait.
#is_strong_trigger					Has a strong trait.
#is_weak_trigger					Has a weak trait.
#well_treated_for_disease_trigger   Has a modifier relating to a positive treatement.
#poorly_treated_for_disease_trigger Has a modifier relating to a negative treatement.
#character_disease_trigger			Has a disease trait.
#has_symptom_trigger				Has a symptom trait.
#has_injury_trigger					Has an injury trait.
#is_maimed_trigger					Has a maimed trait
#has_severe_disability_trigger		Has a severe disability, which makes the characters life really hard.
#has_medium_disability_trigger		Has a medium disability, which limits the character to some extent but they can mostly live a full life.
#has_minor_disability_trigger		Has a minor disability, which does not limit the character in a physical sense, but is a source of ridicule and trauma.
#has_disability_trigger				Has a severe or light disability.
#has_mental_disorder_trigger		Has a mental disorder trait.
#has_fertile_trait_trigger			Has a fertile trait.
#is_fertile_trigger					Has a fertile trait and not any infertile traits.

#has_infertile_trait_trigger		Has an infertile trait.
#is_infertile_trigger				Has an infertile trait and not any fertile traits, OR is celibate OR is eunuch.
#has_negative_congenital_trigger	Has a negative congenital trait

#Diplomacy
#has_education_diplomacy_trigger	Has a diplomacy education trait.
#has_lifestyle_diplomacy_trigger	Has a diplomacy lifestyle trait.
#child_personality_diplomacy_triggerHas a child trait with diplomacy bonus.

#Martial
#has_education_martial_trigger		Has a martial education trait.
#has_lifestyle_martial_trigger		Has a martial lifestyle trait.

#child_personality_martial_trigger	Has a child trait with martial bonus.

#Stewardship

#has_education_stewardship_trigger	Has a stewardship education trait.
#has_lifestyle_stewardship_trigger	Has a stewardship  lifestyle trait.
#child_personality_stewardship_trigger	Has a child trait with stewardship bonus.

#Intrigue
#has_education_intrigue_trigger		Has a intrigue education trait.
#has_lifestyle_intrigue_trigger		Has a intrigue lifestyle trait.
#child_personality_intrigue_trigger	Has a child trait with intrigue bonus.

#Learning
#has_education_learning_trigger		Has a learning education trait.
#has_lifestyle_learning_trigger		Has a learning lifestyle trait.
#child_personality_learning_trigger	Has a child trait with learning bonus.
#is_learned_trigger					Has a scholarly trait, learning-oriented trait.

#has_any_lifestyle_trait			Has any of the above lifestyle traits.

#Religion
#has_crusade_trait_trigger			Has a crusade type trait.
#has_secret_religion_trait_trigger	Has a secret religion trait.

#is_mongol_empire_leader_trigger	If the Character is a Mongol emperor or its liege is
##AGREEABLE###

has_benevolent_trait_trigger = {
	OR = {
		trait = just
		trait = kind
		trait = charitable
		trait = patient
		trait = affectionate
	}
}

is_benevolent_trigger = {
	has_benevolent_trait_trigger = yes
	has_evil_trait_trigger = no
}

has_pleasant_trait_trigger = {
	OR = {
		trait = honest
		trait = gregarious
		trait = trusting
		trait = affectionate
		trait = playful
		trait = socializer
		trait = charitable
		trait = patient
		trait = kind
	}
}

has_pleasant_personality_trigger = {
	has_pleasant_trait_trigger = yes
	has_unpleasant_trait_trigger = no
}

has_pious_trait_trigger = {
	OR = {
		trait = theologian
		trait = celibate
		trait = chaste
		trait = humble
		trait = content
		is_ascetic_trigger = yes
		trait = shieldmaiden
		trait = zealous
	}
}

is_pious_trigger = {
	has_pious_trait_trigger = yes
	has_impious_trait_trigger = no
}

has_virtue_trigger = {
	OR = {
		trait = chaste
		trait = temperate
		trait = charitable
		trait = diligent
		trait = patient
		trait = kind
		trait = humble
	}
}


##DISAGREEABLE##

has_evil_trait_trigger = {
	OR = {
		trait = arbitrary
		trait = cruel
		trait = impaler
	}
}

is_evil_trigger = {
	has_evil_trait_trigger = yes
	has_benevolent_trait_trigger = no
}

has_unpleasant_trait_trigger = {
	OR = {
		trait = deceitful
		trait = shy
		trait = paranoid
		trait = cruel
		trait = stubborn
		trait = haughty
		trait = brooding
		trait = impaler
		trait = greedy
		trait = wroth
		trait = envious
	}
}

has_unpleasant_personality_trigger = {
	has_unpleasant_trait_trigger = yes
	has_pleasant_trait_trigger = no
}

has_impious_trait_trigger = {
	OR = {
		trait = cynical
		trait = hedonist
		trait = lustful
		trait = cannibal_trait
		trait = impaler
	}
}

is_impious_trigger = {
	has_impious_trait_trigger = yes
	has_pious_trait_trigger = no
}

has_vice_trigger = {
	OR = {
		trait = lustful
		trait = gluttonous
		trait = greedy
		trait = slothful
		trait = wroth
		trait = envious
		trait = proud
	}
}


##ATTRACTIVENESS##

has_attractive_trait_trigger = {
	OR = {
		trait = fair
		trait = groomed
		trait = just
		trait = brave
		trait = gregarious
		trait = seducer
		trait = seductress
		trait = robust
		trait = strong
		trait = socializer
	}
}

is_attractive_trigger = {
	has_attractive_trait_trigger = yes
	has_unattractive_trait_trigger = no
}

has_unattractive_trait_trigger = {
	OR = {
		trait = ugly
		trait = uncouth
		trait = feeble
		trait = dwarf
		trait = giant
		trait = clubfooted
		trait = harelip
		trait = hunchback
		trait = lisp
		trait = weak
		trait = lunatic
		trait = possessed
		trait = leper
		trait = maimed
		trait = drunkard
		trait = gluttonous
		trait = craven
		trait = arbitrary
		trait = cruel
		trait = stubborn
		trait = blinded
		trait = horse
		trait = one_eyed
		trait = one_handed
		trait = one_legged
		trait = disfigured
		trait = mangled
		trait = severely_injured
		trait = flu
		trait = dysentery
		trait = food_poisoning
		trait = rabies
		trait = infection
		trait = rash
		trait = vomiting
		trait = diarrhea
		trait = cough
	}
}

is_unattractive_trigger = {
	has_unattractive_trait_trigger = yes
	has_attractive_trait_trigger = no
}


##HEALTH/CONGENTIAL##

is_smart_trigger = {
	OR = {
		trait = genius
		trait = quick
		trait = shrewd
	}
}

is_dumb_trigger = {
	OR = {
		trait = dull
		trait = slow
		trait = imbecile 
	}
}

is_strong_trigger = {
	OR = {
		trait = strong
		trait = robust
	}
}

is_weak_trigger = {
	OR = {
		trait = weak
		trait = feeble
	}
}

well_treated_for_disease_trigger = {
	OR = {
		has_character_modifier = mystic_treatment_decent
		has_character_modifier = symptom_treatment_1
		has_character_modifier = symptom_treatment_2
		has_character_modifier = symptom_treatment_3
		has_character_modifier = symptom_treatment_4	
		has_character_modifier = successful_treatment_1
		has_character_modifier = successful_treatment_2
		has_character_modifier = successful_treatment_3
	}	
}
poorly_treated_for_disease_trigger = {
	OR = {
		has_character_modifier = mystic_treatment_poor
		has_character_modifier = mystic_treatment_terrible
		has_character_modifier = failed_treatment_1
		has_character_modifier = failed_treatment_2
	}	
}

character_disease_trigger = {
	OR = {
		trait = has_tuberculosis
		trait = has_typhoid_fever
		trait = has_typhus
		trait = has_bubonic_plague
		trait = has_measles
		trait = has_small_pox
		trait = flu
		trait = dysentery
		trait = gout
		trait = food_poisoning
		trait = rabies
		trait = cancer
		trait = pneumonic
	}
}

has_disease_trigger = {
	OR = {
		trait = has_tuberculosis
		trait = has_typhoid_fever
		trait = has_typhus
		trait = has_bubonic_plague
		trait = has_measles
		trait = has_small_pox
		trait = flu
		trait = dysentery
		trait = gout
		trait = food_poisoning
		trait = rabies
		trait = cancer
		trait = pneumonic
		trait = dancing_plague
		trait = scurvy
		trait = ill
		trait = leper
		trait = lovers_pox
	}
}

has_symptom_trigger = {
	OR = {
		trait = infection
		trait = malaise
		trait = fatigue
		trait = abdominal_pain
		trait = headache
		trait = rash
		trait = cramps
		trait = chest_pain
		trait = vomiting
		trait = diarrhea
		trait = fever
		trait = cough
	}
}

has_minor_disease_trigger = {
	OR = {
		trait = malaise
		trait = fatigue
		trait = abdominal_pain
		trait = headache
		trait = rash
		trait = cramps
		trait = chest_pain
		trait = vomiting
		trait = diarrhea
		trait = fever
		trait = cough
		trait = ill
		trait = lovers_pox
		trait = flu
	}
}

has_injury_trigger = {
	OR = {
		trait = wounded
		trait = severely_injured
	}
}

is_maimed_trigger = {
	OR = {
		trait = maimed
		trait = one_eyed
		trait = one_handed 
		trait = one_legged 
		trait = disfigured 
		trait = mangled
	}
}

has_severe_disability_trigger = {
	OR = {
		trait = infirm
		trait = mangled
		trait = inbred
		trait = blinded
		trait = incapable
		trait = maimed
	}
}

has_medium_disability_trigger = {
	OR = {
		trait = one_legged
		trait = one_handed
		trait = one_eyed
		trait = clubfooted
		trait = hunchback
		trait = dwarf
		trait = giant
	}
}

has_minor_disability_trigger = {
	OR = {
		trait = disfigured
		trait = eunuch
		trait = harelip
		trait = stutter
		trait = lisp
	}
}

has_disability_trigger = {
	OR = {
		has_severe_disability_trigger = yes
		has_medium_disability_trigger = yes
		has_minor_disability_trigger = yes
	}
}

has_mental_disorder_trigger = {
	OR = {
		trait = stressed
		trait = depressed
		trait = lunatic
		trait = possessed
		trait = drunkard
	}
}

has_fertile_trait_trigger = {
	OR = {
		trait = underhanded_rogue
		trait = charismatic_negotiator
		trait = grey_eminence
		trait = thrifty_clerk
		trait = fortune_builder
		trait = midas_touched
		trait = strong
		trait = hedonist
		trait = lustful
		trait = dancing_plague
	}
}

is_fertile_trigger = {
	has_fertile_trait_trigger = yes
	has_infertile_trait_trigger = no
}

has_infertile_trait_trigger = {
	OR = {
		trait = homosexual
		trait = eunuch
		trait = scholarly_theologian
		trait = mastermind_theologian
		trait = stressed
		trait = depressed
		trait = ill
		trait = pneumonic
		trait = leper
		trait = infirm
		trait = incapable
		trait = inbred
		trait = weak
		trait = celibate
		trait = chaste
		trait = mangled
		trait = severely_injured
		trait = dysentery
		trait = food_poisoning
		trait = cancer
	}
}

is_infertile_trigger = {
	OR = {
		AND = {
			has_infertile_trait_trigger = yes
			has_fertile_trait_trigger = no
		}
		trait = eunuch
		trait = celibate
	}
}


##DIPLOMACY##

has_education_diplomacy_trigger = {
	OR = {
		trait = naive_appeaser
		trait = underhanded_rogue
		trait = charismatic_negotiator
		trait = grey_eminence
	}
}

has_lifestyle_diplomacy_trigger = {
	OR = {
		trait = socializer
		trait = gamer
		trait = hedonist
	}
}

child_personality_diplomacy_trigger = {
	OR = {
		trait = affectionate
		trait = playful
	}
}


##MARTIAL##

has_education_martial_trigger = {
	custom_tooltip = {
		text = has_martial_education_tt
		OR = {
			trait = misguided_warrior
			trait = tough_soldier
			trait = skilled_tactician
			trait = brilliant_strategist
		}
	}
}

has_lifestyle_martial_trigger = {
	OR = {
		trait = duelist
		trait = hunter
		trait = strategist
	}
}

child_personality_martial_trigger = {
	OR = {
		trait = haughty
		trait = rowdy
	}
}


##STEWARDSHIP##

has_education_stewardship_trigger = {
	OR = {
		trait = indulgent_wastrel
		trait = thrifty_clerk
		trait = fortune_builder
		trait = midas_touched
	}
}

has_lifestyle_stewardship_trigger = {
	OR = {
		trait = administrator
		trait = architect
		trait = gardener
	}
}

child_personality_stewardship_trigger = {
	OR = {
		trait = conscientious
		trait = fussy
		trait = curious
	}
}


##INTRIGUE##

has_education_intrigue_trigger = {
	OR = {
		trait = amateurish_plotter
		trait = flamboyant_schemer
		trait = intricate_webweaver
		trait = elusive_shadow
	}
}

has_lifestyle_intrigue_trigger = {
	OR = {
		trait = schemer
		trait = impaler
		trait = seducer
		trait = seductress
	}
}

child_personality_intrigue_trigger = {
	OR = {
		trait = willful
		trait = brooding
		trait = indolent
	}
}


##LEARNING##

has_education_learning_trigger = {
	OR = {
		trait = detached_priest
		trait = martial_cleric
		trait = scholarly_theologian
		trait = mastermind_theologian
	}
}

has_lifestyle_learning_trigger = {
	OR = {
		trait = scholar
		trait = theologian
		trait = mystic
	}
}

child_personality_learning_trigger = {
	OR = {
		trait = timid
		trait = idolizer
	}
}

is_learned_trigger = {
	OR = {
		trait = erudite
		trait = scholar
		trait = scholarly_theologian
		trait = mastermind_theologian
		trait = physician
	}
}

has_any_lifestyle_trait = {
	OR = {
		has_lifestyle_diplomacy_trigger = yes
		has_lifestyle_martial_trigger = yes
		has_lifestyle_stewardship_trigger = yes
		has_lifestyle_intrigue_trigger = yes
		has_lifestyle_learning_trigger = yes
	}
}

##RELIGION##

has_crusade_trait_trigger = {
	OR = {
		AND = {
			religion = tengri_pagan
			trait = tengri_warrior
		}
		AND = {
			religion = baishi
			trait = eagle_warrior
		}
		AND = {
			religion = huojiao
			trait = sun_warrior
		}
		AND = {
			religion_group = tao
			trait = mujahid
		}
		AND = {
			religion_group = chinese_religion
			trait = crusader
		}
	}
}

has_secret_religion_trait_trigger = {
	custom_tooltip = {
		text = no_secret_religion
		has_secret_religion = yes
	}
}

####MERC LEADER/COUNCIL JOB####

#Used with character interaction to replace merc leader. DO NOT REMOVE
can_be_mercenary_leader_potential_trigger = {
	prisoner = no
	is_ruler = no
	is_adult = yes
	
	NOR = { 
		trait = incapable
		is_inaccessible_trigger = yes
		is_ascetic_trigger = yes
	}
	same_realm = FROM
	OR = {
		is_female = no
		AND = {
			OR = {
				culture_group = yue
				culture_group = tibetan_group
				culture_group = man
			}
			liege = { religion = ROOT }
		}
		FROM = {
			has_law = true_cognatic_succession
		}
	}
}
#Used with character interaction to replace merc leader. DO NOT REMOVE
can_be_mercenary_leader_allow_trigger = {
	is_adult = yes
	liege = { character = FROM }
	custom_tooltip = {
		text = mercenary_martial_education_tooltip
		hidden_tooltip = {
			OR = {
				trait = misguided_warrior
				trait = tough_soldier
				trait = skilled_tactician
				trait = brilliant_strategist
			}
		}
	}
}

#Used with character interaction to replace merc leader. DO NOT REMOVE
replace_mercenary_captain_potential_trigger = {
	is_ruler = yes
	mercenary = yes
	primary_title = {
		has_title_flag = ze_dyn_merc
		band_creator = {
			character = FROM
		}
	}
}

#Used with character interaction to replace merc leader. DO NOT REMOVE
replace_mercenary_captain_allow_trigger = {
	primary_title = {
		NOT = { has_raised_standing_troops = yes }
		band_creator = {
			character = FROM
		}
	}
}

#Used with character interaction to swap council job. DO NOT REMOVE
change_council_job_potential_trigger = {
	liege = { character = FROM }
	OR = {
		AND = {
			OR = {
				has_minor_title = title_councilmember_king
				has_minor_title = title_councilmember_emperor
			}
			OR = {
				can_be_chancellor_trigger = yes
				can_be_marshal_trigger = yes
				can_be_treasurer_trigger = yes
				can_be_spymaster_trigger = yes
				can_be_spiritual_trigger = yes
			}
		}
		AND = {
			OR = {
				has_job_title = job_chancellor
				has_job_title = job_marshal
				has_job_title = job_treasurer
				has_job_title = job_spymaster
				has_job_title = job_spiritual
			}
			liege = {
				OR = {
					job_chancellor = {
						NOT = { character = ROOT }
						can_swap_job_title = ROOT
					}
					job_marshal = {
						NOT = { character = ROOT }
						can_swap_job_title = ROOT
					}
					job_treasurer = {
						NOT = { character = ROOT }
						can_swap_job_title = ROOT
					}
					job_spymaster = {
						NOT = { character = ROOT }
						can_swap_job_title = ROOT
					}
					job_spiritual = {
						NOT = { character = ROOT }
						can_swap_job_title = ROOT
					}
				}
			}
		}
	}
}

can_be_chancellor_trigger = {
	OR = {
		AND = {
			OR = {
				is_female = no
				trait = horse # So we can have female glitterhoofs! :D
				AND = {
					OR = {
						culture_group = yue
						culture_group = tibetan_group
						culture_group = man
					}
					liege = { religion = ROOT }
				}
				AND = {
					liege = {
						primary_title = {
							OR = {
								has_law = status_of_women_2
								has_law = status_of_women_3
							}
						}
					}
					OR = {
						liege = {
							OR = {
								dynasty = ROOT
								is_close_relative = ROOT
								any_spouse = { character = ROOT }
								any_consort = { character = ROOT }
								any_lover = { character = ROOT }
							}
						}
						is_landed = yes
					}
				}
				OR = {
					liege = { primary_title = { has_law = status_of_women_4 } }
					has_game_rule = {
						name = gender
						value = all
					}
				}
			}
			is_adult = yes
		}
		has_character_flag = special_chancellor
	}
	
	independent = no
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { has_character_modifier = resigned_in_anger }
	NOT = { 
		liege = { 
			has_opinion_modifier = {
				who = ROOT	
				modifier = opinion_resigned_from_council 
			} 
		} 
	}
}

can_be_marshal_trigger = {
	OR = {
		AND = {
			OR = {
				is_female = no
				trait = horse # So we can have female glitterhoofs! :D
				AND = {
					OR = {
						culture_group = yue
						culture_group = tibetan_group
						culture_group = man
					}
					liege = { religion = ROOT }
				}
				AND = {
					liege = {
						primary_title = {
							OR = {
								has_law = status_of_women_2
								has_law = status_of_women_3
							}
						}
					}
					OR = {
						liege = {
							OR = {
								dynasty = ROOT
								is_close_relative = ROOT
								any_spouse = { character = ROOT }
								any_consort = { character = ROOT }
								any_lover = { character = ROOT }
							}
						}
						is_landed = yes
					}
				}
				OR = {
					AND = { 
						is_female = yes
						liege = { primary_title = { has_law = status_of_women_4 } } 
					}
					has_game_rule = {
						name = gender
						value = all
					}
				}
			}
			is_adult = yes
		}
		has_character_flag = special_marshal
	}
	
	independent = no
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { has_character_flag = guru }
	NOT = { has_character_modifier = resigned_in_anger }
	NOT = { 
		liege = { 
			has_opinion_modifier = {
				who = ROOT	
				modifier = opinion_resigned_from_council 
			} 
		} 
	}
}

can_be_treasurer_trigger = {
	OR = {
		AND = {
			OR = {
				is_female = no
				trait = horse # So we can have female glitterhoofs! :D
				AND = {
					OR = {
						culture_group = yue
						culture_group = tibetan_group
						culture_group = man
					}
					liege = { religion = ROOT }
				}
				AND = {
					liege = {
						primary_title = {
							OR = {
								has_law = status_of_women_2
								has_law = status_of_women_3
							}
						}
					}
					OR = {
						liege = {
							OR = {
								dynasty = ROOT
								is_close_relative = ROOT
								any_spouse = { character = ROOT }
								any_consort = { character = ROOT }
								any_lover = { character = ROOT }
							}
						}
						is_landed = yes
					}
				}

				OR = {
					liege = { primary_title = { has_law = status_of_women_4 } }
					has_game_rule = {
						name = gender
						value = all
					}
				}
			}
			is_adult = yes
		}
		has_character_flag = special_treasurer
	}
	
	independent = no
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { has_character_flag = guru }
	NOT = { has_character_modifier = resigned_in_anger }
	NOT = { 
		liege = { 
			has_opinion_modifier = {
				who = ROOT	
				modifier = opinion_resigned_from_council 
			} 
		} 
	}
}

can_be_spymaster_trigger = {
	OR = {
		AND = {
			OR = {
				is_female = no
				trait = horse # So we can have female glitterhoofs! :D
				AND = {
					OR = {
						culture_group = yue
						culture_group = tibetan_group
						culture_group = man
					}
					liege = { religion = ROOT }
				}
				liege = { 
					OR = {
						mother = { character = ROOT }
						any_spouse = { character = ROOT }
					}
				}
				AND = {
					religion_group = pagan_group
					liege = {
						religion_group = pagan_group
					}
				}
				AND = {
					liege = {
						primary_title = {
							OR = {
								has_law = status_of_women_1
								has_law = status_of_women_2
								has_law = status_of_women_3
							}
						}
					}
					OR = {
						liege = {
							OR = {
								dynasty = ROOT
								is_close_relative = ROOT
								any_spouse = { character = ROOT }
								any_consort = { character = ROOT }
								any_lover = { character = ROOT }
							}
						}
						is_landed = yes
					}
				}

				OR = {
					liege = { primary_title = { has_law = status_of_women_4 } }
					has_game_rule = {
						name = gender
						value = all
					}
				}
			}
			is_adult = yes
		}
		has_character_flag = special_spymaster
	}
	
	independent = no
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { has_character_flag = guru }
	NOT = { has_character_modifier = resigned_in_anger }
	NOT = { 
		liege = { 
			has_opinion_modifier = {
				who = ROOT	
				modifier = opinion_resigned_from_council 
			} 
		} 
	}
}

can_be_spiritual_trigger = {
	independent = no
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { has_character_modifier = resigned_in_anger }
	NOT = { 
		liege = { 
			has_opinion_modifier = {
				who = ROOT	
				modifier = opinion_resigned_from_council 
			} 
		} 
	}
	
	liege = {
		religion = ROOT
	}
	OR = {
		AND = {
			is_adult = yes
			OR = {
				is_female = no
				religion_allows_female_temple_holders = yes
			}
		}
		has_character_flag = special_spiritual
	}
	
	OR = {
		is_theocracy = yes
		AND = {
			liege = { is_tribal = yes }
			is_ruler = no
		}
		AND = {
			clan = yes
			liege = {
				is_nomadic = yes
			}
		}
		trait = detached_priest
		trait = martial_cleric
		trait = scholarly_theologian
		trait = mastermind_theologian
		has_character_flag = special_spiritual
	}
}

can_be_councilmember_king_trigger = {
	independent = no
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { has_character_modifier = resigned_in_anger }
	NOT = { 
		liege = { 
			has_opinion_modifier = {
				modifier = opinion_resigned_from_council 
				who = ROOT
			} 
		} 
	}
	AND = {
		OR = {
			is_female = no
			AND = {
				OR = {
					culture_group = yue
					culture_group = tibetan_group
					culture_group = man
				}
				liege = { religion = ROOT }
			}
			AND = {
				liege = {
					primary_title = {
						OR = {
							has_law = status_of_women_1
							has_law = status_of_women_2
							has_law = status_of_women_3
						}
					}
				}
				is_landed = yes
			}

			OR = {
				liege = { primary_title = { has_law = status_of_women_4 } }
				has_game_rule = {
					name = gender
					value = all
				}
			}
		}
		is_adult = yes
	}
}

can_be_councilmember_emperor_trigger = {
	independent = no
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { has_character_modifier = resigned_in_anger }
	NOT = { 
		liege = { 
			has_opinion_modifier = {
				who = ROOT	
				modifier = opinion_resigned_from_council 
			} 
		} 
	}
	OR = {
		AND = {
			OR = {
				is_female = no
				AND = {
					OR = {
						culture_group = yue
						culture_group = tibetan_group
						culture_group = man
					}
					liege = { religion = ROOT }
				}
				AND = {
					liege = {
						primary_title = {
							OR = {
								has_law = status_of_women_1
								has_law = status_of_women_2
								has_law = status_of_women_3
							}
						}
					}
					is_landed = yes
				}
				OR = {
					liege = { primary_title = { has_law = status_of_women_4 } }
					has_game_rule = {
						name = gender
						value = all
					}
				}
			}
			is_adult = yes
		}
	}
}


###REAPER'S DUE####

can_be_maimed_trigger = {
	OR = {

		AND = {
			NOT = { has_dlc = "Reapers" }
			NOT = { trait = maimed }
		}
		AND = {
			has_dlc = "Reapers"
			NOT = {
				trait = one_eyed
				trait = one_handed 
				trait = one_legged 
				trait = disfigured 
				trait = mangled
			}
		}
	}
}

physician_bad_trigger = { 
	OR = {
		has_severe_disability_trigger = yes
		has_mental_disorder_trigger = yes
	}
}

physician_good_trigger = { 
	OR = {
		is_learned_trigger = yes
		religion_group = buddhist_religion
	} 
}

is_inaccessible_trigger = { #Remember to write this "is_inaccessible_trigger = no" when scripting, or the tooltip will be messed up (it reads "Is NOT in Hiding, in Seclusion, or out traveling")
	custom_tooltip = {
		text = is_inaccessible_tooltip
		hidden_tooltip = {
			OR = {
				has_character_flag = flag_holding_great_tribal_festival
				trait = in_hiding
				trait = travelling
				trait = troubled_pregnancy
				trait = pregnancy_finishing
				has_character_modifier = mother_minor_rest
				has_character_modifier = in_seclusion
				has_character_modifier = in_meditation
				has_character_modifier = doing_penance
				has_character_modifier = out_traveling
			}
		}
	}
}

prefers_men_trigger = {
	OR = {
		AND = {
			is_female = yes
			NOT = { trait = homosexual }
		}
		AND = {
			is_female = no
			trait = homosexual
		}
	}
}

root_attraction_trigger = {
	#Returns yes when ROOT is attracted to the scoped character, based on sex
	OR = {
		AND = {
			is_female = yes
			ROOT = { prefers_men_trigger = no }
		}
		AND = {
			is_female = no
			ROOT = { prefers_men_trigger = yes }
		}
	}
}

prev_attraction_trigger = {
	#Returns yes when PREV is attracted to the scoped character, based on sex
	OR = {
		AND = {
			is_female = yes
			PREV = { prefers_men_trigger = no }
		}
		AND = {
			is_female = no
			PREV = { prefers_men_trigger = yes }
		}
	}
}

attacted_to_root_trigger = {
	#Returns yes when scoped character is attracted to ROOT, based on sex
	OR = {
		AND = {
			ROOT = { is_female = yes }
			prefers_men_trigger = no
		}
		AND = {
			ROOT = { is_female = no }
			prefers_men_trigger = yes
		}
	}
}

attacted_to_prev_trigger = {
	OR = {
		AND = {
			PREV = { is_female = yes }
			prefers_men_trigger = no
		}
		AND = {
			PREV = { is_female = no }
			prefers_men_trigger = yes
		}
	}
}
is_unimportant_trigger = {
	NOR = {
		is_married = yes
		is_landed = yes
		has_job_title = yes
		has_minor_title = yes
		AND = {
			NOT = { dynasty = none }
			num_of_dynasty_members = 2
		}
		any_lover = { ai = no }
		any_close_relative = { ai = no }
		any_friend = { ai = no }
		any_rival = { ai = no }
		any_consort = { ai = no }
		num_of_claims = 1
		has_character_flag = eternal_life_mystic
		trait = horse
		has_character_modifier = in_seclusion
		has_character_modifier = elder_long_life_modifier
		immortal = yes
	}
}

sad_example_trigger = {
	age = 30
	is_married = no
	NOT = { num_of_children = 1 }
}

has_epidemic_disease_trigger = {
	OR = {
		trait = has_tuberculosis
		trait = has_typhoid_fever
		trait = has_typhus
		trait = has_bubonic_plague
		trait = has_measles
		trait = has_small_pox
	}
}

developing_epidemic_disease_trigger = {
	OR = {
		has_character_flag = got_tuberculosis
		has_character_flag = got_typhoid_fever
		has_character_flag = got_typhus
		has_character_flag = got_bubonic_plague
		has_character_flag = got_measles
		has_character_flag = got_small_pox
	}
}

can_be_prophet_of_doom_trigger = {
	is_adult = yes
	is_married = no
	trait = zealous
	is_landed = no
	
	OR = {
		trait = ambitious
		trait = misguided_warrior
		trait = elusive_shadow
		trait = lunatic
		trait = possessed
		trait = paranoid
		trait = stubborn
	}
	NOR = {
		trait = content
		trait = cynical
		trait = temperate
		is_main_spouse = yes
		is_landed = yes
		is_close_relative = ROOT
	}
	ai = yes
}

death_murder_trigger = {
	OR = {
		death_murder_unknown_trigger = yes
		death_murder_known_trigger = yes
	}
	
}

death_murder_unknown_trigger = {
	OR = {
		death_reason = death_murder_unknown
		death_reason = death_murder_unknown_poison
		death_reason = death_murder_unknown_fall
		death_reason = death_murder_unknown_arrow
		death_reason = death_murder_unknown_beheading
		death_reason = death_murder_unknown_snakes
		death_reason = death_murder_unknown_strangle

		death_reason = death_murder_unknown_fear
		death_reason = death_murder_unknown_lightning
		death_reason = death_murder_unknown_combustion
		death_reason = death_murder_unknown_crows
		death_reason = death_murder_unknown_possessed_fall
	}	
}

death_murder_known_trigger = {
	OR = {
		death_reason = death_murder
		death_reason = death_murder_poison
		death_reason = death_murder_fall
		death_reason = death_murder_drowning
		death_reason = death_murder_butchered
		death_reason = death_murder_arrow
		death_reason = death_murder_beheading
		death_reason = death_murder_snakes
		death_reason = death_murder_strangle
	}	
}

death_execution_trigger = {
	OR = {
		death_reason = death_execution
		death_reason = death_execution_crushing
		death_reason = death_execution_ash
		death_reason = death_execution_burning
		death_reason = death_execution_hdq
		death_reason = death_execution_bear
		death_reason = death_execution_lion
		death_reason = death_execution_snake_pit
		death_reason = death_execution_disembowelment
		death_reason = death_execution_boiling
		death_reason = death_execution_sawing
		death_reason = death_execution_hunt
		death_reason = death_execution_live_burial
		death_reason = death_execution_hanging
		death_reason = death_execution_immurement
		death_reason = death_execution_beheading
		death_reason = death_execution_wine
		death_reason = death_execution_poison
		death_reason = death_execution_flaying
		death_reason = death_execution_impaling
		death_reason = death_execution_tiger
		death_reason = death_execution_elephants
		death_reason = death_execution_bamboo
		death_reason = death_execution_stoning
		death_reason = death_execution_crucifixion
		death_reason = death_execution_blood_eagle
		death_reason = death_execution_scaphism
		death_reason = death_execution_drowning_pit
		death_reason = death_execution_garrotting
		death_reason = death_execution_horses
		death_reason = death_execution_back_breaking
		death_reason = death_execution_wheel
		death_reason = death_execution_boar
		death_reason = death_execution_eaten
		death_reason = death_executed_by_chinese_emperor
		death_reason = death_execution_brazen_bull
		death_reason = death_execution_macabre_banquet
	}	
}

death_sacrificed_trigger = {
	OR = {
		death_reason = death_sacrificed
		death_reason = death_sacrificed_ancestors
	}	
}

death_accident_trigger = {
	OR = {
		death_reason = death_accident
		death_reason = death_accident_generic_beast
		death_reason = death_accident_bear
		death_reason = death_accident_boar
		death_reason = death_accident_drowning
		death_reason = death_accident_arrow
		death_reason = death_accident_tiger
		death_reason = death_accident_snakes
		death_reason = death_accident_fall
	}
}

death_suicide_trigger = {
	OR = {
		death_reason = death_suicide
		death_reason = death_suicide_fall
		death_reason = death_suicide_hanging
		death_reason = death_suicide_poison
	}
}

# Very usable! If poorly named
block_general_event_trigger = {
	OR = {
		is_adult = no
		trait = incapable
		prisoner = yes
		is_inaccessible_trigger = yes
		hidden_trigger = { is_alive = no }
	}
}

gender_equality_trigger = {
	OR = {
		has_religion_feature = religion_equal
		AND = {
			is_landed = yes
			primary_title = { 
				has_law = status_of_women_4 
			}
		}
		AND = {
			is_landed = no
			liege = { primary_title = { has_law = status_of_women_4 } }
		}
		has_game_rule = {
			name = gender
			value = all
		}
	}
}

male_can_hold_minor_title_trigger = {
	trigger_if = {
		limit = {
			NOT = {
				has_game_rule = {
					name = gender
					value = all
				}
			}
		}
		is_female = no
		custom_tooltip = {
			text = tooltip_not_matriarchal_liege_religion_feature
			NOR = {
				has_religion_feature = religion_matriarchal
				liege = {
					has_religion_feature = religion_matriarchal
				}
			}
		}
	}
}

female_can_hold_minor_title_trigger = {
	trigger_if = {
		limit = {
			NOT = {
				has_game_rule = {
					name = gender
					value = all
				}
			}
		}
		is_female = yes
		OR = {
			custom_tooltip = {
				text = tooltip_feminist_liege_vanilla_religion
				AND = {
					OR = {
						culture_group = yue
						culture_group = tibetan_group
						culture_group = man
					}
					liege = { religion = ROOT }
				}
			}
			custom_tooltip = {
				text = tooltip_feminist_liege_religion_feature
				AND = {
					OR = {
						has_religion_feature = religion_equal
						has_religion_feature = religion_matriarchal
					}
					liege = {
						has_religion_feature = religion_equal
						has_religion_feature = religion_matriarchal
					}
				}
			}
			primary_title = {
				OR = {
					has_law = status_of_women_4 
					has_law = status_of_women_3 
				}
			}
			liege = {
				primary_title = {
					OR = {
						has_law = status_of_women_4
						has_law = status_of_women_3
					}
				}
			}
		}
	}
}

female_can_hold_minor_commander_title_trigger = {
	trigger_if = {
		limit = {
			NOT = {
				has_game_rule = {
					name = gender
					value = all
				}
			}
		}
		is_female = yes
		OR = {
			has_character_flag = special_marshal
			AND = {
				trait = shieldmaiden
				liege = { religion = ROOT }
			}
			AND = {
				is_member_of_any_warrior_lodge_trigger = yes
				liege = { religion = ROOT }
			}
			custom_tooltip = {
				text = tooltip_feminist_liege_vanilla_religion
				AND = {
					OR = {
						culture_group = yue
						culture_group = tibetan_group
						culture_group = man
					}
					liege = { religion = ROOT }
				}
			}
			custom_tooltip = {
				text = tooltip_feminist_liege_religion_feature
				AND = {
					OR = {
						has_religion_feature = religion_equal
						has_religion_feature = religion_matriarchal
					}
					liege = {
						has_religion_feature = religion_equal
						has_religion_feature = religion_matriarchal
					}
				}
			}
			primary_title = {
				has_law = status_of_women_4 
			}
			liege = {
				primary_title = {
					has_law = status_of_women_4
				}
			}
		}
	}
}

has_minor_deity_trigger = {
}

#Has same education as prev?
has_prev_education_trigger = {
	OR = {
		AND = {
			has_education_martial_trigger = yes
			PREV = { has_education_martial_trigger = yes }
		}
		AND = {
			has_education_diplomacy_trigger = yes
			PREV = { has_education_diplomacy_trigger = yes }
		}
		AND = {
			has_education_stewardship_trigger = yes
			PREV = { has_education_stewardship_trigger = yes }
		}
		AND = {
			has_education_intrigue_trigger = yes
			PREV = { has_education_intrigue_trigger = yes }
		}
		AND = {
			has_education_learning_trigger = yes
			PREV = { has_education_learning_trigger = yes }
		}
	}
}

useless_character_trigger = {
	OR = {
		NOT = { health = 2.5 }
		trait = lunatic
		trait = maimed
		trait = infirm
		trait = incapable
		trait = mangled
		trait = severely_injured
		trait = imbecile
		trait = inbred
	}
}

#True religion triggers
true_religion_confucian_trigger = {
	true_religion = confucian
}

true_religion_folk_trigger = {
	true_religion = folk
}

true_religion_legal_trigger = {
	true_religion = legal
}

true_religion_tianshi_trigger = {
	true_religion = tianshi
}

true_religion_taiping_trigger = {
	true_religion = taiping
}

true_religion_buddhist_trigger = {
	true_religion = buddhist
}

true_religion_animist_trigger = {
	true_religion = animist
}

true_religion_baihu_trigger = {
	true_religion = baihu
}

true_religion_baima_trigger = {
	true_religion = baima
}

true_religion_baishi_trigger = {
	true_religion = baishi
}

true_religion_huojiao_trigger = {
	true_religion = huojiao
}

true_religion_shamanist_trigger = {
	true_religion = shamanist
}

true_religion_shinto_trigger = {
	true_religion = shinto
}

true_religion_tengri_pagan_trigger = {
	true_religion = tengri_pagan
}

true_religion_group_confucian_trigger = {
	true_religion_group = chinese_religion
}

true_religion_group_tao_trigger = {
	true_religion_group = tao
}

true_religion_group_buddhist_trigger = {
	true_religion_group = buddhist_religion
}

true_religion_group_pagan_group_trigger = {
	true_religion_group = pagan_group
}

relationship_with_root_trigger = {
	OR = {
		is_lover = ROOT
		is_friend = ROOT
		is_rival = ROOT
	}
}

is_widow_or_widower_trigger = {
	is_married = no
	any_spouse_even_if_dead = {
		always = yes
	}
}

FROMs_religion_is_playable_trigger = {
	always = yes
}

ROOTs_religion_is_playable_trigger = {
	always = yes
}

ROOTs_secret_religion_is_playable_trigger = { 
	always = yes
}

###Use the actual is_<family member>_of = scope triggers now
family_of_root_trigger = { #use is_blood_relative_of_root_trigger for all relatives
	OR = {
		is_close_relative = ROOT #spouse, parents, children, siblings, grandparents, grandchildren
		cousin_of_root_trigger = yes #cousins
		sibling_child_of_root_trigger = yes #nephews, nieces
		parent_sibling_of_root_trigger = yes #aunts, uncles
		sibling_in_law_of_root_trigger = yes #brothers and sisters in law
	}
}

cousin_of_root_trigger = {
	is_cousin_of = ROOT
}

sibling_of_root_trigger = {
	sibling = ROOT
}

sibling_child_of_root_trigger = {
	is_nibling_of = ROOT
}

parent_sibling_of_root_trigger = {
	is_aunt_uncle_of = ROOT
}

grandchild_of_root_trigger = {
	is_grandchild_of = ROOT
}
sibling_in_law_of_root_trigger = {
	OR = {
		mother_even_if_dead = { any_child = { any_spouse = { character = ROOT } } }
		father_even_if_dead = { any_child = { any_spouse = { character = ROOT } } }
		any_spouse = { mother_even_if_dead = { any_child = { character = ROOT } } }
		any_spouse = { father_even_if_dead = { any_child = { character = ROOT } } }
	}
}

relative_in_law_of_root_trigger = {
	OR = {
		any_child = { any_spouse = { character = ROOT } }
		#any_spouse = { mother_even_if_dead = { any_child = { any_spouse = { character = ROOT } } } }
		#any_spouse = { father_even_if_dead = { any_child = { any_spouse = { character = ROOT } } } }
	}
}

is_murder_quest_target_of_prev_trigger = {
	PREVPREV = {
		has_quest = quest_the_assassins_assassination
		quest_target = { character = PREVPREV }
	}
}

is_murder_quest_target_of_root_trigger = {
	ROOT = {
		has_quest = quest_the_assassins_assassination
		quest_target = { character = PREVPREV }
	}
}

assassins_appropriate_target_trigger = {
	is_within_diplo_range = ROOT
	is_adult = yes
	is_quest_target = no

	OR = {
		is_ruler = no
		AND = {
			ROOT = {
				society_rank = {
					rank == 3
					society = the_assassins
				}
			}
			primary_title = { higher_real_tier_than = COUNT }
		}
		AND = {
			ROOT = {
				society_rank = {
					rank == 2
					society = the_assassins
				}
			}
			primary_title = { lower_real_tier_than = EMPEROR }
		}
		AND = {
			ROOT = {
				society_rank = {
					rank == 1
					society = the_assassins
				}
			}
			primary_title = { lower_real_tier_than = DUKE }
		}
	}
}

interesting_face_trigger = {
	OR = {
		trait = fair
		trait = groomed
		trait = ugly
		trait = uncouth
		has_scarred_trait_trigger = yes
		is_ill = yes
		trait = disfigured
		trait = blinded
		trait = one_eyed
		trait = leper
		trait = harelip
		is_strong_trigger = yes
		is_weak_trigger = yes
		trait = lunatic
		trait = possessed
		trait = rabies
		trait = horse
	}
}

can_pay_assassins_debt = {
	OR = {
		AND = {
			is_variable_equal = { which = assassins_debt value = 50 }
			wealth = 50
		}
		AND = {
			is_variable_equal = { which = assassins_debt value = 250 }
			wealth = 250
		}
		AND = {
			is_variable_equal = { which = assassins_debt value = 300 }
			wealth = 300
		}
		AND = {
			is_variable_equal = { which = assassins_debt value = 500 }
			wealth = 500
		}
	}
}

is_rich_holding = {
	OR = {
		calc_true_if = {
			amount = 2
			has_building = ca_keep_3
			has_building = ca_keep_4
			has_building = ca_keep_5
			has_building = ca_keep_6
			has_building = ca_town_3
			has_building = ca_town_4
			has_building = ca_town_5
			has_building = ca_town_6
			has_building = tp_monastery_3
			has_building = tp_monastery_4
			has_building = tp_monastery_5
			has_building = tp_monastery_6
			has_building = tp_town_3
			has_building = tp_town_4
			has_building = tp_town_5
			has_building = tp_town_6
		}
		has_building = ct_marketplace_3
		has_building = ct_marketplace_4
		has_building = ct_marketplace_5
		has_building = ct_marketplace_6

	}
}
is_richer_holding = {
	
	OR = {
		calc_true_if = {
			amount = 2
			has_building = ca_keep_5
			has_building = ca_keep_6
			has_building = ca_town_5
			has_building = ca_town_6
			has_building = tp_monastery_5
			has_building = tp_monastery_6
			has_building = tp_town_5
			has_building = tp_town_6
		}
		has_building = ct_marketplace_5
		has_building = ct_marketplace_6
	}
}

has_society_currency_trivial_trigger = {
	society_currency >= 15
}

has_society_currency_tiny_trigger = {
	society_currency >= 50
}

has_society_currency_minor_trigger = {
	society_currency >= 150
}

has_society_currency_medium_trigger = {
	society_currency >= 300
}

has_society_currency_major_trigger = {
	society_currency >= 500
}

is_ill_trigger = {
	OR = {
		has_disease_trigger = yes
	}
}

is_devil_worshiper_trigger = {
	custom_tooltip = {
		text = IS_DEVIL_WORSHIPPER_TRIGGER
		always = no
	}
}

has_positive_congenital_trigger = {
	OR = {
		trait = strong
		trait = fair
		trait = quick
		trait = genius
	}
}

has_negative_congenital_trigger = {
	OR = {
		trait = ugly
		trait = clubfooted
		trait = hunchback
		trait = dwarf
		trait = giant
		trait = harelip
		trait = stutter
		trait = lisp
		trait = slow
		trait = inbred
		trait = weak
		trait = imbecile
	}
}

is_dharmic_monastic_member_trigger = {
	OR = {
		society_member_of = monastic_order_buddhist
	}
}

is_monastic_member_trigger = {
	OR = {
		is_dharmic_monastic_member_trigger = yes
	}
}

is_ascetic_trigger = {
	always = no
}

is_virgin_trigger = {
	NOR = {
		any_lover = { always = yes }
		any_child_even_if_dead = { always = yes }
		any_spouse_even_if_dead = { always = yes }
		has_focus = focus_seduction
		is_pregnant = yes
		trait = pregnant
		trait = lustful
		trait = hedonist
		trait = seducer
		trait = seductress
		trait = lovers_pox
	}
	OR = {
		NOT = { age = 25 }
		trait = celibate
		trait = chaste
		trait = shy
		is_ascetic_trigger = yes
	}
}

print_scope_trigger = {
	log = "------------------------------"
	log = "- Printing the current scope -"
	log = "- This: [This.GetName][This.GetBestName]"
	log = "- Root: [Root.GetName][Root.GetBestName]"
	log = "- Prev: [Prev.GetName][Prev.GetBestName]"
	log = "- PrevPrev: [PrevPrev.GetName][PrevPrev.GetBestName]"
	log = "- PrevPrevPrev: [PrevPrevPrev.GetName][PrevPrevPrev.GetBestName]"
	log = "- PrevPrevPrevPrev: [PrevPrevPrevPrev.GetName][PrevPrevPrevPrev.GetBestName]"
	log = "- From: [From.GetName][From.GetBestName]"
	log = "- FromFrom: [FromFrom.GetName][FromFrom.GetBestName]"
	log = "- FromFromFrom: [FromFromFrom.GetName][FromFromFrom.GetBestName]"
	log = "- FromFromFromFrom: [FromFromFromFrom.GetName][FromFromFromFrom.GetBestName]"
	log = "- Event_target:test_target1: [test_target1.GetName][test_target1.GetBestName]"
	log = "- Event_target:test_target2: [test_target2.GetName][test_target2.GetBestName]"
	log = "- Event_target:test_target3: [test_target3.GetName][test_target3.GetBestName]"
	log = "------------------------------"
}

is_secret_religious_society_member_trigger = {
	society_member_of = secret_religious_cult
}

is_confucian_secret_religious_society_member_trigger = {
	society_member_of = secret_religious_cult
	secret_religion_group = chinese_religion
}

is_tao_secret_religious_society_member_trigger = {
	society_member_of = secret_religious_cult
	secret_religion_group = tao
}

is_buddhist_secret_religious_society_member_trigger = {
	society_member_of = secret_religious_cult
	secret_religion_group = buddhist_religion
}

is_tengri_secret_religious_society_member_trigger = {
	society_member_of = secret_religious_cult
	society_member_of = secret_religious_society_tengri_pagan
}

is_openly_of_prevs_secret_religion_trigger = {
	religion = { target = PREV target_type = secret }
}

is_openly_of_roots_secret_religion_trigger = {
	religion = { target = ROOT target_type = secret }
}

has_sympathy_for_true_religion_of_prev_trigger = {
	OR = {
		AND = {
			trait = sympathy_confucian
			PREV = { true_religion_group_confucian_trigger = yes }
		}
		AND = {
			trait = sympathy_tao
			PREV = { true_religion_group_tao_trigger = yes }
		}
		AND = {
			trait = sympathy_pagans
			PREV = { true_religion_group_pagan_group_trigger = yes }
		}
		AND = {
			trait = sympathy_buddhist
			PREV = { true_religion_group_buddhist_trigger = yes }
		}
	}
}

has_sympathy_for_true_religion_of_root_trigger = { 
	OR = {
		AND = {
			trait = sympathy_confucian
			ROOT = { true_religion_group_confucian_trigger = yes }
		}
		AND = {
			trait = sympathy_tao
			ROOT = { true_religion_group_tao_trigger = yes }
		}
		AND = {
			trait = sympathy_pagans
			ROOT = { true_religion_group_pagan_group_trigger = yes }
		}
		AND = {
			trait = sympathy_buddhist
			ROOT = { true_religion_group_buddhist_trigger = yes }
		}
	}
}

ok_sr_induction_mission_target_trigger = {
	is_adult = yes
	NOT = { secret_religion = ROOT }
	NOT = { religion = { target_type = secret target = ROOT } }

	prisoner = no
	NOT = { trait = incapable }
	is_inaccessible_trigger = no
	NOT = { has_character_modifier = secret_religion_sympathy_timer }
	OR = {
		religion_group = { target_type = secret target = ROOT }
		has_sympathy_for_true_religion_of_root_trigger = yes
	}
}

ok_sr_sympathy_mission_target_trigger = {
	has_secret_religion_trait_trigger = no
	ROOT = {
		NOT = { secret_religion = { target_type = public target = PREV } }
		NOR = {
			AND = {
				true_religion_group = chinese_religion
				PREV = { trait = sympathy_confucian }
			}
			AND = {
				true_religion_group = tao
				PREV = { trait = sympathy_tao }
			}
			AND = {
				true_religion_group = pagan_group
				PREV = { trait = sympathy_pagans }
			}
			AND = {
				true_religion_group = buddhist_religion
				PREV = { trait = sympathy_buddhist }
			}
		}
	}
	ROOT = { PREV = { is_openly_of_prevs_secret_religion_trigger = no } }
	ROOT = { PREV = { has_sympathy_for_true_religion_of_prev_trigger = no } }
	prisoner = no
	is_adult = yes
	NOT = { trait = incapable }
	is_inaccessible_trigger = no
	NOT = { has_character_modifier = secret_religion_sympathy_timer }
}

has_prevs_secret_religion_truly_trigger = {
	secret_religion = { target = PREV target_type = true }
}

has_roots_secret_religion_truly_trigger = {
	secret_religion = { target = ROOT target_type = true }
}

has_my_liege_secret_religion_truly_trigger = {
	secret_religion = { target = event_target:my_liege target_type = true }
}

is_in_prevs_interesting_society_trigger = {
	OR = {
		AND = {
			society_member_of = secret_religious_society_buddhist
			PREV = { interested_in_society = secret_religious_society_buddhist }
		}
		AND = {
			society_member_of = secret_religious_society_tengri_pagan
			PREV = { interested_in_society = secret_religious_society_tengri_pagan }
		}
	}
}

shares_prevs_secret_religion_trigger = {
	secret_religion = PREV
}

character_knows_prev_trigger = {
	OR = {
		is_close_relative = PREV
		is_lover = PREV
		is_friend = PREV
		is_rival = PREV
		any_courtier_or_vassal = { character = PREVPREV }
		is_liege_or_above = PREV
		dynasty = PREV
		same_liege = PREV
		AND = {
			is_within_diplo_range = PREV
			PREV = { independent = yes } 
		}
	}
}

shares_true_religion_group_with_prev_trigger = {
	true_religion_group = PREV
}

is_openly_of_prevs_true_religion_group = {
	religion_group = { target = PREV target_type = true }
}

is_visible_to_self_trigger = { #For hidden modifiers
	custom_tooltip = {
		text =  is_visible_to_self_trigger_tooltip
		character = FROM
	}
}

#has_any_char_old_religion = {
#}

can_add_admin_bonus_trigger = {
	NAND = {
		has_province_modifier = harvest_festivals
		has_province_modifier = inspired_peasantry
		has_province_modifier = new_roads
	}
}

can_be_sabotaged_trigger = {
	NAND = {
		has_province_modifier = sabotaged_buildings
		has_province_modifier = sabotaged_defences
		has_province_modifier = sabotaged_unrest
	}
}

has_assassins_prerequisites = {
	age = 16
	always = no
	OR = {
		is_female = no
		has_game_rule = {
			name = gender
			value = all
		}
	}
}

has_common_devilworship_prerequisites = {
	age = 16
	custom_tooltip = {
		text = must_be_a_sinner_tooltip
		hidden_tooltip = {
			OR = {
				has_impious_trait_trigger = yes
				has_vice_trigger = yes
				trait = drunkard
				trait = possessed
				trait = lunatic
			}
		}
	}
}

has_satanists_prerequisites = {
	has_common_devilworship_prerequisites = yes
}

has_plaguebringers_prerequisites = {
	has_common_devilworship_prerequisites = yes
	religion_openly_tengri_or_reformed_trigger = yes
}

same_society_rank_as_prev_trigger = {
	OR = {
		AND = {
			society_rank == 1
			PREV = { society_rank == 1 }
		}
		AND = {
			society_rank == 2
			PREV = { society_rank == 2 }
		}
		AND = {
			society_rank == 3
			PREV = { society_rank == 3 }
		}
		AND = {
			society_rank == 4
			PREV = { society_rank == 4 }
		}
	}
}

higher_society_rank_than_prev_trigger = {
	OR = {
		AND = {
			PREV = { society_rank == 1 }
			society_rank > 1
		}
		AND = {
			PREV = { society_rank == 2 }
			society_rank > 2
		}
		AND = {
			PREV = { society_rank == 3 }
			society_rank > 3
		}
	}
}

#returns true if scoped character already likes ROOT and could be physically attracted to them
possibly_romantically_interested_in_ROOT_trigger = {
	NOT = { is_rival = ROOT }
	NOT = { is_lover = ROOT }
	attacted_to_root_trigger = yes
	OR = {
		opinion = { who = ROOT value = 45 }
		has_opinion_modifier = { who = ROOT modifier = opinion_budding_romance }
	}
}

#returns true if scoped character is already liked by ROOT and ROOT could be physically attracted to them
ROOT_possibly_romantically_interested_trigger = {
	NOT = { is_rival = ROOT }
	NOT = { is_lover = ROOT }
	root_attraction_trigger = yes
	OR = { 
		reverse_opinion = { who = ROOT value = 45 }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_budding_romance }
	}
}

#returns true if scoped character and ROOT are somewhat likely to fancy each other
possibly_romantically_interested_in_each_other_trigger = {
	possibly_romantically_interested_in_ROOT_trigger = yes
	ROOT_possibly_romantically_interested_trigger = yes
}

looting_artifact_event_religious_artifacts_trigger = {
	FROM = {
		any_artifact = {
			has_artifact_flag = looted_artifact_tooltip_1
			has_artifact_flag = religious
		}
		NAND = {
			any_artifact = {
				has_artifact_flag = looted_artifact_tooltip_1
				has_artifact_flag = buddhist
				ROOT = { religion = buddhist }
			}
		}
		NAND = {
			any_artifact = {
				has_artifact_flag = looted_artifact_tooltip_1
				has_artifact_flag = confucian
				ROOT = { religion_group = chinese_religion }
			}
		}
		NAND = {
			any_artifact = {
				has_artifact_flag = looted_artifact_tooltip_1
				has_artifact_flag = tao
				ROOT = { religion_group = tao }
			}
		}
		NAND = {
			any_artifact = {
				has_artifact_flag = looted_artifact_tooltip_1
				has_artifact_flag = tengri_pagan
				ROOT = { religion = tengri_pagan }
			}
		}
		NAND = {
			any_artifact = {
				has_artifact_flag = looted_artifact_tooltip_1
				has_artifact_flag = pagan_group
				ROOT = { religion_group = pagan_group }
			}
		}
	}
}

have_duplicate_goldsmith_artifacts_flag_okay_trigger = {
	OR = {
		AND = {
	    	OR = {
	    		religion = confucian
	    		religion = legal
			}
			AND = 
			{
		       	has_artifact = the_lily_crown
       			has_artifact = noble_scepter
        		has_artifact = engraved_sword
		  	}
		}
		AND = {
	        OR = {
	        	religion = folk
	        	religion = huojiao
	        }
	        AND = {
		        has_artifact = engraved_dagger
        		has_artifact = silver_bracelets
		    }
		}
        AND = {
			religion_group = buddhist_religion
        	AND = {
        		has_artifact = engraved_dagger
        		has_artifact = collar_of_pearls
        	}
        }
        AND = {
	        religion_group = tao
			AND = {
			    has_artifact = circlet_of_twilight
        		has_artifact = silver_staff
        	}
        }
       	AND = {
	        religion = shinto
		    AND = {
		        has_artifact = iron_crown
      		    has_artifact = engraved_sword
        	}
        }
        AND = {
        	has_artifact = engraved_crown
        	has_artifact = ceremonial_axe
       	}
    }
}

have_duplicate_goldsmith_artifacts_flag_good_trigger = {
	OR = {
		AND = {
		    OR = {
	    		religion = confucian
	    		religion = legal
			}
			AND = 
			{
		       	has_artifact = crown_of_pearls
        		has_artifact = ruby_scepter
        		has_artifact = golden_sword
		  	}
		}
		AND = {
	        OR = {
	        	religion = folk
	        	religion = huojiao
	        }
	        AND = {
		        has_artifact = bejeweled_dagger
        		has_artifact = golden_bracelets
		    }
		}
        AND = {
	        religion_group = buddhist_religion
        	AND = {
        		has_artifact = bejeweled_dagger
        		has_artifact = necklace_of_radiance
        	}
        }
        AND = {
	        religion_group = tao
			AND = {
			    has_artifact = circlet_of_the_heavens
        		has_artifact = golden_staff
        	}
        }
       	AND = {
	        religion = shinto
		    AND = {
		        has_artifact = crown_of_the_sea
        		has_artifact = golden_sword
        	}
        }
        AND = {
        	has_artifact = amber_crown
        	has_artifact = obsidian_axe
       	}
    }
}

have_duplicate_goldsmith_artifacts_flag_expensive_trigger = {
	OR = {
		AND = {
		    OR = {
		       	religion = confucian
		       	religion = legal
			}
			AND = 
			{
		       	has_artifact = crown_of_majesty
		     	has_artifact = emerald_scepter
		    	has_artifact = sword_of_heroes
		  	}
		}
		AND = {
	        OR = {
	        	religion = folk
	        	religion = huojiao
	        }
	        AND = {
		        has_artifact = dagger_of_glory
		        has_artifact = ruby_bracelets
		    }
		}
        AND = {
	        religion_group = buddhist_religion
        	AND = {
        		has_artifact = dagger_of_glory
        		has_artifact = celestial_necklace
        	}
        }
        AND = {
	        religion_group = tao
			AND = {
			    has_artifact = circlet_of_the_heavens
			    has_artifact = staff_of_majesty
        	}
        }
       	AND = {
	        religion = shinto
		    AND = {
		        has_artifact = crown_of_crows
		        has_artifact = sword_of_heroes
        	}
        }
        AND = {
        	has_artifact = heros_crown
        	has_artifact = axe_of_the_ancestors
       	}
    }
}

have_duplicate_goldsmith_artifacts_flag_amazing_trigger = {
	OR = {
		AND = {
		    OR = {
		       	religion = confucian
		       	religion = legal
			}
			AND = 
			{
		       	has_artifact = crown_of_majesty_2
		     	has_artifact = emerald_scepter_2
		    	has_artifact = sword_of_heroes_2
		  	}
		}
		AND = {
	        OR = {
	        	religion = folk
	        	religion = huojiao
	        }
	        AND = {
		        has_artifact = dagger_of_glory_2
		        has_artifact = ruby_bracelets_2
		    }
		}
        AND = {
	        religion_group = buddhist_religion
        	AND = {
        		has_artifact = dagger_of_glory_2
        		has_artifact = celestial_necklace_2
        	}
        }
        AND = {
	        religion_group = tao
			AND = {
			    has_artifact = circlet_of_the_heavens_2
			    has_artifact = staff_of_majesty_2
        	}
        }
       	AND = {
	        religion = shinto
		    AND = {
		        has_artifact = crown_of_crows_2
		        has_artifact = sword_of_heroes_2
        	}
        }
        AND = {
        	has_artifact = heros_crown_2
        	has_artifact = axe_of_the_ancestors_2
       	}
    }
}

have_all_armorsmith_artifacts_all_flags_trigger = {
	has_artifact = armor_tier_4_guardian
	has_artifact = armor_tier_4_champion
	has_artifact = armor_tier_4_warden
	has_artifact = armor_tier_3_guardian
	has_artifact = armor_tier_3_champion
	has_artifact = armor_tier_3_warden
	has_artifact = armor_tier_2
	has_artifact = armor_tier_1
}

have_all_weaponsmith_artifacts_all_flags_trigger = {
	have_all_weaponsmith_swords_all_flags_trigger = yes
	have_all_weaponsmith_scimitar_all_flags_trigger = yes
	have_all_weaponsmith_bow_all_flags_trigger = yes
	have_all_weaponsmith_lance_all_flags_trigger = yes
	have_all_weaponsmith_axe_all_flags_trigger = yes
	have_all_weaponsmith_mace_all_flags_trigger = yes
}

have_all_weaponsmith_mace_all_flags_trigger = {
	has_artifact = mace_tier_4_foe_hammer
	has_artifact = mace_tier_3_foe_hammer
    has_artifact = mace_tier_4_bone_breaker
    has_artifact = mace_tier_3_bone_breaker
    has_artifact = mace_tier_4_shatterer
    has_artifact = mace_tier_3_shatterer
    has_artifact = mace_tier_2_new
    has_artifact = mace_tier_1_new
}

have_all_weaponsmith_axe_all_flags_trigger = {
	has_artifact = axe_tier_4_cleaver
	has_artifact = axe_tier_3_cleaver
	has_artifact = axe_tier_4_ravager
	has_artifact = axe_tier_3_ravager
	has_artifact = axe_tier_4_marauder
	has_artifact = axe_tier_3_marauder
	has_artifact = axe_tier_2_new
    has_artifact = axe_tier_1_new
}

have_all_weaponsmith_lance_all_flags_trigger = {
	has_artifact = lance_tier_4_impaler
	has_artifact = lance_tier_3_impaler
	has_artifact = lance_tier_4_trident
	has_artifact = lance_tier_3_trident
	has_artifact = lance_tier_4_piercer
	has_artifact = lance_tier_3_piercer
	has_artifact = lance_tier_2_new
    has_artifact = lance_tier_1_new
}

have_all_weaponsmith_swords_all_flags_trigger = {
	has_artifact = sword_tier_4_heartseeker
	has_artifact = sword_tier_3_heartseeker
	has_artifact = sword_tier_4_vengeance
    has_artifact = sword_tier_3_vengeance
    has_artifact = sword_tier_4_fury
    has_artifact = sword_tier_3_fury
    has_artifact = sword_tier_2_new
    has_artifact = sword_tier_1_new
}

have_all_weaponsmith_scimitar_all_flags_trigger = {
	has_artifact = scimitar_tier_4_golden
	has_artifact = scimitar_tier_3_golden
	has_artifact = scimitar_tier_4_fortune
	has_artifact = scimitar_tier_3_fortune
	has_artifact = scimitar_tier_4_conquest
	has_artifact = scimitar_tier_3_conquest
	has_artifact = scimitar_tier_2_new
    has_artifact = scimitar_tier_1_new
}

have_all_weaponsmith_bow_all_flags_trigger = {
	has_artifact = bow_tier_4_silent_wind
	has_artifact = bow_tier_3_silent_wind
	has_artifact = bow_tier_4_lightning
	has_artifact = bow_tier_3_lightning
	has_artifact = bow_tier_4_eagle
	has_artifact = bow_tier_3_eagle
	has_artifact = bow_tier_2_new
	has_artifact = bow_tier_1_new
}

have_duplicate_smith_artifacts_flag_okay_trigger = {
	OR = {
		AND = {
		    FROM = { has_character_flag = weapon_sword }
			has_artifact = sword_tier_1_new
		}
		AND = {
	        FROM = { has_character_flag = weapon_scimitar } 
        	has_artifact = scimitar_tier_1_new
		}
        AND = {
	        FROM = { has_character_flag = weapon_lance } 
        	has_artifact = lance_tier_1_new
        }
        AND = {
	        FROM = { has_character_flag = weapon_axe } 
        	has_artifact = axe_tier_1_new
        }
       	AND = {
	        FROM = { has_character_flag = weapon_mace } 
        	has_artifact = mace_tier_1_new
        }
        AND = {
        	FROM = { has_character_flag = weapon_bow } 
        	has_artifact = bow_tier_1_new
       	}
       	AND = {
        	FROM = { has_character_flag = armor_set } 
       		has_artifact = armor_tier_1
       	}
    }
}

have_duplicate_smith_artifacts_flag_good_trigger = {
	OR = {
		AND = {
		    FROM = { has_character_flag = weapon_sword }
			has_artifact = sword_tier_2_new
		}
		AND = {
	        FROM = { has_character_flag = weapon_scimitar } 
        	has_artifact = scimitar_tier_2_new
		}
        AND = {
	        FROM = { has_character_flag = weapon_lance } 
        	has_artifact = lance_tier_2_new
        }
        AND = {
	        FROM = { has_character_flag = weapon_axe } 
        	has_artifact = axe_tier_2_new
        }
       	AND = {
	        FROM = { has_character_flag = weapon_mace } 
        	has_artifact = mace_tier_2_new
        }
        AND = {
        	FROM = { has_character_flag = weapon_bow } 
        	has_artifact = bow_tier_2_new
       	}
       	AND = {
        	FROM = { has_character_flag = armor_set } 
       		has_artifact = armor_tier_2
       	}
    }
}

have_duplicate_smith_artifacts_flag_amazing_optionA_trigger = {
	OR = {
		AND = {
		    FROM = { has_character_flag = weapon_sword }
			has_artifact = sword_tier_4_heartseeker
		}
		AND = {
	        FROM = { has_character_flag = weapon_scimitar } 
        	has_artifact = scimitar_tier_4_golden
		}
        AND = {
	        FROM = { has_character_flag = weapon_lance } 
        	has_artifact = lance_tier_4_impaler
        }
        AND = {
	        FROM = { has_character_flag = weapon_axe } 
        	has_artifact = axe_tier_4_cleaver
        }
       	AND = {
	        FROM = { has_character_flag = weapon_mace } 
        	has_artifact = mace_tier_4_foe_hammer
        }
        AND = {
        	FROM = { has_character_flag = weapon_bow } 
        	has_artifact = bow_tier_4_silent_wind
       	}
       	AND = {
        	FROM = { has_character_flag = armor_set } 
       		has_artifact = armor_tier_4_guardian
       	}
    }
}

have_duplicate_smith_artifacts_flag_amazing_optionB_trigger = {
	OR = {
		AND = {
		    FROM = { has_character_flag = weapon_sword }
			has_artifact = sword_tier_4_vengeance
		}
		AND = {
	        FROM = { has_character_flag = weapon_scimitar } 
        	has_artifact = scimitar_tier_4_fortune
		}
        AND = {
	        FROM = { has_character_flag = weapon_lance } 
        	has_artifact = lance_tier_4_trident
        }
        AND = {
	        FROM = { has_character_flag = weapon_axe } 
        	has_artifact = axe_tier_4_ravager
        }
       	AND = {
	        FROM = { has_character_flag = weapon_mace } 
        	has_artifact = mace_tier_4_bone_breaker
        }
        AND = {
        	FROM = { has_character_flag = weapon_bow } 
        	has_artifact = bow_tier_4_lightning
       	}
       	AND = {
        	FROM = { has_character_flag = armor_set } 
       		has_artifact = armor_tier_4_champion
       	}
    }
}

have_duplicate_smith_artifacts_flag_amazing_optionC_trigger = {
	OR = {
		AND = {
		    FROM = { has_character_flag = weapon_sword }
			has_artifact = sword_tier_4_fury
		}
		AND = {
	        FROM = { has_character_flag = weapon_scimitar } 
        	has_artifact = scimitar_tier_4_conquest
		}
        AND = {
	        FROM = { has_character_flag = weapon_lance } 
        	has_artifact = lance_tier_4_piercer
        }
        AND = {
	        FROM = { has_character_flag = weapon_axe } 
        	has_artifact = axe_tier_4_marauder
        }
       	AND = {
	        FROM = { has_character_flag = weapon_mace } 
        	has_artifact = mace_tier_4_shatterer
        }
        AND = {
        	FROM = { has_character_flag = weapon_bow } 
        	has_artifact = bow_tier_4_eagle
       	}
       	AND = {
        	FROM = { has_character_flag = armor_set } 
       		has_artifact = armor_tier_4_warden
       	}
    }
}

have_duplicate_smith_artifacts_flag_expensive_optionA_trigger = {
	OR = {
		AND = {
		    FROM = { has_character_flag = weapon_sword }
			has_artifact = sword_tier_3_heartseeker
		}
		AND = {
	        FROM = { has_character_flag = weapon_scimitar } 
        	has_artifact = scimitar_tier_3_golden
		}
        AND = {
	        FROM = { has_character_flag = weapon_lance } 
        	has_artifact = lance_tier_3_impaler
        }
        AND = {
	        FROM = { has_character_flag = weapon_axe } 
        	has_artifact = axe_tier_3_cleaver
        }
       	AND = {
	        FROM = { has_character_flag = weapon_mace } 
        	has_artifact = mace_tier_3_foe_hammer
        }
        AND = {
        	FROM = { has_character_flag = weapon_bow } 
        	has_artifact = bow_tier_3_silent_wind
       	}
       	AND = {
        	FROM = { has_character_flag = armor_set } 
       		has_artifact = armor_tier_3_guardian
       	}
    }
}

have_duplicate_smith_artifacts_flag_expensive_optionB_trigger = {
	OR = {
		AND = {
		    FROM = { has_character_flag = weapon_sword }
			has_artifact = sword_tier_3_vengeance
		}
		AND = {
	        FROM = { has_character_flag = weapon_scimitar } 
        	has_artifact = scimitar_tier_3_fortune
		}
        AND = {
	        FROM = { has_character_flag = weapon_lance } 
        	has_artifact = lance_tier_3_trident
        }
        AND = {
	        FROM = { has_character_flag = weapon_axe } 
        	has_artifact = axe_tier_3_ravager
        }
       	AND = {
	        FROM = { has_character_flag = weapon_mace } 
        	has_artifact = mace_tier_3_bone_breaker
        }
        AND = {
        	FROM = { has_character_flag = weapon_bow } 
        	has_artifact = bow_tier_3_lightning
       	}
       	AND = {
        	FROM = { has_character_flag = armor_set } 
       		has_artifact = armor_tier_3_champion
       	}
    }
}

have_duplicate_smith_artifacts_flag_expensive_optionC_trigger = {
	OR = {
		AND = {
		    FROM = { has_character_flag = weapon_sword }
			has_artifact = sword_tier_3_fury
		}
		AND = {
	        FROM = { has_character_flag = weapon_scimitar } 
        	has_artifact = scimitar_tier_3_conquest
		}
        AND = {
	        FROM = { has_character_flag = weapon_lance } 
        	has_artifact = lance_tier_3_piercer
        }
        AND = {
	        FROM = { has_character_flag = weapon_axe } 
        	has_artifact = axe_tier_3_marauder
        }
       	AND = {
	        FROM = { has_character_flag = weapon_mace } 
        	has_artifact = mace_tier_3_shatterer
        }
        AND = {
        	FROM = { has_character_flag = weapon_bow } 
        	has_artifact = bow_tier_3_eagle
       	}
       	AND = {
        	FROM = { has_character_flag = armor_set } 
       		has_artifact = armor_tier_3_warden
       	}
    }
}

can_be_asked_to_leave_court_trigger = {
	NOR = {
		custom_tooltip = { #To avoid double negation
			text = is_a_child_tt
			is_adult = no
		}
		prisoner = yes
		trait = incapable
		is_ruler = yes
		has_job_title = yes

		#custom tooltip for minor titles
		custom_tooltip = {
			text = is_regent_commander_or_physician_tt
			OR = {
				has_minor_title = title_regent
				has_minor_title = title_appointed_regent
				has_minor_title = title_commander
				has_minor_title = title_court_physician
			}
		}

		custom_tooltip = {
			text = is_spouse_consort_or_of_your_dynasty
			OR = {
				dynasty = FROM
				is_married = FROM
				is_consort = FROM
				is_close_relative = FROM
				sibling = FROM
			}
		}

		is_primary_heir = yes

		#trigger_if has Reaper's Due
		trigger_if = {
			limit = { has_dlc = "Reapers"}
			in_seclusion = yes
		}
		custom_tooltip = {
			text = is_inaccessible_tt
			OR = {
				has_character_flag = flag_holding_great_tribal_festival
				trait = in_hiding
				trait = travelling
				trait = troubled_pregnancy
				trait = pregnancy_finishing
				has_character_modifier = mother_minor_rest
				has_character_modifier = in_meditation
				has_character_modifier = doing_penance
				has_character_modifier = out_traveling
			}
		}

		#Special circumstances
		custom_tooltip = {
			text = is_character_in_important_chain_of_events_tt
			has_character_flag = eternal_life_mystic
			has_character_flag = immortal_rival
			has_character_flag = flag_special_event_character
			has_character_flag = is_death
			is_immune_to_pruning = yes
			historical = yes
		}

		trigger_if = {
			limit = {
				trait = horse
			}
			trait = horse
		}
	}
}

has_a_seer_modifier_trigger = {
	OR = {
		has_character_modifier = fulfilled_vision_great
		has_character_modifier = fulfilled_vision_ok
		has_character_modifier = fulfilled_vision_bad
		has_character_modifier = fulfilled_vision_worst
	}
}

has_an_omen_modifier_trigger = {
	OR = {
		has_character_modifier = good_battle_omen
		has_character_modifier = good_relationship_omen
		has_character_modifier = good_power_omen
		has_character_modifier = bad_battle_omen
		has_character_modifier = bad_relationship_omen
		has_character_modifier = bad_power_omen
	}
}

has_positive_omen_modifier_trigger = {
	OR = {
		has_character_modifier = good_battle_omen
		has_character_modifier = good_relationship_omen
		has_character_modifier = good_power_omen
	}
}

has_negative_omen_modifier_trigger = {
	OR = {
		has_character_modifier = bad_battle_omen
		has_character_modifier = bad_relationship_omen
		has_character_modifier = bad_power_omen
	}
}

has_battle_omen_modifier_trigger = {
	OR = {
		has_character_modifier = good_battle_omen
		has_character_modifier = bad_battle_omen
	}
}

has_relationship_omen_modifier_trigger = {
	OR = {
		has_character_modifier = good_relationship_omen
		has_character_modifier = bad_relationship_omen
	}
}

has_power_omen_modifier_trigger = {
	OR = {
		has_character_modifier = good_power_omen
		has_character_modifier = bad_power_omen
	}
}

has_bottom_tier_education_trait_trigger = {
	OR = {
		trait = naive_appeaser
		trait = misguided_warrior
		trait = indulgent_wastrel
		trait = amateurish_plotter
		trait = detached_priest
	}
}

has_2nd_tier_education_trait_trigger = {
	OR = {
		trait = underhanded_rogue
		trait = tough_soldier
		trait = thrifty_clerk
		trait = flamboyant_schemer
		trait = martial_cleric
	}
}

has_3rd_tier_education_trait_trigger = {
	custom_tooltip = {
		text = tribute_interaction_level4_education_tt
		hidden_trigger = {	
			OR = {
				trait = charismatic_negotiator
				trait = skilled_tactician
				trait = fortune_builder
				trait = intricate_webweaver
				trait = scholarly_theologian
			}
		}
	}
}

has_top_tier_education_trait_trigger = {
	custom_tooltip = {
		text = tribute_interaction_level4_education_tt
		hidden_trigger = {
			OR = {
				trait = elusive_shadow
				trait = grey_eminence
				trait = midas_touched
				trait = brilliant_strategist
				trait = mastermind_theologian
			}
		}
	}
}

has_medium_education_trait_trigger = {
	OR = {
		has_2nd_tier_education_trait_trigger = yes
		has_3rd_tier_education_trait_trigger = yes
	}
}

has_childhood_horoscope_modifier_trigger = {
	OR = {
		has_character_modifier = guided_by_horoscope_diplomacy
		has_character_modifier = guided_by_horoscope_martial
		has_character_modifier = guided_by_horoscope_stewardship
		has_character_modifier = guided_by_horoscope_intrigue
		has_character_modifier = guided_by_horoscope_learning
	}
}

is_born_in_january_trigger = {
	month_of_birth = 1
	NOT = { month_of_birth = 2 }
}
is_born_in_february_trigger = {
	month_of_birth = 2
	NOT = { month_of_birth = 3 }
}
is_born_in_march_trigger = {
	month_of_birth = 3
	NOT = { month_of_birth = 4 }
}
is_born_in_april_trigger = {
	month_of_birth = 4
	NOT = { month_of_birth = 5 }
}
is_born_in_may_trigger = {
	month_of_birth = 5
	NOT = { month_of_birth = 6 }
}
is_born_in_june_trigger = {
	month_of_birth = 6
	NOT = { month_of_birth = 7 }
}
is_born_in_july_trigger = {
	month_of_birth = 7
	NOT = { month_of_birth = 8 }
}
is_born_in_august_trigger = {
	month_of_birth = 8
	NOT = { month_of_birth = 9 }	
}
is_born_in_september_trigger = {
	month_of_birth = 9
	NOT = { month_of_birth = 10 }	
}
is_born_in_october_trigger = {
	month_of_birth = 10
	NOT = { month_of_birth = 11 }	
}
is_born_in_november_trigger = {
	month_of_birth = 11
	NOT = { month_of_birth = 12 }	
}
is_born_in_december_trigger = {
	month_of_birth = 12
}

is_born_under_rat_trigger = {
	OR = {
		AND={
			year_of_birth = 4
			NOT={ year_of_birth = 5 }
		}
		AND={
			year_of_birth = 16
			NOT={ year_of_birth = 17 }
		}
		AND={
			year_of_birth = 28
			NOT={ year_of_birth = 29 }
		}
		AND={
			year_of_birth = 40
			NOT={ year_of_birth = 41 }
		}
		AND={
			year_of_birth = 52
			NOT={ year_of_birth = 53 }
		}
		AND={
			year_of_birth = 64
			NOT={ year_of_birth = 65 }
		}
		AND={
			year_of_birth = 76
			NOT={ year_of_birth = 77 }
		}
		AND={
			year_of_birth = 88
			NOT={ year_of_birth = 89 }
		}
		AND={
			year_of_birth = 100
			NOT={ year_of_birth = 101 }
		}
		AND={
			year_of_birth = 112
			NOT={ year_of_birth = 113 }
		}
		AND={
			year_of_birth = 124
			NOT={ year_of_birth = 125 }
		}
		AND={
			year_of_birth = 136
			NOT={ year_of_birth = 137 }
		}
		AND={
			year_of_birth = 148
			NOT={ year_of_birth = 149 }
		}
		AND={
			year_of_birth = 160
			NOT={ year_of_birth = 161 }
		}
		AND={
			year_of_birth = 172
			NOT={ year_of_birth = 173 }
		}
		AND={
			year_of_birth = 184
			NOT={ year_of_birth = 185 }
		}
		AND={
			year_of_birth = 196
			NOT={ year_of_birth = 197 }
		}
		AND={
			year_of_birth = 208
			NOT={ year_of_birth = 209 }
		}
		AND={
			year_of_birth = 220
			NOT={ year_of_birth = 221 }
		}
		AND={
			year_of_birth = 232
			NOT={ year_of_birth = 233 }
		}
		AND={
			year_of_birth = 244
			NOT={ year_of_birth = 245 }
		}
		AND={
			year_of_birth = 256
			NOT={ year_of_birth = 257 }
		}
		AND={
			year_of_birth = 268
			NOT={ year_of_birth = 269 }
		}
		AND={
			year_of_birth = 280
			NOT={ year_of_birth = 281 }
		}
		AND={
			year_of_birth = 292
			NOT={ year_of_birth = 293 }
		}
		AND={
			year_of_birth = 304
			NOT={ year_of_birth = 305 }
		}
		AND={
			year_of_birth = 316
			NOT={ year_of_birth = 317 }
		}
		AND={
			year_of_birth = 328
			NOT={ year_of_birth = 329 }
		}
		AND={
			year_of_birth = 340
			NOT={ year_of_birth = 341 }
		}
		AND={
			year_of_birth = 352
			NOT={ year_of_birth = 353 }
		}
		AND={
			year_of_birth = 364
			NOT={ year_of_birth = 365 }
		}
		AND={
			year_of_birth = 376
			NOT={ year_of_birth = 377 }
		}
		AND={
			year_of_birth = 388
			NOT={ year_of_birth = 389 }
		}
		AND={
			year_of_birth = 400
			NOT={ year_of_birth = 401 }
		}
		AND={
			year_of_birth = 412
			NOT={ year_of_birth = 413 }
		}
		AND={
			year_of_birth = 424
			NOT={ year_of_birth = 425 }
		}
		AND={
			year_of_birth = 436
			NOT={ year_of_birth = 437 }
		}
		AND={
			year_of_birth = 448
			NOT={ year_of_birth = 449 }
		}
		AND={
			year_of_birth = 460
			NOT={ year_of_birth = 461 }
		}
		AND={
			year_of_birth = 472
			NOT={ year_of_birth = 473 }
		}
		AND={
			year_of_birth = 484
			NOT={ year_of_birth = 485 }
		}
		AND={
			year_of_birth = 496
			NOT={ year_of_birth = 497 }
		}
		AND={
			year_of_birth = 508
			NOT={ year_of_birth = 509 }
		}
		AND={
			year_of_birth = 520
			NOT={ year_of_birth = 521 }
		}
		AND={
			year_of_birth = 532
			NOT={ year_of_birth = 533 }
		}
		AND={
			year_of_birth = 544
			NOT={ year_of_birth = 545 }
		}
		AND={
			year_of_birth = 556
			NOT={ year_of_birth = 557 }
		}
		AND={
			year_of_birth = 568
			NOT={ year_of_birth = 569 }
		}
		AND={
			year_of_birth = 580
			NOT={ year_of_birth = 581 }
		}
		AND={
			year_of_birth = 592
			NOT={ year_of_birth = 593 }
		}
		AND={
			year_of_birth = 604
			NOT={ year_of_birth = 605 }
		}
		AND={
			year_of_birth = 616
			NOT={ year_of_birth = 617 }
		}
		AND={
			year_of_birth = 628
			NOT={ year_of_birth = 629 }
		}
		AND={
			year_of_birth = 640
			NOT={ year_of_birth = 641 }
		}
		AND={
			year_of_birth = 652
			NOT={ year_of_birth = 653 }
		}
		AND={
			year_of_birth = 664
			NOT={ year_of_birth = 665 }
		}
		AND={
			year_of_birth = 676
			NOT={ year_of_birth = 677 }
		}
		AND={
			year_of_birth = 688
			NOT={ year_of_birth = 689 }
		}
		AND={
			year_of_birth = 700
			NOT={ year_of_birth = 701 }
		}
		AND={
			year_of_birth = 712
			NOT={ year_of_birth = 713 }
		}
		AND={
			year_of_birth = 724
			NOT={ year_of_birth = 725 }
		}
		AND={
			year_of_birth = 736
			NOT={ year_of_birth = 737 }
		}
		AND={
			year_of_birth = 748
			NOT={ year_of_birth = 749 }
		}
		AND={
			year_of_birth = 760
			NOT={ year_of_birth = 761 }
		}
		AND={
			year_of_birth = 772
			NOT={ year_of_birth = 773 }
		}
		AND={
			year_of_birth = 784
			NOT={ year_of_birth = 785 }
		}
		AND={
			year_of_birth = 796
			NOT={ year_of_birth = 797 }
		}
		AND={
			year_of_birth = 808
			NOT={ year_of_birth = 809 }
		}
		AND={
			year_of_birth = 820
			NOT={ year_of_birth = 821 }
		}
		AND={
			year_of_birth = 832
			NOT={ year_of_birth = 833 }
		}
		AND={
			year_of_birth = 844
			NOT={ year_of_birth = 845 }
		}
		AND={
			year_of_birth = 856
			NOT={ year_of_birth = 857 }
		}
		AND={
			year_of_birth = 868
			NOT={ year_of_birth = 869 }
		}
		AND={
			year_of_birth = 880
			NOT={ year_of_birth = 881 }
		}
		AND={
			year_of_birth = 892
			NOT={ year_of_birth = 893 }
		}
		AND={
			year_of_birth = 904
			NOT={ year_of_birth = 905 }
		}
		AND={
			year_of_birth = 916
			NOT={ year_of_birth = 917 }
		}
		AND={
			year_of_birth = 928
			NOT={ year_of_birth = 929 }
		}
		AND={
			year_of_birth = 940
			NOT={ year_of_birth = 941 }
		}
		AND={
			year_of_birth = 952
			NOT={ year_of_birth = 953 }
		}
		AND={
			year_of_birth = 964
			NOT={ year_of_birth = 965 }
		}
		AND={
			year_of_birth = 976
			NOT={ year_of_birth = 977 }
		}
		AND={
			year_of_birth = 988
			NOT={ year_of_birth = 989 }
		}
		AND={
			year_of_birth = 1000
			NOT={ year_of_birth = 1001 }
		}
	}
}
is_born_under_ox_trigger = {
	OR = {
		AND={
			year_of_birth = 5
			NOT={ year_of_birth = 6 }
		}
		AND={
			year_of_birth = 17
			NOT={ year_of_birth = 18 }
		}
		AND={
			year_of_birth = 29
			NOT={ year_of_birth = 30 }
		}
		AND={
			year_of_birth = 41
			NOT={ year_of_birth = 42 }
		}
		AND={
			year_of_birth = 53
			NOT={ year_of_birth = 54 }
		}
		AND={
			year_of_birth = 65
			NOT={ year_of_birth = 66 }
		}
		AND={
			year_of_birth = 77
			NOT={ year_of_birth = 78 }
		}
		AND={
			year_of_birth = 89
			NOT={ year_of_birth = 90 }
		}
		AND={
			year_of_birth = 101
			NOT={ year_of_birth = 102 }
		}
		AND={
			year_of_birth = 113
			NOT={ year_of_birth = 114 }
		}
		AND={
			year_of_birth = 125
			NOT={ year_of_birth = 126 }
		}
		AND={
			year_of_birth = 137
			NOT={ year_of_birth = 138 }
		}
		AND={
			year_of_birth = 149
			NOT={ year_of_birth = 150 }
		}
		AND={
			year_of_birth = 161
			NOT={ year_of_birth = 162 }
		}
		AND={
			year_of_birth = 173
			NOT={ year_of_birth = 174 }
		}
		AND={
			year_of_birth = 185
			NOT={ year_of_birth = 186 }
		}
		AND={
			year_of_birth = 197
			NOT={ year_of_birth = 198 }
		}
		AND={
			year_of_birth = 209
			NOT={ year_of_birth = 210 }
		}
		AND={
			year_of_birth = 221
			NOT={ year_of_birth = 222 }
		}
		AND={
			year_of_birth = 233
			NOT={ year_of_birth = 234 }
		}
		AND={
			year_of_birth = 245
			NOT={ year_of_birth = 246 }
		}
		AND={
			year_of_birth = 257
			NOT={ year_of_birth = 258 }
		}
		AND={
			year_of_birth = 269
			NOT={ year_of_birth = 270 }
		}
		AND={
			year_of_birth = 281
			NOT={ year_of_birth = 282 }
		}
		AND={
			year_of_birth = 293
			NOT={ year_of_birth = 294 }
		}
		AND={
			year_of_birth = 305
			NOT={ year_of_birth = 306 }
		}
		AND={
			year_of_birth = 317
			NOT={ year_of_birth = 318 }
		}
		AND={
			year_of_birth = 329
			NOT={ year_of_birth = 330 }
		}
		AND={
			year_of_birth = 341
			NOT={ year_of_birth = 342 }
		}
		AND={
			year_of_birth = 353
			NOT={ year_of_birth = 354 }
		}
		AND={
			year_of_birth = 365
			NOT={ year_of_birth = 366 }
		}
		AND={
			year_of_birth = 377
			NOT={ year_of_birth = 378 }
		}
		AND={
			year_of_birth = 389
			NOT={ year_of_birth = 390 }
		}
		AND={
			year_of_birth = 401
			NOT={ year_of_birth = 402 }
		}
		AND={
			year_of_birth = 413
			NOT={ year_of_birth = 414 }
		}
		AND={
			year_of_birth = 425
			NOT={ year_of_birth = 426 }
		}
		AND={
			year_of_birth = 437
			NOT={ year_of_birth = 438 }
		}
		AND={
			year_of_birth = 449
			NOT={ year_of_birth = 450 }
		}
		AND={
			year_of_birth = 461
			NOT={ year_of_birth = 462 }
		}
		AND={
			year_of_birth = 473
			NOT={ year_of_birth = 474 }
		}
		AND={
			year_of_birth = 485
			NOT={ year_of_birth = 486 }
		}
		AND={
			year_of_birth = 497
			NOT={ year_of_birth = 498 }
		}
		AND={
			year_of_birth = 509
			NOT={ year_of_birth = 510 }
		}
		AND={
			year_of_birth = 521
			NOT={ year_of_birth = 522 }
		}
		AND={
			year_of_birth = 533
			NOT={ year_of_birth = 534 }
		}
		AND={
			year_of_birth = 545
			NOT={ year_of_birth = 546 }
		}
		AND={
			year_of_birth = 557
			NOT={ year_of_birth = 558 }
		}
		AND={
			year_of_birth = 569
			NOT={ year_of_birth = 570 }
		}
		AND={
			year_of_birth = 581
			NOT={ year_of_birth = 582 }
		}
		AND={
			year_of_birth = 593
			NOT={ year_of_birth = 594 }
		}
		AND={
			year_of_birth = 605
			NOT={ year_of_birth = 606 }
		}
		AND={
			year_of_birth = 617
			NOT={ year_of_birth = 618 }
		}
		AND={
			year_of_birth = 629
			NOT={ year_of_birth = 630 }
		}
		AND={
			year_of_birth = 641
			NOT={ year_of_birth = 642 }
		}
		AND={
			year_of_birth = 653
			NOT={ year_of_birth = 654 }
		}
		AND={
			year_of_birth = 665
			NOT={ year_of_birth = 666 }
		}
		AND={
			year_of_birth = 677
			NOT={ year_of_birth = 678 }
		}
		AND={
			year_of_birth = 689
			NOT={ year_of_birth = 690 }
		}
		AND={
			year_of_birth = 701
			NOT={ year_of_birth = 702 }
		}
		AND={
			year_of_birth = 713
			NOT={ year_of_birth = 714 }
		}
		AND={
			year_of_birth = 725
			NOT={ year_of_birth = 726 }
		}
		AND={
			year_of_birth = 737
			NOT={ year_of_birth = 738 }
		}
		AND={
			year_of_birth = 749
			NOT={ year_of_birth = 750 }
		}
		AND={
			year_of_birth = 761
			NOT={ year_of_birth = 762 }
		}
		AND={
			year_of_birth = 773
			NOT={ year_of_birth = 774 }
		}
		AND={
			year_of_birth = 785
			NOT={ year_of_birth = 786 }
		}
		AND={
			year_of_birth = 797
			NOT={ year_of_birth = 798 }
		}
		AND={
			year_of_birth = 809
			NOT={ year_of_birth = 810 }
		}
		AND={
			year_of_birth = 821
			NOT={ year_of_birth = 822 }
		}
		AND={
			year_of_birth = 833
			NOT={ year_of_birth = 834 }
		}
		AND={
			year_of_birth = 845
			NOT={ year_of_birth = 846 }
		}
		AND={
			year_of_birth = 857
			NOT={ year_of_birth = 858 }
		}
		AND={
			year_of_birth = 869
			NOT={ year_of_birth = 870 }
		}
		AND={
			year_of_birth = 881
			NOT={ year_of_birth = 882 }
		}
		AND={
			year_of_birth = 893
			NOT={ year_of_birth = 894 }
		}
		AND={
			year_of_birth = 905
			NOT={ year_of_birth = 906 }
		}
		AND={
			year_of_birth = 917
			NOT={ year_of_birth = 918 }
		}
		AND={
			year_of_birth = 929
			NOT={ year_of_birth = 930 }
		}
		AND={
			year_of_birth = 941
			NOT={ year_of_birth = 942 }
		}
		AND={
			year_of_birth = 953
			NOT={ year_of_birth = 954 }
		}
		AND={
			year_of_birth = 965
			NOT={ year_of_birth = 966 }
		}
		AND={
			year_of_birth = 977
			NOT={ year_of_birth = 978 }
		}
		AND={
			year_of_birth = 989
			NOT={ year_of_birth = 990 }
		}
	}
}
is_born_under_tiger_trigger = {
	OR = {
		AND={
			year_of_birth = 6
			NOT={ year_of_birth = 7 }
		}
		AND={
			year_of_birth = 18
			NOT={ year_of_birth = 19 }
		}
		AND={
			year_of_birth = 30
			NOT={ year_of_birth = 31 }
		}
		AND={
			year_of_birth = 42
			NOT={ year_of_birth = 43 }
		}
		AND={
			year_of_birth = 54
			NOT={ year_of_birth = 55 }
		}
		AND={
			year_of_birth = 66
			NOT={ year_of_birth = 67 }
		}
		AND={
			year_of_birth = 78
			NOT={ year_of_birth = 79 }
		}
		AND={
			year_of_birth = 90
			NOT={ year_of_birth = 91 }
		}
		AND={
			year_of_birth = 102
			NOT={ year_of_birth = 103 }
		}
		AND={
			year_of_birth = 114
			NOT={ year_of_birth = 115 }
		}
		AND={
			year_of_birth = 126
			NOT={ year_of_birth = 127 }
		}
		AND={
			year_of_birth = 138
			NOT={ year_of_birth = 139 }
		}
		AND={
			year_of_birth = 150
			NOT={ year_of_birth = 151 }
		}
		AND={
			year_of_birth = 162
			NOT={ year_of_birth = 163 }
		}
		AND={
			year_of_birth = 174
			NOT={ year_of_birth = 175 }
		}
		AND={
			year_of_birth = 186
			NOT={ year_of_birth = 187 }
		}
		AND={
			year_of_birth = 198
			NOT={ year_of_birth = 199 }
		}
		AND={
			year_of_birth = 210
			NOT={ year_of_birth = 211 }
		}
		AND={
			year_of_birth = 222
			NOT={ year_of_birth = 223 }
		}
		AND={
			year_of_birth = 234
			NOT={ year_of_birth = 235 }
		}
		AND={
			year_of_birth = 246
			NOT={ year_of_birth = 247 }
		}
		AND={
			year_of_birth = 258
			NOT={ year_of_birth = 259 }
		}
		AND={
			year_of_birth = 270
			NOT={ year_of_birth = 271 }
		}
		AND={
			year_of_birth = 282
			NOT={ year_of_birth = 283 }
		}
		AND={
			year_of_birth = 294
			NOT={ year_of_birth = 295 }
		}
		AND={
			year_of_birth = 306
			NOT={ year_of_birth = 307 }
		}
		AND={
			year_of_birth = 318
			NOT={ year_of_birth = 319 }
		}
		AND={
			year_of_birth = 330
			NOT={ year_of_birth = 331 }
		}
		AND={
			year_of_birth = 342
			NOT={ year_of_birth = 343 }
		}
		AND={
			year_of_birth = 354
			NOT={ year_of_birth = 355 }
		}
		AND={
			year_of_birth = 366
			NOT={ year_of_birth = 367 }
		}
		AND={
			year_of_birth = 378
			NOT={ year_of_birth = 379 }
		}
		AND={
			year_of_birth = 390
			NOT={ year_of_birth = 391 }
		}
		AND={
			year_of_birth = 402
			NOT={ year_of_birth = 403 }
		}
		AND={
			year_of_birth = 414
			NOT={ year_of_birth = 415 }
		}
		AND={
			year_of_birth = 426
			NOT={ year_of_birth = 427 }
		}
		AND={
			year_of_birth = 438
			NOT={ year_of_birth = 439 }
		}
		AND={
			year_of_birth = 450
			NOT={ year_of_birth = 451 }
		}
		AND={
			year_of_birth = 462
			NOT={ year_of_birth = 463 }
		}
		AND={
			year_of_birth = 474
			NOT={ year_of_birth = 475 }
		}
		AND={
			year_of_birth = 486
			NOT={ year_of_birth = 487 }
		}
		AND={
			year_of_birth = 498
			NOT={ year_of_birth = 499 }
		}
		AND={
			year_of_birth = 510
			NOT={ year_of_birth = 511 }
		}
		AND={
			year_of_birth = 522
			NOT={ year_of_birth = 523 }
		}
		AND={
			year_of_birth = 534
			NOT={ year_of_birth = 535 }
		}
		AND={
			year_of_birth = 546
			NOT={ year_of_birth = 547 }
		}
		AND={
			year_of_birth = 558
			NOT={ year_of_birth = 559 }
		}
		AND={
			year_of_birth = 570
			NOT={ year_of_birth = 571 }
		}
		AND={
			year_of_birth = 582
			NOT={ year_of_birth = 583 }
		}
		AND={
			year_of_birth = 594
			NOT={ year_of_birth = 595 }
		}
		AND={
			year_of_birth = 606
			NOT={ year_of_birth = 607 }
		}
		AND={
			year_of_birth = 618
			NOT={ year_of_birth = 619 }
		}
		AND={
			year_of_birth = 630
			NOT={ year_of_birth = 631 }
		}
		AND={
			year_of_birth = 642
			NOT={ year_of_birth = 643 }
		}
		AND={
			year_of_birth = 654
			NOT={ year_of_birth = 655 }
		}
		AND={
			year_of_birth = 666
			NOT={ year_of_birth = 667 }
		}
		AND={
			year_of_birth = 678
			NOT={ year_of_birth = 679 }
		}
		AND={
			year_of_birth = 690
			NOT={ year_of_birth = 691 }
		}
		AND={
			year_of_birth = 702
			NOT={ year_of_birth = 703 }
		}
		AND={
			year_of_birth = 714
			NOT={ year_of_birth = 715 }
		}
		AND={
			year_of_birth = 726
			NOT={ year_of_birth = 727 }
		}
		AND={
			year_of_birth = 738
			NOT={ year_of_birth = 739 }
		}
		AND={
			year_of_birth = 750
			NOT={ year_of_birth = 751 }
		}
		AND={
			year_of_birth = 762
			NOT={ year_of_birth = 763 }
		}
		AND={
			year_of_birth = 774
			NOT={ year_of_birth = 775 }
		}
		AND={
			year_of_birth = 786
			NOT={ year_of_birth = 787 }
		}
		AND={
			year_of_birth = 798
			NOT={ year_of_birth = 799 }
		}
		AND={
			year_of_birth = 810
			NOT={ year_of_birth = 811 }
		}
		AND={
			year_of_birth = 822
			NOT={ year_of_birth = 823 }
		}
		AND={
			year_of_birth = 834
			NOT={ year_of_birth = 835 }
		}
		AND={
			year_of_birth = 846
			NOT={ year_of_birth = 847 }
		}
		AND={
			year_of_birth = 858
			NOT={ year_of_birth = 859 }
		}
		AND={
			year_of_birth = 870
			NOT={ year_of_birth = 871 }
		}
		AND={
			year_of_birth = 882
			NOT={ year_of_birth = 883 }
		}
		AND={
			year_of_birth = 894
			NOT={ year_of_birth = 895 }
		}
		AND={
			year_of_birth = 906
			NOT={ year_of_birth = 907 }
		}
		AND={
			year_of_birth = 918
			NOT={ year_of_birth = 919 }
		}
		AND={
			year_of_birth = 930
			NOT={ year_of_birth = 931 }
		}
		AND={
			year_of_birth = 942
			NOT={ year_of_birth = 943 }
		}
		AND={
			year_of_birth = 954
			NOT={ year_of_birth = 955 }
		}
		AND={
			year_of_birth = 966
			NOT={ year_of_birth = 967 }
		}
		AND={
			year_of_birth = 978
			NOT={ year_of_birth = 979 }
		}
		AND={
			year_of_birth = 990
			NOT={ year_of_birth = 991 }
		}
	}
}
is_born_under_rabbit_trigger = {
	OR = {
		AND={
			year_of_birth = 7
			NOT={ year_of_birth = 8 }
		}
		AND={
			year_of_birth = 19
			NOT={ year_of_birth = 20 }
		}
		AND={
			year_of_birth = 31
			NOT={ year_of_birth = 32 }
		}
		AND={
			year_of_birth = 43
			NOT={ year_of_birth = 44 }
		}
		AND={
			year_of_birth = 55
			NOT={ year_of_birth = 56 }
		}
		AND={
			year_of_birth = 67
			NOT={ year_of_birth = 68 }
		}
		AND={
			year_of_birth = 79
			NOT={ year_of_birth = 80 }
		}
		AND={
			year_of_birth = 91
			NOT={ year_of_birth = 92 }
		}
		AND={
			year_of_birth = 103
			NOT={ year_of_birth = 104 }
		}
		AND={
			year_of_birth = 115
			NOT={ year_of_birth = 116 }
		}
		AND={
			year_of_birth = 127
			NOT={ year_of_birth = 128 }
		}
		AND={
			year_of_birth = 139
			NOT={ year_of_birth = 140 }
		}
		AND={
			year_of_birth = 151
			NOT={ year_of_birth = 152 }
		}
		AND={
			year_of_birth = 163
			NOT={ year_of_birth = 164 }
		}
		AND={
			year_of_birth = 175
			NOT={ year_of_birth = 176 }
		}
		AND={
			year_of_birth = 187
			NOT={ year_of_birth = 188 }
		}
		AND={
			year_of_birth = 199
			NOT={ year_of_birth = 200 }
		}
		AND={
			year_of_birth = 211
			NOT={ year_of_birth = 212 }
		}
		AND={
			year_of_birth = 223
			NOT={ year_of_birth = 224 }
		}
		AND={
			year_of_birth = 235
			NOT={ year_of_birth = 236 }
		}
		AND={
			year_of_birth = 247
			NOT={ year_of_birth = 248 }
		}
		AND={
			year_of_birth = 259
			NOT={ year_of_birth = 260 }
		}
		AND={
			year_of_birth = 271
			NOT={ year_of_birth = 272 }
		}
		AND={
			year_of_birth = 283
			NOT={ year_of_birth = 284 }
		}
		AND={
			year_of_birth = 295
			NOT={ year_of_birth = 296 }
		}
		AND={
			year_of_birth = 307
			NOT={ year_of_birth = 308 }
		}
		AND={
			year_of_birth = 319
			NOT={ year_of_birth = 320 }
		}
		AND={
			year_of_birth = 331
			NOT={ year_of_birth = 332 }
		}
		AND={
			year_of_birth = 343
			NOT={ year_of_birth = 345 }
		}
		AND={
			year_of_birth = 355
			NOT={ year_of_birth = 356 }
		}
		AND={
			year_of_birth = 367
			NOT={ year_of_birth = 368 }
		}
		AND={
			year_of_birth = 379
			NOT={ year_of_birth = 380 }
		}
		AND={
			year_of_birth = 391
			NOT={ year_of_birth = 392 }
		}
		AND={
			year_of_birth = 403
			NOT={ year_of_birth = 404 }
		}
		AND={
			year_of_birth = 415
			NOT={ year_of_birth = 416 }
		}
		AND={
			year_of_birth = 427
			NOT={ year_of_birth = 428 }
		}
		AND={
			year_of_birth = 439
			NOT={ year_of_birth = 440 }
		}
		AND={
			year_of_birth = 451
			NOT={ year_of_birth = 452 }
		}
		AND={
			year_of_birth = 463
			NOT={ year_of_birth = 464 }
		}
		AND={
			year_of_birth = 475
			NOT={ year_of_birth = 476 }
		}
		AND={
			year_of_birth = 487
			NOT={ year_of_birth = 488 }
		}
		AND={
			year_of_birth = 499
			NOT={ year_of_birth = 500 }
		}
		AND={
			year_of_birth = 511
			NOT={ year_of_birth = 512 }
		}
		AND={
			year_of_birth = 523
			NOT={ year_of_birth = 524 }
		}
		AND={
			year_of_birth = 535
			NOT={ year_of_birth = 536 }
		}
		AND={
			year_of_birth = 547
			NOT={ year_of_birth = 548 }
		}
		AND={
			year_of_birth = 559
			NOT={ year_of_birth = 560 }
		}
		AND={
			year_of_birth = 571
			NOT={ year_of_birth = 572 }
		}
		AND={
			year_of_birth = 583
			NOT={ year_of_birth = 584 }
		}
		AND={
			year_of_birth = 595
			NOT={ year_of_birth = 596 }
		}
		AND={
			year_of_birth = 607
			NOT={ year_of_birth = 608 }
		}
		AND={
			year_of_birth = 619
			NOT={ year_of_birth = 620 }
		}
		AND={
			year_of_birth = 631
			NOT={ year_of_birth = 632 }
		}
		AND={
			year_of_birth = 643
			NOT={ year_of_birth = 644 }
		}
		AND={
			year_of_birth = 655
			NOT={ year_of_birth = 656 }
		}
		AND={
			year_of_birth = 667
			NOT={ year_of_birth = 668 }
		}
		AND={
			year_of_birth = 679
			NOT={ year_of_birth = 680 }
		}
		AND={
			year_of_birth = 691
			NOT={ year_of_birth = 692 }
		}
		AND={
			year_of_birth = 703
			NOT={ year_of_birth = 704 }
		}
		AND={
			year_of_birth = 715
			NOT={ year_of_birth = 716 }
		}
		AND={
			year_of_birth = 727
			NOT={ year_of_birth = 728 }
		}
		AND={
			year_of_birth = 739
			NOT={ year_of_birth = 740 }
		}
		AND={
			year_of_birth = 751
			NOT={ year_of_birth = 752 }
		}
		AND={
			year_of_birth = 763
			NOT={ year_of_birth = 764 }
		}
		AND={
			year_of_birth = 775
			NOT={ year_of_birth = 776 }
		}
		AND={
			year_of_birth = 787
			NOT={ year_of_birth = 788 }
		}
		AND={
			year_of_birth = 799
			NOT={ year_of_birth = 800 }
		}
		AND={
			year_of_birth = 811
			NOT={ year_of_birth = 812 }
		}
		AND={
			year_of_birth = 823
			NOT={ year_of_birth = 824 }
		}
		AND={
			year_of_birth = 835
			NOT={ year_of_birth = 836 }
		}
		AND={
			year_of_birth = 847
			NOT={ year_of_birth = 848 }
		}
		AND={
			year_of_birth = 859
			NOT={ year_of_birth = 860 }
		}
		AND={
			year_of_birth = 871
			NOT={ year_of_birth = 872 }
		}
		AND={
			year_of_birth = 883
			NOT={ year_of_birth = 884 }
		}
		AND={
			year_of_birth = 895
			NOT={ year_of_birth = 896 }
		}
		AND={
			year_of_birth = 907
			NOT={ year_of_birth = 908 }
		}
		AND={
			year_of_birth = 919
			NOT={ year_of_birth = 920 }
		}
		AND={
			year_of_birth = 931
			NOT={ year_of_birth = 932 }
		}
		AND={
			year_of_birth = 943
			NOT={ year_of_birth = 944 }
		}
		AND={
			year_of_birth = 955
			NOT={ year_of_birth = 956 }
		}
		AND={
			year_of_birth = 967
			NOT={ year_of_birth = 968 }
		}
		AND={
			year_of_birth = 979
			NOT={ year_of_birth = 980 }
		}
		AND={
			year_of_birth = 991
			NOT={ year_of_birth = 992 }
		}
	}
}
is_born_under_dragon_trigger = {
	OR = {
		AND={
			year_of_birth = 8
			NOT={ year_of_birth = 9 }
		}
		AND={
			year_of_birth = 20
			NOT={ year_of_birth = 21 }
		}
		AND={
			year_of_birth = 32
			NOT={ year_of_birth = 33 }
		}
		AND={
			year_of_birth = 44
			NOT={ year_of_birth = 45 }
		}
		AND={
			year_of_birth = 56
			NOT={ year_of_birth = 57 }
		}
		AND={
			year_of_birth = 68
			NOT={ year_of_birth = 69 }
		}
		AND={
			year_of_birth = 80
			NOT={ year_of_birth = 81 }
		}
		AND={
			year_of_birth = 92
			NOT={ year_of_birth = 93 }
		}
		AND={
			year_of_birth = 104
			NOT={ year_of_birth = 105 }
		}
		AND={
			year_of_birth = 116
			NOT={ year_of_birth = 117 }
		}
		AND={
			year_of_birth = 128
			NOT={ year_of_birth = 129 }
		}
		AND={
			year_of_birth = 140
			NOT={ year_of_birth = 141 }
		}
		AND={
			year_of_birth = 152
			NOT={ year_of_birth = 153 }
		}
		AND={
			year_of_birth = 164
			NOT={ year_of_birth = 165 }
		}
		AND={
			year_of_birth = 176
			NOT={ year_of_birth = 176 }
		}
		AND={
			year_of_birth = 188
			NOT={ year_of_birth = 189 }
		}
		AND={
			year_of_birth = 200
			NOT={ year_of_birth = 201 }
		}
		AND={
			year_of_birth = 212
			NOT={ year_of_birth = 213 }
		}
		AND={
			year_of_birth = 224
			NOT={ year_of_birth = 225 }
		}
		AND={
			year_of_birth = 236
			NOT={ year_of_birth = 237 }
		}
		AND={
			year_of_birth = 248
			NOT={ year_of_birth = 249 }
		}
		AND={
			year_of_birth = 260
			NOT={ year_of_birth = 261 }
		}
		AND={
			year_of_birth = 272
			NOT={ year_of_birth = 273 }
		}
		AND={
			year_of_birth = 284
			NOT={ year_of_birth = 285 }
		}
		AND={
			year_of_birth = 296
			NOT={ year_of_birth = 297 }
		}
		AND={
			year_of_birth = 308
			NOT={ year_of_birth = 309 }
		}
		AND={
			year_of_birth = 320
			NOT={ year_of_birth = 321 }
		}
		AND={
			year_of_birth = 332
			NOT={ year_of_birth = 333 }
		}
		AND={
			year_of_birth = 344
			NOT={ year_of_birth = 345 }
		}
		AND={
			year_of_birth = 356
			NOT={ year_of_birth = 357 }
		}
		AND={
			year_of_birth = 368
			NOT={ year_of_birth = 369 }
		}
		AND={
			year_of_birth = 380
			NOT={ year_of_birth = 381 }
		}
		AND={
			year_of_birth = 392
			NOT={ year_of_birth = 393 }
		}
		AND={
			year_of_birth = 404
			NOT={ year_of_birth = 405 }
		}
		AND={
			year_of_birth = 416
			NOT={ year_of_birth = 417 }
		}
		AND={
			year_of_birth = 428
			NOT={ year_of_birth = 429 }
		}
		AND={
			year_of_birth = 440
			NOT={ year_of_birth = 441 }
		}
		AND={
			year_of_birth = 452
			NOT={ year_of_birth = 453 }
		}
		AND={
			year_of_birth = 464
			NOT={ year_of_birth = 465 }
		}
		AND={
			year_of_birth = 476
			NOT={ year_of_birth = 477 }
		}
		AND={
			year_of_birth = 488
			NOT={ year_of_birth = 489 }
		}
		AND={
			year_of_birth = 500
			NOT={ year_of_birth = 501 }
		}
		AND={
			year_of_birth = 512
			NOT={ year_of_birth = 513 }
		}
		AND={
			year_of_birth = 524
			NOT={ year_of_birth = 525 }
		}
		AND={
			year_of_birth = 536
			NOT={ year_of_birth = 537 }
		}
		AND={
			year_of_birth = 548
			NOT={ year_of_birth = 549 }
		}
		AND={
			year_of_birth = 560
			NOT={ year_of_birth = 561 }
		}
		AND={
			year_of_birth = 572
			NOT={ year_of_birth = 573 }
		}
		AND={
			year_of_birth = 584
			NOT={ year_of_birth = 585 }
		}
		AND={
			year_of_birth = 596
			NOT={ year_of_birth = 597 }
		}
		AND={
			year_of_birth = 608
			NOT={ year_of_birth = 609 }
		}
		AND={
			year_of_birth = 620
			NOT={ year_of_birth = 621 }
		}
		AND={
			year_of_birth = 632
			NOT={ year_of_birth = 633 }
		}
		AND={
			year_of_birth = 644
			NOT={ year_of_birth = 645 }
		}
		AND={
			year_of_birth = 656
			NOT={ year_of_birth = 657 }
		}
		AND={
			year_of_birth = 668
			NOT={ year_of_birth = 669 }
		}
		AND={
			year_of_birth = 680
			NOT={ year_of_birth = 681 }
		}
		AND={
			year_of_birth = 692
			NOT={ year_of_birth = 693 }
		}
		AND={
			year_of_birth = 704
			NOT={ year_of_birth = 705 }
		}
		AND={
			year_of_birth = 716
			NOT={ year_of_birth = 717 }
		}
		AND={
			year_of_birth = 728
			NOT={ year_of_birth = 729 }
		}
		AND={
			year_of_birth = 740
			NOT={ year_of_birth = 741 }
		}
		AND={
			year_of_birth = 752
			NOT={ year_of_birth = 753 }
		}
		AND={
			year_of_birth = 764
			NOT={ year_of_birth = 765 }
		}
		AND={
			year_of_birth = 776
			NOT={ year_of_birth = 777 }
		}
		AND={
			year_of_birth = 788
			NOT={ year_of_birth = 789 }
		}
		AND={
			year_of_birth = 800
			NOT={ year_of_birth = 801 }
		}
		AND={
			year_of_birth = 812
			NOT={ year_of_birth = 813 }
		}
		AND={
			year_of_birth = 824
			NOT={ year_of_birth = 825 }
		}
		AND={
			year_of_birth = 836
			NOT={ year_of_birth = 837 }
		}
		AND={
			year_of_birth = 848
			NOT={ year_of_birth = 849 }
		}
		AND={
			year_of_birth = 860
			NOT={ year_of_birth = 861 }
		}
		AND={
			year_of_birth = 872
			NOT={ year_of_birth = 873 }
		}
		AND={
			year_of_birth = 884
			NOT={ year_of_birth = 885 }
		}
		AND={
			year_of_birth = 896
			NOT={ year_of_birth = 897 }
		}
		AND={
			year_of_birth = 908
			NOT={ year_of_birth = 909 }
		}
		AND={
			year_of_birth = 920
			NOT={ year_of_birth = 921 }
		}
		AND={
			year_of_birth = 932
			NOT={ year_of_birth = 933 }
		}
		AND={
			year_of_birth = 944
			NOT={ year_of_birth = 945 }
		}
		AND={
			year_of_birth = 956
			NOT={ year_of_birth = 957 }
		}
		AND={
			year_of_birth = 968
			NOT={ year_of_birth = 969 }
		}
		AND={
			year_of_birth = 980
			NOT={ year_of_birth = 981 }
		}
		AND={
			year_of_birth = 992
			NOT={ year_of_birth = 993 }
		}
	}
}
is_born_under_snake_trigger = {
	OR = {
		AND={
			year_of_birth = 9
			NOT={ year_of_birth = 10 }
		}
		AND={
			year_of_birth = 21
			NOT={ year_of_birth = 22 }
		}
		AND={
			year_of_birth = 33
			NOT={ year_of_birth = 34 }
		}
		AND={
			year_of_birth = 45
			NOT={ year_of_birth = 46 }
		}
		AND={
			year_of_birth = 57
			NOT={ year_of_birth = 58 }
		}
		AND={
			year_of_birth = 69
			NOT={ year_of_birth = 70 }
		}
		AND={
			year_of_birth = 81
			NOT={ year_of_birth = 82 }
		}
		AND={
			year_of_birth = 93
			NOT={ year_of_birth = 94 }
		}
		AND={
			year_of_birth = 105
			NOT={ year_of_birth = 106 }
		}
		AND={
			year_of_birth = 117
			NOT={ year_of_birth = 118 }
		}
		AND={
			year_of_birth = 129
			NOT={ year_of_birth = 130 }
		}
		AND={
			year_of_birth = 141
			NOT={ year_of_birth = 142 }
		}
		AND={
			year_of_birth = 153
			NOT={ year_of_birth = 154 }
		}
		AND={
			year_of_birth = 165
			NOT={ year_of_birth = 166 }
		}
		AND={
			year_of_birth = 177
			NOT={ year_of_birth = 178 }
		}
		AND={
			year_of_birth = 189
			NOT={ year_of_birth = 190 }
		}
		AND={
			year_of_birth = 201
			NOT={ year_of_birth = 202 }
		}
		AND={
			year_of_birth = 213
			NOT={ year_of_birth = 190 }
		}
		AND={
			year_of_birth = 225
			NOT={ year_of_birth = 226 }
		}
		AND={
			year_of_birth = 237
			NOT={ year_of_birth = 238 }
		}
		AND={
			year_of_birth = 249
			NOT={ year_of_birth = 250 }
		}
		AND={
			year_of_birth = 261
			NOT={ year_of_birth = 262 }
		}
		AND={
			year_of_birth = 273
			NOT={ year_of_birth = 274 }
		}
		AND={
			year_of_birth = 285
			NOT={ year_of_birth = 286 }
		}
		AND={
			year_of_birth = 297
			NOT={ year_of_birth = 298 }
		}
		AND={
			year_of_birth = 309
			NOT={ year_of_birth = 310 }
		}
		AND={
			year_of_birth = 321
			NOT={ year_of_birth = 322 }
		}
		AND={
			year_of_birth = 333
			NOT={ year_of_birth = 334 }
		}
		AND={
			year_of_birth = 345
			NOT={ year_of_birth = 346 }
		}
		AND={
			year_of_birth = 357
			NOT={ year_of_birth = 358 }
		}
		AND={
			year_of_birth = 369
			NOT={ year_of_birth = 370 }
		}
		AND={
			year_of_birth = 381
			NOT={ year_of_birth = 382 }
		}
		AND={
			year_of_birth = 393
			NOT={ year_of_birth = 394 }
		}
		AND={
			year_of_birth = 405
			NOT={ year_of_birth = 406 }
		}
		AND={
			year_of_birth = 417
			NOT={ year_of_birth = 418 }
		}
		AND={
			year_of_birth = 429
			NOT={ year_of_birth = 430 }
		}
		AND={
			year_of_birth = 441
			NOT={ year_of_birth = 442 }
		}
		AND={
			year_of_birth = 453
			NOT={ year_of_birth = 454 }
		}
		AND={
			year_of_birth = 465
			NOT={ year_of_birth = 466 }
		}
		AND={
			year_of_birth = 477
			NOT={ year_of_birth = 478 }
		}
		AND={
			year_of_birth = 489
			NOT={ year_of_birth = 490 }
		}
		AND={
			year_of_birth = 501
			NOT={ year_of_birth = 502 }
		}
		AND={
			year_of_birth = 513
			NOT={ year_of_birth = 514 }
		}
		AND={
			year_of_birth = 525
			NOT={ year_of_birth = 526 }
		}
		AND={
			year_of_birth = 537
			NOT={ year_of_birth = 538 }
		}
		AND={
			year_of_birth = 549
			NOT={ year_of_birth = 550 }
		}
		AND={
			year_of_birth = 561
			NOT={ year_of_birth = 562 }
		}
		AND={
			year_of_birth = 573
			NOT={ year_of_birth = 574 }
		}
		AND={
			year_of_birth = 585
			NOT={ year_of_birth = 586 }
		}
		AND={
			year_of_birth = 597
			NOT={ year_of_birth = 598 }
		}
		AND={
			year_of_birth = 609
			NOT={ year_of_birth = 610 }
		}
		AND={
			year_of_birth = 621
			NOT={ year_of_birth = 622 }
		}
		AND={
			year_of_birth = 633
			NOT={ year_of_birth = 634 }
		}
		AND={
			year_of_birth = 645
			NOT={ year_of_birth = 646 }
		}
		AND={
			year_of_birth = 657
			NOT={ year_of_birth = 658 }
		}
		AND={
			year_of_birth = 669
			NOT={ year_of_birth = 670 }
		}
		AND={
			year_of_birth = 681
			NOT={ year_of_birth = 682 }
		}
		AND={
			year_of_birth = 693
			NOT={ year_of_birth = 694 }
		}
		AND={
			year_of_birth = 705
			NOT={ year_of_birth = 706 }
		}
		AND={
			year_of_birth = 717
			NOT={ year_of_birth = 718 }
		}
		AND={
			year_of_birth = 729
			NOT={ year_of_birth = 730 }
		}
		AND={
			year_of_birth = 741
			NOT={ year_of_birth = 742 }
		}
		AND={
			year_of_birth = 753
			NOT={ year_of_birth = 754 }
		}
		AND={
			year_of_birth = 765
			NOT={ year_of_birth = 766 }
		}
		AND={
			year_of_birth = 777
			NOT={ year_of_birth = 778 }
		}
		AND={
			year_of_birth = 789
			NOT={ year_of_birth = 790 }
		}
		AND={
			year_of_birth = 801
			NOT={ year_of_birth = 802 }
		}
		AND={
			year_of_birth = 813
			NOT={ year_of_birth = 814 }
		}
		AND={
			year_of_birth = 825
			NOT={ year_of_birth = 826 }
		}
		AND={
			year_of_birth = 837
			NOT={ year_of_birth = 838 }
		}
		AND={
			year_of_birth = 849
			NOT={ year_of_birth = 850 }
		}
		AND={
			year_of_birth = 861
			NOT={ year_of_birth = 862 }
		}
		AND={
			year_of_birth = 873
			NOT={ year_of_birth = 874 }
		}
		AND={
			year_of_birth = 885
			NOT={ year_of_birth = 886 }
		}
		AND={
			year_of_birth = 897
			NOT={ year_of_birth = 898 }
		}
		AND={
			year_of_birth = 909
			NOT={ year_of_birth = 910 }
		}
		AND={
			year_of_birth = 921
			NOT={ year_of_birth = 922 }
		}
		AND={
			year_of_birth = 933
			NOT={ year_of_birth = 934 }
		}
		AND={
			year_of_birth = 945
			NOT={ year_of_birth = 946 }
		}
		AND={
			year_of_birth = 957
			NOT={ year_of_birth = 958 }
		}
		AND={
			year_of_birth = 969
			NOT={ year_of_birth = 970 }
		}
		AND={
			year_of_birth = 981
			NOT={ year_of_birth = 982 }
		}
		AND={
			year_of_birth = 993
			NOT={ year_of_birth = 994 }
		}
	}
}
is_born_under_horse_trigger = {
	OR = {
		AND={
			year_of_birth = 10
			NOT={ year_of_birth = 11 }
		}
		AND={
			year_of_birth = 22
			NOT={ year_of_birth = 23 }
		}
		AND={
			year_of_birth = 34
			NOT={ year_of_birth = 35 }
		}
		AND={
			year_of_birth = 46
			NOT={ year_of_birth = 47 }
		}
		AND={
			year_of_birth = 58
			NOT={ year_of_birth = 59 }
		}
		AND={
			year_of_birth = 70
			NOT={ year_of_birth = 71 }
		}
		AND={
			year_of_birth = 82
			NOT={ year_of_birth = 83 }
		}
		AND={
			year_of_birth = 94
			NOT={ year_of_birth = 95 }
		}
		AND={
			year_of_birth = 106
			NOT={ year_of_birth = 107 }
		}
		AND={
			year_of_birth = 118
			NOT={ year_of_birth = 119 }
		}
		AND={
			year_of_birth = 130
			NOT={ year_of_birth = 131 }
		}
		AND={
			year_of_birth = 142
			NOT={ year_of_birth = 143 }
		}
		AND={
			year_of_birth = 154
			NOT={ year_of_birth = 155 }
		}
		AND={
			year_of_birth = 166
			NOT={ year_of_birth = 167 }
		}
		AND={
			year_of_birth = 178
			NOT={ year_of_birth = 179 }
		}
		AND={
			year_of_birth = 190
			NOT={ year_of_birth = 191 }
		}
		AND={
			year_of_birth = 202
			NOT={ year_of_birth = 203 }
		}
		AND={
			year_of_birth = 214
			NOT={ year_of_birth = 215 }
		}
		AND={
			year_of_birth = 226
			NOT={ year_of_birth = 227 }
		}
		AND={
			year_of_birth = 238
			NOT={ year_of_birth = 239 }
		}
		AND={
			year_of_birth = 250
			NOT={ year_of_birth = 251 }
		}
		AND={
			year_of_birth = 262
			NOT={ year_of_birth = 263 }
		}
		AND={
			year_of_birth = 274
			NOT={ year_of_birth = 275 }
		}
		AND={
			year_of_birth = 286
			NOT={ year_of_birth = 287 }
		}
		AND={
			year_of_birth = 298
			NOT={ year_of_birth = 299 }
		}
		AND={
			year_of_birth = 310
			NOT={ year_of_birth = 311 }
		}
		AND={
			year_of_birth = 322
			NOT={ year_of_birth = 323 }
		}
		AND={
			year_of_birth = 334
			NOT={ year_of_birth = 335 }
		}
		AND={
			year_of_birth = 346
			NOT={ year_of_birth = 347 }
		}
		AND={
			year_of_birth = 358
			NOT={ year_of_birth = 359 }
		}
		AND={
			year_of_birth = 370
			NOT={ year_of_birth = 371 }
		}
		AND={
			year_of_birth = 382
			NOT={ year_of_birth = 383 }
		}
		AND={
			year_of_birth = 394
			NOT={ year_of_birth = 395 }
		}
		AND={
			year_of_birth = 406
			NOT={ year_of_birth = 407 }
		}
		AND={
			year_of_birth = 418
			NOT={ year_of_birth = 419 }
		}
		AND={
			year_of_birth = 430
			NOT={ year_of_birth = 431 }
		}
		AND={
			year_of_birth = 442
			NOT={ year_of_birth = 443 }
		}
		AND={
			year_of_birth = 454
			NOT={ year_of_birth = 455 }
		}
		AND={
			year_of_birth = 466
			NOT={ year_of_birth = 467 }
		}
		AND={
			year_of_birth = 478
			NOT={ year_of_birth = 479 }
		}
		AND={
			year_of_birth = 490
			NOT={ year_of_birth = 491 }
		}
		AND={
			year_of_birth = 502
			NOT={ year_of_birth = 503 }
		}
		AND={
			year_of_birth = 514
			NOT={ year_of_birth = 515 }
		}
		AND={
			year_of_birth = 526
			NOT={ year_of_birth = 527 }
		}
		AND={
			year_of_birth = 538
			NOT={ year_of_birth = 539 }
		}
		AND={
			year_of_birth = 550
			NOT={ year_of_birth = 551 }
		}
		AND={
			year_of_birth = 562
			NOT={ year_of_birth = 563 }
		}
		AND={
			year_of_birth = 574
			NOT={ year_of_birth = 575 }
		}
		AND={
			year_of_birth = 586
			NOT={ year_of_birth = 587 }
		}
		AND={
			year_of_birth = 598
			NOT={ year_of_birth = 599 }
		}
		AND={
			year_of_birth = 610
			NOT={ year_of_birth = 611 }
		}
		AND={
			year_of_birth = 622
			NOT={ year_of_birth = 623 }
		}
		AND={
			year_of_birth = 634
			NOT={ year_of_birth = 635 }
		}
		AND={
			year_of_birth = 646
			NOT={ year_of_birth = 647 }
		}
		AND={
			year_of_birth = 658
			NOT={ year_of_birth = 659 }
		}
		AND={
			year_of_birth = 670
			NOT={ year_of_birth = 671 }
		}
		AND={
			year_of_birth = 682
			NOT={ year_of_birth = 683 }
		}
		AND={
			year_of_birth = 694
			NOT={ year_of_birth = 695 }
		}
		AND={
			year_of_birth = 706
			NOT={ year_of_birth = 707 }
		}
		AND={
			year_of_birth = 718
			NOT={ year_of_birth = 719 }
		}
		AND={
			year_of_birth = 730
			NOT={ year_of_birth = 731 }
		}
		AND={
			year_of_birth = 742
			NOT={ year_of_birth = 743 }
		}
		AND={
			year_of_birth = 754
			NOT={ year_of_birth = 755 }
		}
		AND={
			year_of_birth = 766
			NOT={ year_of_birth = 767 }
		}
		AND={
			year_of_birth = 778
			NOT={ year_of_birth = 779 }
		}
		AND={
			year_of_birth = 790
			NOT={ year_of_birth = 791 }
		}
		AND={
			year_of_birth = 802
			NOT={ year_of_birth = 803 }
		}
		AND={
			year_of_birth = 814
			NOT={ year_of_birth = 815 }
		}
		AND={
			year_of_birth = 826
			NOT={ year_of_birth = 827 }
		}
		AND={
			year_of_birth = 838
			NOT={ year_of_birth = 839 }
		}
		AND={
			year_of_birth = 850
			NOT={ year_of_birth = 851 }
		}
		AND={
			year_of_birth = 862
			NOT={ year_of_birth = 863 }
		}
		AND={
			year_of_birth = 874
			NOT={ year_of_birth = 875 }
		}
		AND={
			year_of_birth = 886
			NOT={ year_of_birth = 887 }
		}
		AND={
			year_of_birth = 898
			NOT={ year_of_birth = 899 }
		}
		AND={
			year_of_birth = 910
			NOT={ year_of_birth = 911 }
		}
		AND={
			year_of_birth = 922
			NOT={ year_of_birth = 923 }
		}
		AND={
			year_of_birth = 934
			NOT={ year_of_birth = 935 }
		}
		AND={
			year_of_birth = 946
			NOT={ year_of_birth = 947 }
		}
		AND={
			year_of_birth = 958
			NOT={ year_of_birth = 959 }
		}
		AND={
			year_of_birth = 970
			NOT={ year_of_birth = 971 }
		}
		AND={
			year_of_birth = 982
			NOT={ year_of_birth = 983 }
		}
		AND={
			year_of_birth = 994
			NOT={ year_of_birth = 995 }
		}
	}
}
is_born_under_goat_trigger = {
	OR = {
		AND={
			year_of_birth = 11
			NOT={ year_of_birth = 12 }
		}
		AND={
			year_of_birth = 23
			NOT={ year_of_birth = 24 }
		}
		AND={
			year_of_birth = 35
			NOT={ year_of_birth = 36 }
		}
		AND={
			year_of_birth = 47
			NOT={ year_of_birth = 48 }
		}
		AND={
			year_of_birth = 59
			NOT={ year_of_birth = 60 }
		}
		AND={
			year_of_birth = 71
			NOT={ year_of_birth = 72 }
		}
		AND={
			year_of_birth = 83
			NOT={ year_of_birth = 84 }
		}
		AND={
			year_of_birth = 95
			NOT={ year_of_birth = 96 }
		}
		AND={
			year_of_birth = 107
			NOT={ year_of_birth = 108 }
		}
		AND={
			year_of_birth = 119
			NOT={ year_of_birth = 120 }
		}
		AND={
			year_of_birth = 131
			NOT={ year_of_birth = 132 }
		}
		AND={
			year_of_birth = 143
			NOT={ year_of_birth = 144 }
		}
		AND={
			year_of_birth = 155
			NOT={ year_of_birth = 156 }
		}
		AND={
			year_of_birth = 167
			NOT={ year_of_birth = 168 }
		}
		AND={
			year_of_birth = 179
			NOT={ year_of_birth = 180 }
		}
		AND={
			year_of_birth = 191
			NOT={ year_of_birth = 192 }
		}
		AND={
			year_of_birth = 203
			NOT={ year_of_birth = 204 }
		}
		AND={
			year_of_birth = 215
			NOT={ year_of_birth = 216 }
		}
		AND={
			year_of_birth = 227
			NOT={ year_of_birth = 228 }
		}
		AND={
			year_of_birth = 239
			NOT={ year_of_birth = 240 }
		}
		AND={
			year_of_birth = 251
			NOT={ year_of_birth = 252 }
		}
		AND={
			year_of_birth = 263
			NOT={ year_of_birth = 264 }
		}
		AND={
			year_of_birth = 275
			NOT={ year_of_birth = 276 }
		}
		AND={
			year_of_birth = 287
			NOT={ year_of_birth = 288 }
		}
		AND={
			year_of_birth = 299
			NOT={ year_of_birth = 300 }
		}
		AND={
			year_of_birth = 311
			NOT={ year_of_birth = 312 }
		}
		AND={
			year_of_birth = 323
			NOT={ year_of_birth = 324 }
		}
		AND={
			year_of_birth = 335
			NOT={ year_of_birth = 336 }
		}
		AND={
			year_of_birth = 347
			NOT={ year_of_birth = 348 }
		}
		AND={
			year_of_birth = 359
			NOT={ year_of_birth = 360 }
		}
		AND={
			year_of_birth = 371
			NOT={ year_of_birth = 372 }
		}
		AND={
			year_of_birth = 383
			NOT={ year_of_birth = 384 }
		}
		AND={
			year_of_birth = 395
			NOT={ year_of_birth = 396 }
		}
		AND={
			year_of_birth = 407
			NOT={ year_of_birth = 408 }
		}
		AND={
			year_of_birth = 419
			NOT={ year_of_birth = 420 }
		}
		AND={
			year_of_birth = 431
			NOT={ year_of_birth = 432 }
		}
		AND={
			year_of_birth = 443
			NOT={ year_of_birth = 444 }
		}
		AND={
			year_of_birth = 455
			NOT={ year_of_birth = 456 }
		}
		AND={
			year_of_birth = 467
			NOT={ year_of_birth = 468 }
		}
		AND={
			year_of_birth = 479
			NOT={ year_of_birth = 480 }
		}
		AND={
			year_of_birth = 491
			NOT={ year_of_birth = 492 }
		}
		AND={
			year_of_birth = 503
			NOT={ year_of_birth = 504 }
		}
		AND={
			year_of_birth = 515
			NOT={ year_of_birth = 516 }
		}
		AND={
			year_of_birth = 527
			NOT={ year_of_birth = 528 }
		}
		AND={
			year_of_birth = 539
			NOT={ year_of_birth = 540 }
		}
		AND={
			year_of_birth = 551
			NOT={ year_of_birth = 552 }
		}
		AND={
			year_of_birth = 563
			NOT={ year_of_birth = 564 }
		}
		AND={
			year_of_birth = 575
			NOT={ year_of_birth = 576 }
		}
		AND={
			year_of_birth = 587
			NOT={ year_of_birth = 588 }
		}
		AND={
			year_of_birth = 599
			NOT={ year_of_birth = 600 }
		}
		AND={
			year_of_birth = 611
			NOT={ year_of_birth = 612 }
		}
		AND={
			year_of_birth = 623
			NOT={ year_of_birth = 624 }
		}
		AND={
			year_of_birth = 635
			NOT={ year_of_birth = 636 }
		}
		AND={
			year_of_birth = 647
			NOT={ year_of_birth = 648 }
		}
		AND={
			year_of_birth = 659
			NOT={ year_of_birth = 660 }
		}
		AND={
			year_of_birth = 671
			NOT={ year_of_birth = 672 }
		}
		AND={
			year_of_birth = 683
			NOT={ year_of_birth = 684 }
		}
		AND={
			year_of_birth = 695
			NOT={ year_of_birth = 696 }
		}
		AND={
			year_of_birth = 707
			NOT={ year_of_birth = 708 }
		}
		AND={
			year_of_birth = 719
			NOT={ year_of_birth = 720 }
		}
		AND={
			year_of_birth = 731
			NOT={ year_of_birth = 732 }
		}
		AND={
			year_of_birth = 743
			NOT={ year_of_birth = 744 }
		}
		AND={
			year_of_birth = 755
			NOT={ year_of_birth = 756 }
		}
		AND={
			year_of_birth = 767
			NOT={ year_of_birth = 768 }
		}
		AND={
			year_of_birth = 779
			NOT={ year_of_birth = 780 }
		}
		AND={
			year_of_birth = 791
			NOT={ year_of_birth = 792 }
		}
		AND={
			year_of_birth = 803
			NOT={ year_of_birth = 804 }
		}
		AND={
			year_of_birth = 815
			NOT={ year_of_birth = 816 }
		}
		AND={
			year_of_birth = 827
			NOT={ year_of_birth = 828 }
		}
		AND={
			year_of_birth = 839
			NOT={ year_of_birth = 840 }
		}
		AND={
			year_of_birth = 851
			NOT={ year_of_birth = 852 }
		}
		AND={
			year_of_birth = 863
			NOT={ year_of_birth = 864 }
		}
		AND={
			year_of_birth = 875
			NOT={ year_of_birth = 876 }
		}
		AND={
			year_of_birth = 887
			NOT={ year_of_birth = 888 }
		}
		AND={
			year_of_birth = 899
			NOT={ year_of_birth = 900 }
		}
		AND={
			year_of_birth = 911
			NOT={ year_of_birth = 912 }
		}
		AND={
			year_of_birth = 923
			NOT={ year_of_birth = 924 }
		}
		AND={
			year_of_birth = 935
			NOT={ year_of_birth = 936 }
		}
		AND={
			year_of_birth = 947
			NOT={ year_of_birth = 948 }
		}
		AND={
			year_of_birth = 959
			NOT={ year_of_birth = 960 }
		}
		AND={
			year_of_birth = 971
			NOT={ year_of_birth = 972 }
		}
		AND={
			year_of_birth = 983
			NOT={ year_of_birth = 984 }
		}
		AND={
			year_of_birth = 995
			NOT={ year_of_birth = 996 }
		}
	}
}
is_born_under_monkey_trigger = {
	OR = {
		AND={
			year_of_birth = 12
			NOT={ year_of_birth = 13 }
		}
		AND={
			year_of_birth = 24
			NOT={ year_of_birth = 25 }
		}
		AND={
			year_of_birth = 36
			NOT={ year_of_birth = 37 }
		}
		AND={
			year_of_birth = 48
			NOT={ year_of_birth = 49 }
		}
		AND={
			year_of_birth = 60
			NOT={ year_of_birth = 61 }
		}
		AND={
			year_of_birth = 72
			NOT={ year_of_birth = 73 }
		}
		AND={
			year_of_birth = 84
			NOT={ year_of_birth = 85 }
		}
		AND={
			year_of_birth = 96
			NOT={ year_of_birth = 97 }
		}
		AND={
			year_of_birth = 108
			NOT={ year_of_birth = 109 }
		}
		AND={
			year_of_birth = 120
			NOT={ year_of_birth = 121 }
		}
		AND={
			year_of_birth = 132
			NOT={ year_of_birth = 133 }
		}
		AND={
			year_of_birth = 144
			NOT={ year_of_birth = 145 }
		}
		AND={
			year_of_birth = 156
			NOT={ year_of_birth = 157 }
		}
		AND={
			year_of_birth = 168
			NOT={ year_of_birth = 169 }
		}
		AND={
			year_of_birth = 180
			NOT={ year_of_birth = 181 }
		}
		AND={
			year_of_birth = 192
			NOT={ year_of_birth = 193 }
		}
		AND={
			year_of_birth = 204
			NOT={ year_of_birth = 205 }
		}
		AND={
			year_of_birth = 216
			NOT={ year_of_birth = 217 }
		}
		AND={
			year_of_birth = 228
			NOT={ year_of_birth = 229 }
		}
		AND={
			year_of_birth = 240
			NOT={ year_of_birth = 241 }
		}
		AND={
			year_of_birth = 252
			NOT={ year_of_birth = 253 }
		}
		AND={
			year_of_birth = 264
			NOT={ year_of_birth = 265 }
		}
		AND={
			year_of_birth = 276
			NOT={ year_of_birth = 277 }
		}
		AND={
			year_of_birth = 288
			NOT={ year_of_birth = 289 }
		}
		AND={
			year_of_birth = 300
			NOT={ year_of_birth = 301 }
		}
		AND={
			year_of_birth = 312
			NOT={ year_of_birth = 313 }
		}
		AND={
			year_of_birth = 324
			NOT={ year_of_birth = 325 }
		}
		AND={
			year_of_birth = 336
			NOT={ year_of_birth = 337 }
		}
		AND={
			year_of_birth = 348
			NOT={ year_of_birth = 349 }
		}
		AND={
			year_of_birth = 360
			NOT={ year_of_birth = 361 }
		}
		AND={
			year_of_birth = 372
			NOT={ year_of_birth = 373 }
		}
		AND={
			year_of_birth = 384
			NOT={ year_of_birth = 385 }
		}
		AND={
			year_of_birth = 396
			NOT={ year_of_birth = 397 }
		}
		AND={
			year_of_birth = 408
			NOT={ year_of_birth = 409 }
		}
		AND={
			year_of_birth = 420
			NOT={ year_of_birth = 421 }
		}
		AND={
			year_of_birth = 432
			NOT={ year_of_birth = 433 }
		}
		AND={
			year_of_birth = 444
			NOT={ year_of_birth = 445 }
		}
		AND={
			year_of_birth = 456
			NOT={ year_of_birth = 457 }
		}
		AND={
			year_of_birth = 468
			NOT={ year_of_birth = 469 }
		}
		AND={
			year_of_birth = 480
			NOT={ year_of_birth = 481 }
		}
		AND={
			year_of_birth = 492
			NOT={ year_of_birth = 493 }
		}
		AND={
			year_of_birth = 504
			NOT={ year_of_birth = 505 }
		}
		AND={
			year_of_birth = 516
			NOT={ year_of_birth = 517 }
		}
		AND={
			year_of_birth = 528
			NOT={ year_of_birth = 529 }
		}
		AND={
			year_of_birth = 540
			NOT={ year_of_birth = 541 }
		}
		AND={
			year_of_birth = 552
			NOT={ year_of_birth = 553 }
		}
		AND={
			year_of_birth = 564
			NOT={ year_of_birth = 565 }
		}
		AND={
			year_of_birth = 576
			NOT={ year_of_birth = 577 }
		}
		AND={
			year_of_birth = 588
			NOT={ year_of_birth = 589 }
		}
		AND={
			year_of_birth = 600
			NOT={ year_of_birth = 601 }
		}
		AND={
			year_of_birth = 612
			NOT={ year_of_birth = 613 }
		}
		AND={
			year_of_birth = 624
			NOT={ year_of_birth = 625 }
		}
		AND={
			year_of_birth = 636
			NOT={ year_of_birth = 637 }
		}
		AND={
			year_of_birth = 648
			NOT={ year_of_birth = 649 }
		}
		AND={
			year_of_birth = 660
			NOT={ year_of_birth = 661 }
		}
		AND={
			year_of_birth = 672
			NOT={ year_of_birth = 673 }
		}
		AND={
			year_of_birth = 684
			NOT={ year_of_birth = 685 }
		}
		AND={
			year_of_birth = 696
			NOT={ year_of_birth = 697 }
		}
		AND={
			year_of_birth = 708
			NOT={ year_of_birth = 709 }
		}
		AND={
			year_of_birth = 720
			NOT={ year_of_birth = 721 }
		}
		AND={
			year_of_birth = 732
			NOT={ year_of_birth = 733 }
		}
		AND={
			year_of_birth = 744
			NOT={ year_of_birth = 745 }
		}
		AND={
			year_of_birth = 756
			NOT={ year_of_birth = 757 }
		}
		AND={
			year_of_birth = 768
			NOT={ year_of_birth = 769 }
		}
		AND={
			year_of_birth = 780
			NOT={ year_of_birth = 781 }
		}
		AND={
			year_of_birth = 792
			NOT={ year_of_birth = 793 }
		}
		AND={
			year_of_birth = 804
			NOT={ year_of_birth = 805 }
		}
		AND={
			year_of_birth = 816
			NOT={ year_of_birth = 817 }
		}
		AND={
			year_of_birth = 828
			NOT={ year_of_birth = 829 }
		}
		AND={
			year_of_birth = 840
			NOT={ year_of_birth = 841 }
		}
		AND={
			year_of_birth = 852
			NOT={ year_of_birth = 853 }
		}
		AND={
			year_of_birth = 864
			NOT={ year_of_birth = 865 }
		}
		AND={
			year_of_birth = 876
			NOT={ year_of_birth = 877 }
		}
		AND={
			year_of_birth = 888
			NOT={ year_of_birth = 889 }
		}
		AND={
			year_of_birth = 900
			NOT={ year_of_birth = 901 }
		}
		AND={
			year_of_birth = 912
			NOT={ year_of_birth = 913 }
		}
		AND={
			year_of_birth = 924
			NOT={ year_of_birth = 925 }
		}
		AND={
			year_of_birth = 936
			NOT={ year_of_birth = 937 }
		}
		AND={
			year_of_birth = 948
			NOT={ year_of_birth = 949 }
		}
		AND={
			year_of_birth = 960
			NOT={ year_of_birth = 961 }
		}
		AND={
			year_of_birth = 972
			NOT={ year_of_birth = 973 }
		}
		AND={
			year_of_birth = 984
			NOT={ year_of_birth = 985 }
		}
		AND={
			year_of_birth = 996
			NOT={ year_of_birth = 997 }
		}
	}
}
is_born_under_rooster_trigger = {
	OR = {
		AND={
			year_of_birth = 1
			NOT={ year_of_birth = 2 }
		}
		AND={
			year_of_birth = 13
			NOT={ year_of_birth = 14 }
		}
		AND={
			year_of_birth = 25
			NOT={ year_of_birth = 26 }
		}
		AND={
			year_of_birth = 37
			NOT={ year_of_birth = 38 }
		}
		AND={
			year_of_birth = 49
			NOT={ year_of_birth = 50 }
		}
		AND={
			year_of_birth = 61
			NOT={ year_of_birth = 62 }
		}
		AND={
			year_of_birth = 73
			NOT={ year_of_birth = 74 }
		}
		AND={
			year_of_birth = 85
			NOT={ year_of_birth = 86 }
		}
		AND={
			year_of_birth = 97
			NOT={ year_of_birth = 98 }
		}
		AND={
			year_of_birth = 109
			NOT={ year_of_birth = 110 }
		}
		AND={
			year_of_birth = 121
			NOT={ year_of_birth = 122 }
		}
		AND={
			year_of_birth = 133
			NOT={ year_of_birth = 134 }
		}
		AND={
			year_of_birth = 145
			NOT={ year_of_birth = 146 }
		}
		AND={
			year_of_birth = 157
			NOT={ year_of_birth = 158 }
		}
		AND={
			year_of_birth = 169
			NOT={ year_of_birth = 170 }
		}
		AND={
			year_of_birth = 181
			NOT={ year_of_birth = 182 }
		}
		AND={
			year_of_birth = 193
			NOT={ year_of_birth = 194 }
		}
		AND={
			year_of_birth = 205
			NOT={ year_of_birth = 206 }
		}
		AND={
			year_of_birth = 217
			NOT={ year_of_birth = 218 }
		}
		AND={
			year_of_birth = 229
			NOT={ year_of_birth = 230 }
		}
		AND={
			year_of_birth = 241
			NOT={ year_of_birth = 242 }
		}
		AND={
			year_of_birth = 253
			NOT={ year_of_birth = 254 }
		}
		AND={
			year_of_birth = 265
			NOT={ year_of_birth = 266 }
		}
		AND={
			year_of_birth = 277
			NOT={ year_of_birth = 278 }
		}
		AND={
			year_of_birth = 289
			NOT={ year_of_birth = 290 }
		}
		AND={
			year_of_birth = 301
			NOT={ year_of_birth = 302 }
		}
		AND={
			year_of_birth = 313
			NOT={ year_of_birth = 314 }
		}
		AND={
			year_of_birth = 325
			NOT={ year_of_birth = 326 }
		}
		AND={
			year_of_birth = 337
			NOT={ year_of_birth = 338 }
		}
		AND={
			year_of_birth = 349
			NOT={ year_of_birth = 350 }
		}
		AND={
			year_of_birth = 361
			NOT={ year_of_birth = 362 }
		}
		AND={
			year_of_birth = 373
			NOT={ year_of_birth = 374 }
		}
		AND={
			year_of_birth = 385
			NOT={ year_of_birth = 386 }
		}
		AND={
			year_of_birth = 397
			NOT={ year_of_birth = 398 }
		}
		AND={
			year_of_birth = 409
			NOT={ year_of_birth = 410 }
		}
		AND={
			year_of_birth = 421
			NOT={ year_of_birth = 422 }
		}
		AND={
			year_of_birth = 433
			NOT={ year_of_birth = 434 }
		}
		AND={
			year_of_birth = 445
			NOT={ year_of_birth = 446 }
		}
		AND={
			year_of_birth = 457
			NOT={ year_of_birth = 458 }
		}
		AND={
			year_of_birth = 469
			NOT={ year_of_birth = 470 }
		}
		AND={
			year_of_birth = 481
			NOT={ year_of_birth = 482 }
		}
		AND={
			year_of_birth = 493
			NOT={ year_of_birth = 494 }
		}
		AND={
			year_of_birth = 505
			NOT={ year_of_birth = 506 }
		}
		AND={
			year_of_birth = 517
			NOT={ year_of_birth = 518 }
		}
		AND={
			year_of_birth = 529
			NOT={ year_of_birth = 530 }
		}
		AND={
			year_of_birth = 541
			NOT={ year_of_birth = 542 }
		}
		AND={
			year_of_birth = 553
			NOT={ year_of_birth = 554 }
		}
		AND={
			year_of_birth = 565
			NOT={ year_of_birth = 566 }
		}
		AND={
			year_of_birth = 577
			NOT={ year_of_birth = 578 }
		}
		AND={
			year_of_birth = 589
			NOT={ year_of_birth = 590 }
		}
		AND={
			year_of_birth = 601
			NOT={ year_of_birth = 602 }
		}
		AND={
			year_of_birth = 613
			NOT={ year_of_birth = 614 }
		}
		AND={
			year_of_birth = 625
			NOT={ year_of_birth = 626 }
		}
		AND={
			year_of_birth = 637
			NOT={ year_of_birth = 638 }
		}
		AND={
			year_of_birth = 649
			NOT={ year_of_birth = 650 }
		}
		AND={
			year_of_birth = 661
			NOT={ year_of_birth = 662 }
		}
		AND={
			year_of_birth = 673
			NOT={ year_of_birth = 674 }
		}
		AND={
			year_of_birth = 685
			NOT={ year_of_birth = 686 }
		}
		AND={
			year_of_birth = 697
			NOT={ year_of_birth = 698 }
		}
		AND={
			year_of_birth = 709
			NOT={ year_of_birth = 710 }
		}
		AND={
			year_of_birth = 721
			NOT={ year_of_birth = 722 }
		}
		AND={
			year_of_birth = 733
			NOT={ year_of_birth = 734 }
		}
		AND={
			year_of_birth = 745
			NOT={ year_of_birth = 746 }
		}
		AND={
			year_of_birth = 757
			NOT={ year_of_birth = 758 }
		}
		AND={
			year_of_birth = 769
			NOT={ year_of_birth = 770 }
		}
		AND={
			year_of_birth = 781
			NOT={ year_of_birth = 782 }
		}
		AND={
			year_of_birth = 793
			NOT={ year_of_birth = 794 }
		}
		AND={
			year_of_birth = 805
			NOT={ year_of_birth = 806 }
		}
		AND={
			year_of_birth = 817
			NOT={ year_of_birth = 818 }
		}
		AND={
			year_of_birth = 829
			NOT={ year_of_birth = 830 }
		}
		AND={
			year_of_birth = 841
			NOT={ year_of_birth = 842 }
		}
		AND={
			year_of_birth = 853
			NOT={ year_of_birth = 854 }
		}
		AND={
			year_of_birth = 865
			NOT={ year_of_birth = 866 }
		}
		AND={
			year_of_birth = 877
			NOT={ year_of_birth = 878 }
		}
		AND={
			year_of_birth = 889
			NOT={ year_of_birth = 890 }
		}
		AND={
			year_of_birth = 901
			NOT={ year_of_birth = 902 }
		}
		AND={
			year_of_birth = 913
			NOT={ year_of_birth = 914 }
		}
		AND={
			year_of_birth = 925
			NOT={ year_of_birth = 926 }
		}
		AND={
			year_of_birth = 937
			NOT={ year_of_birth = 938 }
		}
		AND={
			year_of_birth = 949
			NOT={ year_of_birth = 950 }
		}
		AND={
			year_of_birth = 961
			NOT={ year_of_birth = 962 }
		}
		AND={
			year_of_birth = 973
			NOT={ year_of_birth = 974 }
		}
		AND={
			year_of_birth = 985
			NOT={ year_of_birth = 986 }
		}
		AND={
			year_of_birth = 997
			NOT={ year_of_birth = 998 }
		}
	}
}
is_born_under_dog_trigger = {
	OR = {
		AND={
			year_of_birth = 2
			NOT={ year_of_birth = 3 }
		}
		AND={
			year_of_birth = 14
			NOT={ year_of_birth = 15 }
		}
		AND={
			year_of_birth = 26
			NOT={ year_of_birth = 27 }
		}
		AND={
			year_of_birth = 38
			NOT={ year_of_birth = 39 }
		}
		AND={
			year_of_birth = 50
			NOT={ year_of_birth = 51 }
		}
		AND={
			year_of_birth = 62
			NOT={ year_of_birth = 63 }
		}
		AND={
			year_of_birth = 74
			NOT={ year_of_birth = 75 }
		}
		AND={
			year_of_birth = 86
			NOT={ year_of_birth = 87 }
		}
		AND={
			year_of_birth = 98
			NOT={ year_of_birth = 99 }
		}
		AND={
			year_of_birth = 110
			NOT={ year_of_birth = 111 }
		}
		AND={
			year_of_birth = 122
			NOT={ year_of_birth = 123 }
		}
		AND={
			year_of_birth = 134
			NOT={ year_of_birth = 135 }
		}
		AND={
			year_of_birth = 146
			NOT={ year_of_birth = 147 }
		}
		AND={
			year_of_birth = 158
			NOT={ year_of_birth = 159 }
		}
		AND={
			year_of_birth = 170
			NOT={ year_of_birth = 171 }
		}
		AND={
			year_of_birth = 182
			NOT={ year_of_birth = 183 }
		}
		AND={
			year_of_birth = 194
			NOT={ year_of_birth = 195 }
		}
		AND={
			year_of_birth = 206
			NOT={ year_of_birth = 207 }
		}
		AND={
			year_of_birth = 218
			NOT={ year_of_birth = 219 }
		}
		AND={
			year_of_birth = 230
			NOT={ year_of_birth = 231 }
		}
		AND={
			year_of_birth = 242
			NOT={ year_of_birth = 243 }
		}
		AND={
			year_of_birth = 254
			NOT={ year_of_birth = 255 }
		}
		AND={
			year_of_birth = 266
			NOT={ year_of_birth = 267 }
		}
		AND={
			year_of_birth = 278
			NOT={ year_of_birth = 279 }
		}
		AND={
			year_of_birth = 290
			NOT={ year_of_birth = 291 }
		}
		AND={
			year_of_birth = 302
			NOT={ year_of_birth = 303 }
		}
		AND={
			year_of_birth = 314
			NOT={ year_of_birth = 315 }
		}
		AND={
			year_of_birth = 326
			NOT={ year_of_birth = 327 }
		}
		AND={
			year_of_birth = 338
			NOT={ year_of_birth = 339 }
		}
		AND={
			year_of_birth = 350
			NOT={ year_of_birth = 351 }
		}
		AND={
			year_of_birth = 362
			NOT={ year_of_birth = 363 }
		}
		AND={
			year_of_birth = 374
			NOT={ year_of_birth = 375 }
		}
		AND={
			year_of_birth = 386
			NOT={ year_of_birth = 387 }
		}
		AND={
			year_of_birth = 398
			NOT={ year_of_birth = 399 }
		}
		AND={
			year_of_birth = 410
			NOT={ year_of_birth = 411 }
		}
		AND={
			year_of_birth = 422
			NOT={ year_of_birth = 423 }
		}
		AND={
			year_of_birth = 434
			NOT={ year_of_birth = 435 }
		}
		AND={
			year_of_birth = 446
			NOT={ year_of_birth = 447 }
		}
		AND={
			year_of_birth = 458
			NOT={ year_of_birth = 459 }
		}
		AND={
			year_of_birth = 470
			NOT={ year_of_birth = 471 }
		}
		AND={
			year_of_birth = 482
			NOT={ year_of_birth = 483 }
		}
		AND={
			year_of_birth = 494
			NOT={ year_of_birth = 495 }
		}
		AND={
			year_of_birth = 506
			NOT={ year_of_birth = 507 }
		}
		AND={
			year_of_birth = 518
			NOT={ year_of_birth = 519 }
		}
		AND={
			year_of_birth = 530
			NOT={ year_of_birth = 531 }
		}
		AND={
			year_of_birth = 542
			NOT={ year_of_birth = 543 }
		}
		AND={
			year_of_birth = 554
			NOT={ year_of_birth = 555 }
		}
		AND={
			year_of_birth = 566
			NOT={ year_of_birth = 567 }
		}
		AND={
			year_of_birth = 578
			NOT={ year_of_birth = 579 }
		}
		AND={
			year_of_birth = 590
			NOT={ year_of_birth = 591 }
		}
		AND={
			year_of_birth = 602
			NOT={ year_of_birth = 603 }
		}
		AND={
			year_of_birth = 614
			NOT={ year_of_birth = 615 }
		}
		AND={
			year_of_birth = 626
			NOT={ year_of_birth = 627 }
		}
		AND={
			year_of_birth = 638
			NOT={ year_of_birth = 639 }
		}
		AND={
			year_of_birth = 650
			NOT={ year_of_birth = 651 }
		}
		AND={
			year_of_birth = 662
			NOT={ year_of_birth = 663 }
		}
		AND={
			year_of_birth = 674
			NOT={ year_of_birth = 675 }
		}
		AND={
			year_of_birth = 686
			NOT={ year_of_birth = 687 }
		}
		AND={
			year_of_birth = 698
			NOT={ year_of_birth = 699 }
		}
		AND={
			year_of_birth = 710
			NOT={ year_of_birth = 711 }
		}
		AND={
			year_of_birth = 722
			NOT={ year_of_birth = 723 }
		}
		AND={
			year_of_birth = 734
			NOT={ year_of_birth = 735 }
		}
		AND={
			year_of_birth = 746
			NOT={ year_of_birth = 747 }
		}
		AND={
			year_of_birth = 758
			NOT={ year_of_birth = 759 }
		}
		AND={
			year_of_birth = 770
			NOT={ year_of_birth = 771 }
		}
		AND={
			year_of_birth = 782
			NOT={ year_of_birth = 783 }
		}
		AND={
			year_of_birth = 794
			NOT={ year_of_birth = 795 }
		}
		AND={
			year_of_birth = 806
			NOT={ year_of_birth = 807 }
		}
		AND={
			year_of_birth = 818
			NOT={ year_of_birth = 819 }
		}
		AND={
			year_of_birth = 830
			NOT={ year_of_birth = 831 }
		}
		AND={
			year_of_birth = 842
			NOT={ year_of_birth = 843 }
		}
		AND={
			year_of_birth = 854
			NOT={ year_of_birth = 855 }
		}
		AND={
			year_of_birth = 866
			NOT={ year_of_birth = 867 }
		}
		AND={
			year_of_birth = 878
			NOT={ year_of_birth = 879 }
		}
		AND={
			year_of_birth = 890
			NOT={ year_of_birth = 891 }
		}
		AND={
			year_of_birth = 902
			NOT={ year_of_birth = 903 }
		}
		AND={
			year_of_birth = 914
			NOT={ year_of_birth = 915 }
		}
		AND={
			year_of_birth = 926
			NOT={ year_of_birth = 927 }
		}
		AND={
			year_of_birth = 938
			NOT={ year_of_birth = 939 }
		}
		AND={
			year_of_birth = 950
			NOT={ year_of_birth = 951 }
		}
		AND={
			year_of_birth = 962
			NOT={ year_of_birth = 963 }
		}
		AND={
			year_of_birth = 974
			NOT={ year_of_birth = 975 }
		}
		AND={
			year_of_birth = 986
			NOT={ year_of_birth = 987 }
		}
		AND={
			year_of_birth = 998
			NOT={ year_of_birth = 999 }
		}
	}
}
is_born_under_pig_trigger = {
	OR = {
		AND={
			year_of_birth = 3
			NOT={ year_of_birth = 4 }
		}
		AND={
			year_of_birth = 15
			NOT={ year_of_birth = 16 }
		}
		AND={
			year_of_birth = 27
			NOT={ year_of_birth = 28 }
		}
		AND={
			year_of_birth = 39
			NOT={ year_of_birth = 40 }
		}
		AND={
			year_of_birth = 51
			NOT={ year_of_birth = 52 }
		}
		AND={
			year_of_birth = 63
			NOT={ year_of_birth = 64 }
		}
		AND={
			year_of_birth = 75
			NOT={ year_of_birth = 76 }
		}
		AND={
			year_of_birth = 87
			NOT={ year_of_birth = 88 }
		}
		AND={
			year_of_birth = 99
			NOT={ year_of_birth = 100 }
		}
		AND={
			year_of_birth = 111
			NOT={ year_of_birth = 112 }
		}
		AND={
			year_of_birth = 123
			NOT={ year_of_birth = 124 }
		}
		AND={
			year_of_birth = 135
			NOT={ year_of_birth = 136 }
		}
		AND={
			year_of_birth = 147
			NOT={ year_of_birth = 148 }
		}
		AND={
			year_of_birth = 159
			NOT={ year_of_birth = 160 }
		}
		AND={
			year_of_birth = 171
			NOT={ year_of_birth = 172 }
		}
		AND={
			year_of_birth = 183
			NOT={ year_of_birth = 184 }
		}
		AND={
			year_of_birth = 195
			NOT={ year_of_birth = 196 }
		}
		AND={
			year_of_birth = 207
			NOT={ year_of_birth = 208 }
		}
		AND={
			year_of_birth = 219
			NOT={ year_of_birth = 220 }
		}
		AND={
			year_of_birth = 231
			NOT={ year_of_birth = 232 }
		}
		AND={
			year_of_birth = 243
			NOT={ year_of_birth = 244 }
		}
		AND={
			year_of_birth = 255
			NOT={ year_of_birth = 256 }
		}
		AND={
			year_of_birth = 267
			NOT={ year_of_birth = 268 }
		}
		AND={
			year_of_birth = 279
			NOT={ year_of_birth = 280 }
		}
		AND={
			year_of_birth = 291
			NOT={ year_of_birth = 292 }
		}
		AND={
			year_of_birth = 303
			NOT={ year_of_birth = 304 }
		}
		AND={
			year_of_birth = 315
			NOT={ year_of_birth = 316 }
		}
		AND={
			year_of_birth = 327
			NOT={ year_of_birth = 328 }
		}
		AND={
			year_of_birth = 339
			NOT={ year_of_birth = 340 }
		}
		AND={
			year_of_birth = 351
			NOT={ year_of_birth = 352 }
		}
		AND={
			year_of_birth = 363
			NOT={ year_of_birth = 364 }
		}
		AND={
			year_of_birth = 375
			NOT={ year_of_birth = 376 }
		}
		AND={
			year_of_birth = 387
			NOT={ year_of_birth = 388 }
		}
		AND={
			year_of_birth = 399
			NOT={ year_of_birth = 400 }
		}
		AND={
			year_of_birth = 411
			NOT={ year_of_birth = 412 }
		}
		AND={
			year_of_birth = 423
			NOT={ year_of_birth = 424 }
		}
		AND={
			year_of_birth = 435
			NOT={ year_of_birth = 436 }
		}
		AND={
			year_of_birth = 447
			NOT={ year_of_birth = 448 }
		}
		AND={
			year_of_birth = 459
			NOT={ year_of_birth = 460 }
		}
		AND={
			year_of_birth = 471
			NOT={ year_of_birth = 472 }
		}
		AND={
			year_of_birth = 483
			NOT={ year_of_birth = 484 }
		}
		AND={
			year_of_birth = 495
			NOT={ year_of_birth = 496 }
		}
		AND={
			year_of_birth = 507
			NOT={ year_of_birth = 508 }
		}
		AND={
			year_of_birth = 519
			NOT={ year_of_birth = 520 }
		}
		AND={
			year_of_birth = 531
			NOT={ year_of_birth = 532 }
		}
		AND={
			year_of_birth = 543
			NOT={ year_of_birth = 544 }
		}
		AND={
			year_of_birth = 555
			NOT={ year_of_birth = 556 }
		}
		AND={
			year_of_birth = 567
			NOT={ year_of_birth = 568 }
		}
		AND={
			year_of_birth = 579
			NOT={ year_of_birth = 580 }
		}
		AND={
			year_of_birth = 591
			NOT={ year_of_birth = 592 }
		}
		AND={
			year_of_birth = 603
			NOT={ year_of_birth = 604 }
		}
		AND={
			year_of_birth = 615
			NOT={ year_of_birth = 616 }
		}
		AND={
			year_of_birth = 627
			NOT={ year_of_birth = 628 }
		}
		AND={
			year_of_birth = 639
			NOT={ year_of_birth = 640 }
		}
		AND={
			year_of_birth = 651
			NOT={ year_of_birth = 652 }
		}
		AND={
			year_of_birth = 663
			NOT={ year_of_birth = 664 }
		}
		AND={
			year_of_birth = 675
			NOT={ year_of_birth = 676 }
		}
		AND={
			year_of_birth = 687
			NOT={ year_of_birth = 688 }
		}
		AND={
			year_of_birth = 699
			NOT={ year_of_birth = 700 }
		}
		AND={
			year_of_birth = 711
			NOT={ year_of_birth = 712 }
		}
		AND={
			year_of_birth = 723
			NOT={ year_of_birth = 724 }
		}
		AND={
			year_of_birth = 735
			NOT={ year_of_birth = 736 }
		}
		AND={
			year_of_birth = 747
			NOT={ year_of_birth = 748 }
		}
		AND={
			year_of_birth = 759
			NOT={ year_of_birth = 760 }
		}
		AND={
			year_of_birth = 771
			NOT={ year_of_birth = 772 }
		}
		AND={
			year_of_birth = 783
			NOT={ year_of_birth = 784 }
		}
		AND={
			year_of_birth = 795
			NOT={ year_of_birth = 796 }
		}
		AND={
			year_of_birth = 807
			NOT={ year_of_birth = 808 }
		}
		AND={
			year_of_birth = 819
			NOT={ year_of_birth = 820 }
		}
		AND={
			year_of_birth = 831
			NOT={ year_of_birth = 832 }
		}
		AND={
			year_of_birth = 843
			NOT={ year_of_birth = 844 }
		}
		AND={
			year_of_birth = 855
			NOT={ year_of_birth = 856 }
		}
		AND={
			year_of_birth = 867
			NOT={ year_of_birth = 868 }
		}
		AND={
			year_of_birth = 879
			NOT={ year_of_birth = 880 }
		}
		AND={
			year_of_birth = 891
			NOT={ year_of_birth = 892 }
		}
		AND={
			year_of_birth = 903
			NOT={ year_of_birth = 904 }
		}
		AND={
			year_of_birth = 915
			NOT={ year_of_birth = 916 }
		}
		AND={
			year_of_birth = 927
			NOT={ year_of_birth = 928 }
		}
		AND={
			year_of_birth = 939
			NOT={ year_of_birth = 940 }
		}
		AND={
			year_of_birth = 951
			NOT={ year_of_birth = 952 }
		}
		AND={
			year_of_birth = 963
			NOT={ year_of_birth = 964 }
		}
		AND={
			year_of_birth = 975
			NOT={ year_of_birth = 976 }
		}
		AND={
			year_of_birth = 987
			NOT={ year_of_birth = 988 }
		}
		AND={
			year_of_birth = 999
			NOT={ year_of_birth = 1000 }
		}
	}
}

is_romantic_zodiac_match_with_root_trigger = {
	OR = {
		AND = {
			is_born_under_rat_trigger = yes
			ROOT = {
				OR = {
					is_born_under_ox_trigger = yes
					is_born_under_dragon_trigger = yes
					is_born_under_monkey_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_ox_trigger = yes
			ROOT = {
				OR = {
					is_born_under_rat_trigger = yes
					is_born_under_snake_trigger = yes
					is_born_under_rooster_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_tiger_trigger = yes
			ROOT = {
				OR = {
					is_born_under_dog_trigger = yes
					is_born_under_horse_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_rabbit_trigger = yes
			ROOT = {
				OR = {
					is_born_under_dog_trigger = yes
					is_born_under_pig_trigger = yes
					is_born_under_goat_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_dragon_trigger = yes
			ROOT = {
				OR = {
					is_born_under_rat_trigger = yes
					is_born_under_monkey_trigger = yes
					is_born_under_rooster_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_snake_trigger = yes
			ROOT = {
				OR = {
					is_born_under_ox_trigger = yes
					is_born_under_rooster_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_horse_trigger = yes
			ROOT = {
				OR = {
					is_born_under_dog_trigger = yes
					is_born_under_goat_trigger = yes
					is_born_under_tiger_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_goat_trigger = yes
			ROOT = {
				OR = {
					is_born_under_pig_trigger = yes
					is_born_under_horse_trigger = yes
					is_born_under_rabbit_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_monkey_trigger = yes
			ROOT = {
				OR = {
					is_born_under_rat_trigger = yes
					is_born_under_dragon_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_rooster_trigger = yes
			ROOT = {
				OR = {
					is_born_under_ox_trigger = yes
					is_born_under_snake_trigger = yes
					is_born_under_dragon_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_dog_trigger = yes
			ROOT = {
				OR = {
					is_born_under_horse_trigger = yes
					is_born_under_tiger_trigger = yes
					is_born_under_rabbit_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_pig_trigger = yes
			ROOT = {
				OR = {
					is_born_under_goat_trigger = yes
					is_born_under_rabbit_trigger = yes
				}
			}
		}
	}
}

is_romantic_zodiac_mismatch_with_root = {
	OR = {
		AND = {
			is_born_under_rat_trigger = yes
			ROOT = {
				OR = {
					is_born_under_goat_trigger = yes
					is_born_under_horse_trigger = yes
					is_born_under_rabbit_trigger = yes
					is_born_under_rooster_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_ox_trigger = yes
			ROOT = {
				OR = {
					is_born_under_dog_trigger = yes
					is_born_under_goat_trigger = yes
					is_born_under_horse_trigger = yes
					is_born_under_dragon_trigger = yes
					is_born_under_rabbit_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_tiger_trigger = yes
			ROOT = {
				OR = {
					is_born_under_snake_trigger = yes
					is_born_under_monkey_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_rabbit_trigger = yes
			ROOT = {
				OR = {
					is_born_under_ox_trigger = yes
					is_born_under_rat_trigger = yes
					is_born_under_horse_trigger = yes
					is_born_under_dragon_trigger = yes
					is_born_under_rooster_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_dragon_trigger = yes
			ROOT = {
				OR = {
					is_born_under_ox_trigger = yes
					is_born_under_dog_trigger = yes
					is_born_under_dragon_trigger = yes
					is_born_under_rabbit_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_snake_trigger = yes
			ROOT = {
				OR = {
					is_born_under_pig_trigger = yes
					is_born_under_tiger_trigger = yes
					is_born_under_monkey_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_horse_trigger = yes
			ROOT = {
				OR = {
					is_born_under_ox_trigger = yes
					is_born_under_rat_trigger = yes
					is_born_under_horse_trigger = yes
					is_born_under_rabbit_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_goat_trigger = yes
			ROOT = {
				OR = {
					is_born_under_ox_trigger = yes
					is_born_under_dog_trigger = yes
					is_born_under_rat_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_monkey_trigger = yes
			ROOT = {
				OR = {
					is_born_under_pig_trigger = yes
					is_born_under_snake_trigger = yes
					is_born_under_tiger_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_rooster_trigger = yes
			ROOT = {
				OR = {
					is_born_under_dog_trigger = yes
					is_born_under_rat_trigger = yes
					is_born_under_rabbit_trigger = yes
					is_born_under_rooster_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_dog_trigger = yes
			ROOT = {
				OR = {
					is_born_under_ox_trigger = yes
					is_born_under_goat_trigger = yes
					is_born_under_dragon_trigger = yes
					is_born_under_rooster_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_pig_trigger = yes
			ROOT = {
				OR = {
					is_born_under_pig_trigger = yes
					is_born_under_snake_trigger = yes
					is_born_under_monkey_trigger = yes
				}
			}
		}
	}
}

has_unsafe_secret_religion = {
	NOT = { is_nomadic = yes }
	AND = {
		NOT = { has_dlc = "The Old Gods" }
		secret_religion = tengri_pagan
	}
}
#to check type of ingredient... (if more are added, they need to go in here to work with the current system)
is_ingredient_herb_trigger = {
	OR = {
		artifact_type = ingredient_herb1
		artifact_type = ingredient_herb2
		artifact_type = ingredient_herb3
		artifact_type = ingredient_herb4
		artifact_type = ingredient_herb5
		artifact_type = ingredient_herb6
		artifact_type = ingredient_herb7
		artifact_type = ingredient_herb8
		artifact_type = ingredient_herb9
	}
}

is_ingredient_animal_part_trigger = {
	OR = {
		artifact_type = ingredient_animal1
		artifact_type = ingredient_animal2
		artifact_type = ingredient_animal3
		artifact_type = ingredient_animal4
		artifact_type = ingredient_animal5
		artifact_type = ingredient_animal6
		artifact_type = ingredient_animal7
		artifact_type = ingredient_animal8
		artifact_type = ingredient_animal9
	}
}

is_ingredient_powder_trigger = {
	OR = {
		artifact_type = ingredient_metal_exotic1
		artifact_type = ingredient_metal_exotic5
		artifact_type = ingredient_metal_exotic6
		artifact_type = ingredient_metal_exotic7
		artifact_type = ingredient_metal_exotic8
		artifact_type = ingredient_metal_exotic9
	}
}

is_ingredient_liquid_trigger = {
	OR = {
		artifact_type = ingredient_metal_exotic2
		artifact_type = ingredient_metal_exotic3
		artifact_type = ingredient_metal_exotic4
	}
}

#to check which ingredient TO BE selected (via scripted effects)...
has_a_herb_ingredient_trigger = {
	any_artifact = {
		is_ingredient_herb_trigger = yes
	}
}

has_an_animal_part_ingredient_trigger = {
	any_artifact = {
		is_ingredient_animal_part_trigger = yes
	}
}

has_a_powder_ingredient_trigger = {
	any_artifact = {
		is_ingredient_powder_trigger = yes
	}
}

has_a_liquid_ingredient_trigger = {
	any_artifact = {
		is_ingredient_liquid_trigger = yes
	}
}

#to check if HAS selected (via scripted effects) an ingredient...
has_selected_herb_ingredient_1_trigger = {
	any_artifact = {
		has_artifact_flag = selected_ingredient_1
		is_ingredient_herb_trigger = yes
	}
}

has_selected_animal_part_ingredient_1_trigger = {
	any_artifact = {
		has_artifact_flag = selected_ingredient_1
		is_ingredient_animal_part_trigger = yes
	}
}

has_selected_powder_ingredient_1_trigger = {
	any_artifact = {
		has_artifact_flag = selected_ingredient_1
		is_ingredient_powder_trigger = yes
	}
}

has_selected_liquid_ingredient_1_trigger = {
	any_artifact = {
		has_artifact_flag = selected_ingredient_1
		is_ingredient_liquid_trigger = yes
	}
}

has_selected_herb_ingredient_2_trigger = {
	any_artifact = {
		has_artifact_flag = selected_ingredient_2
		is_ingredient_herb_trigger = yes
	}
}

has_selected_animal_part_ingredient_2_trigger = {
	any_artifact = {
		has_artifact_flag = selected_ingredient_2
		is_ingredient_animal_part_trigger = yes
	}
}

has_selected_powder_ingredient_2_trigger = {
	any_artifact = {
		has_artifact_flag = selected_ingredient_2
		is_ingredient_powder_trigger = yes
	}
}

has_selected_liquid_ingredient_2_trigger = {
	any_artifact = {
		has_artifact_flag = selected_ingredient_2
		is_ingredient_liquid_trigger = yes
	}
}

has_selected_ingredient_1_trigger = {
	any_artifact = {
		has_artifact_flag = selected_ingredient_1
	}
}

has_selected_ingredient_2_trigger = {
	any_artifact = {
		has_artifact_flag = selected_ingredient_2
	}
}

selected_ingredient_is_sleep_inducing_trigger = {
	any_artifact = {
		OR = {
			has_artifact_flag = selected_ingredient_1
			has_artifact_flag = selected_ingredient_2
		}
		OR = {
			artifact_type = ingredient_herb7
			artifact_type = ingredient_herb3
			artifact_type = ingredient_herb9			
		}
	}
}

selected_ingredient_is_antipyretic_trigger = {
	any_artifact = {
		OR = {
			has_artifact_flag = selected_ingredient_1
			has_artifact_flag = selected_ingredient_2
		}
		OR = {
			artifact_type = ingredient_herb1
			artifact_type = ingredient_herb2
			artifact_type = ingredient_herb4
			artifact_type = ingredient_herb5
			artifact_type = ingredient_herb8
			artifact_type = ingredient_metal_exotic6
		}
	}
}

selected_ingredient_is_perceived_healthy_trigger = {
	any_artifact = {
		OR = {
			has_artifact_flag = selected_ingredient_1
			has_artifact_flag = selected_ingredient_2
		}
		OR = {
			AND = {
				is_ingredient_herb_trigger = yes
				NOT = { artifact_type = ingredient_herb3 } #Mandrake
			}
			artifact_type = ingredient_metal_exotic8 #Mercury
			artifact_type = ingredient_metal_exotic8 #Iron
			artifact_type = ingredient_metal_exotic6 #Gold

			artifact_type = ingredient_animal2 #Kidney
			artifact_type = ingredient_animal7 #Heart
			artifact_type = ingredient_animal8 #Liver
			artifact_type = ingredient_animal9 #Intestines
		}
	}
}

selected_ingredient_is_unhealthy_trigger = {
	any_artifact = {
		OR = {
			has_artifact_flag = selected_ingredient_1
			has_artifact_flag = selected_ingredient_2
		}
		OR = {
			artifact_type = ingredient_herb3 #Mandrake
			artifact_type = ingredient_metal_exotic8 #Mercury
			artifact_type = ingredient_metal_exotic8 #Iron
			is_ingredient_animal_part_trigger = yes
		}
	}
}

selected_ingredient_1_and_2_are_same = {
	#Checks whether the ingredients selected are same type, such as two Hibiscus (if so, returns true)...
	any_artifact = {
		has_artifact_flag = selected_ingredient_1
		ROOT = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_2
				is_artifact_same_type_as = PREVPREV
			}
		}
	}
}

ingredient_is_sleep_inducing_trigger = {
	OR = {
		artifact_type = ingredient_herb7
		artifact_type = ingredient_herb3
		artifact_type = ingredient_herb9
	}
}

ingredient_is_antipyretic_trigger = {
	OR = {
		artifact_type = ingredient_herb1
		artifact_type = ingredient_herb2
		artifact_type = ingredient_herb4
		artifact_type = ingredient_herb5
		artifact_type = ingredient_herb8
		artifact_type = ingredient_metal_exotic6
	}
}

ingredient_is_perceived_healthy_trigger = {
	OR = {
		AND = {
			is_ingredient_herb_trigger = yes
			NOT = { artifact_type = ingredient_herb3 } #Mandrake
		}
		artifact_type = ingredient_metal_exotic8 #Mercury
		artifact_type = ingredient_metal_exotic8 #Iron
		artifact_type = ingredient_metal_exotic6 #Gold

		artifact_type = ingredient_animal2 #Kidney
		artifact_type = ingredient_animal7 #Heart
		artifact_type = ingredient_animal8 #Liver
		artifact_type = ingredient_animal9 #Intestines
	}
}

ingredient_is_unhealthy_trigger = {
	OR = {
		artifact_type = ingredient_herb3 #Mandrake
		artifact_type = ingredient_metal_exotic8 #Mercury
		artifact_type = ingredient_metal_exotic8 #Iron
		AND = {
			is_ingredient_animal_part_trigger = yes
			NOR = {
				artifact_type = ingredient_animal2 #Kidney
				artifact_type = ingredient_animal7 #Heart
				artifact_type = ingredient_animal8 #Liver
				artifact_type = ingredient_animal9 #Intestines
			}
		}
	}
}

same_true_religion_as_from_trigger = {
	true_religion = FROM
}
same_true_religion_as_root_trigger = {
	true_religion = ROOT
}

religion_openly_animist_or_reformed_trigger = {
	custom_tooltip = {
		text = religion_openly_animist_or_reformed_tooltip
		hidden_trigger = {
			religion = animist
		}
	}
}
religion_openly_baihu_or_reformed_trigger = {
	custom_tooltip = {
		text = religion_openly_baihu_or_reformed_tooltip
		hidden_trigger = {
			religion = baihu
		}
	}
}
religion_openly_baima_or_reformed_trigger = {
	custom_tooltip = {
		text = religion_openly_baima_or_reformed_tooltip
		hidden_trigger = {
			religion = baima
		}
	}
}
religion_openly_baishi_or_reformed_trigger = {
	custom_tooltip = {
		text = religion_openly_baishi_or_reformed_tooltip
		hidden_trigger = {
			religion = baishi
		}
	}
}
religion_openly_huojiao_or_reformed_trigger = {
	custom_tooltip = {
		text = religion_openly_huojiao_or_reformed_tooltip
		hidden_trigger = {
			religion = huojiao
		}
	}
}
religion_openly_shamanist_or_reformed_trigger = {
	custom_tooltip = {
		text = religion_openly_shamanist_or_reformed_tooltip
		hidden_trigger = {
			religion = shamanist
		}
	}
}
religion_openly_shinto_or_reformed_trigger = {
	custom_tooltip = {
		text = religion_openly_shinto_or_reformed_tooltip
		hidden_trigger = {
			religion = shinto
		}
	}
}
religion_openly_tengri_or_reformed_trigger = {
	custom_tooltip = {
		text = religion_openly_tengri_or_reformed_tooltip
		hidden_trigger = {
			religion = tengri_pagan
		}
	}
}

is_blood_relative_of_root_trigger = {
	OR = {
		is_ancestor_of = ROOT
		is_descendant_of = ROOT
		sibling = ROOT
		is_cousin_of = ROOT
		is_aunt_uncle_of = ROOT
		is_nibling_of = ROOT
		dynasty = ROOT
	}
}

silk_road_trade_post_trigger = {
	custom_tooltip = {
		text = silk_road_province_desc
		hidden_tooltip = {
			OR = {
				province_id = 1 #Henan
				province_id = 20 #Changan
				province_id = 69 #Bohai
				province_id = 107 #Cangwu
				province_id = 108 #Longbian
				province_id = 110 #Miling
				province_id = 117 #Zhuwu
				province_id = 151 #Tianshui
				province_id = 158 #Dunhuang
				province_id = 159 #Jincheng
				province_id = 160 #Linqiang
				province_id = 162 #Jiuquan
				province_id = 167 #Wuwei
				province_id = 170 #Juyan
				province_id = 172 #Zhangye
				province_id = 174 #Beihai
				province_id = 180 #Donglai
				province_id = 204 #Chenliu
				province_id = 215 #Yan
				province_id = 219 #Lu
				province_id = 234 #Jianye
				province_id = 238 #Wu
				province_id = 246 #Kuaiji
				province_id = 257 #Chengdu
				province_id = 276 #Hanzhong
				province_id = 286 #Buwei
				province_id = 318 #Lelang
				province_id = 322 #Lingzhi
				province_id = 333 #Pingyu
				province_id = 337 #Xincai
				province_id = 354 #Xuchang
				province_id = 363 #Turpan
				province_id = 379 #Baekje
				province_id = 386 #Jinhan
			}
		}
	}
}

is_any_kinslayer_trigger = {
	OR = {
		trait = kinslayer
		trait = familial_kinslayer
		trait = dynastic_kinslayer
	}
}

has_unsafe_religion = {
	NOT = { is_nomadic = yes }
	OR = {
		AND = {
			NOT = { has_dlc = "The Old Gods" }
			religion = tengri_pagan
		}
	}
}

courtier_from_china_trigger = {
	custom_tooltip = {
		text = courtier_from_china_trigger_tt
		has_character_flag = originated_from_chinese_court
	}
}

using_unimportant_cb = {
	OR = {
		using_cb = peasant_revolt
		using_cb = heretic_revolt
		using_cb = religious_revolt
		using_cb = liberation_revolt
	}
}

death_in_china_trigger = {
	OR = {
		death_reason = death_went_to_china
		death_reason = death_offmap
		death_reason = death_went_back_to_china
		death_reason = death_in_china_historic
	}
}

death_no_trace_trigger = {
	OR = {
		death_reason = death_missing
		death_reason = death_vanished
	}
}

proselytize_convert_independent_trigger = {
	owner = {
		OR = { 
			FROM = { NOT = { religion_group = pagan_group } } 
			FROM = { has_religion_feature = religion_proselytizing }
		}
		independent = yes
		NOT = { religion = FROM }
		religion_group = pagan_group
		is_reformed_religion = no
		capital_scope = {
			province = ROOT
		}
		controls_religion = no
		FROM = {
			higher_tier_than = COUNT
			OR = {
				independent = yes
				higher_tier_than = DUKE
			}
		}
		NOT = {
			has_opinion_modifier = { who = FROM modifier = opinion_sent_preacher }
		}
		is_within_diplo_range = FROM
	}
}

is_toddler_age_trigger = {
	age = 0
 	NOT = { age = 4 }
}

is_young_child_age_trigger = {
	age = 4
 	NOT = { age = 9 }
}

is_child_age_trigger = {
	age = 9
 	NOT = { age = 12 }
}

is_adolescent_age_trigger = {
	age = 12
 	NOT = { age = 17 }
}

is_teenager_age_trigger = {
	age = 13
 	NOT = { age = 20 }
}

is_grown_up_age_trigger = {
	age = 20
}

is_middle_aged_trigger = {
	age = 40
	NOT = { age = 65 }
}

is_senior_age_trigger = {
	age = 50
}

is_elder_age_trigger = {
	age = 70
}

# Hardcoded trigger for the Execute Imprisoned interaction. Used for the description warning you of kinslaying
# Root - The executioner
# event_target:kinslayer_target - The person being executed
will_add_kinslayer = {
	OR = {
		AND = {
			NOT = { trait = kinslayer }
			OR = {
				is_ancestor_of = event_target:kinslayer_target
				is_descendant_of = event_target:kinslayer_target
				sibling = event_target:kinslayer_target
			}
		}
		AND = {
			NOR = { 
				trait = kinslayer
				trait = familial_kinslayer
			}
			OR = {
				is_cousin_of = event_target:kinslayer_target
				is_aunt_uncle_of = event_target:kinslayer_target
				is_nibling_of = event_target:kinslayer_target
			}
		}
		AND = {
			NOR = { 
				trait = kinslayer
				trait = familial_kinslayer
				trait = dynastic_kinslayer
			}
			is_lowborn = no
			dynasty = event_target:kinslayer_target
		}
	}
}

# Hardcoded trigger for the Assassinate interaction. Used for triggering whether it can be used at all
# Root - The person being assassinated
# From - The person doing the assassination
assassination_interaction_trigger = {
	conditional_tooltip = {
		trigger = {
			multiplayer = yes
		}
		custom_tooltip = {
			text = MP_GAME_RULE_ALLOWED
			OR = {
				ai = yes
				NOT = {
					has_game_rule = {
						name = multiplayer_assassinations
						value = no_players
					}
				}
			}
			OR = {
				NOT = {
					has_game_rule = {
						name = multiplayer_assassinations
						value = no_players_or_relatives
					}
				}
				AND = {
					ai = yes
					NOT = {
						any_close_relative = {
							ai = no
							NOT = { character = FROM }
						}
					}
					NOT = {
						any_spouse = {
							ai = no
							NOT = { character = FROM }
						}
					}
					NOT = {
						liege = {
							ai = no
							dynasty = ROOT
							NOT = { character = FROM }
						}
						is_heir = yes
					}
				}
			}
		}
	}
}

#checks whether ROOT has one of the following opinion modifiers with the currently scoped character
root_has_terrible_opinion_modifier_of_this_trigger = {
	OR = {
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_hate }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_tortured_me }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_me }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_imprisoned }
	}
}

#checks whether the current scope has one of the following opinion modifiers against ROOT
this_has_terrible_opinion_modifier_of_root_trigger = {
	OR = {
		has_opinion_modifier = { who = ROOT modifier = opinion_hate }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_imprisoned }
	}
}

#for MNM.9000 chain
the_hunt_for_an_artifact_has_made_enough_progress_trigger = {
	OR = {
		AND = {
			event_target:relic_ruler = { check_variable = { which = relic_score value = 8 } } #15 } } old value
			event_target:relic_ruler = { has_character_modifier = relic_rumor_minor } 
		}
		AND = {
			event_target:relic_ruler = { check_variable = { which = relic_score value = 14 } } #25 } } old value
			event_target:relic_ruler = { has_character_modifier = relic_rumor_medium } 
		}
		AND = {
			event_target:relic_ruler = { check_variable = { which = relic_score value = 20 } } #40 } } old value
			event_target:relic_ruler = { has_character_modifier = relic_rumor_major } 
		}
	}
}

has_tribal_or_nomadic_government_trigger = {
	custom_tooltip = {
		text = tribal_or_nomadic_government_tt
		hidden_trigger = {
			OR = {
				government = tribal_government
				government = nomadic_government
			}
		}
	}
}


has_minor_title_relating_to_martial_trigger = { #WIP - feel free to add to this
	OR = {
		has_minor_title = title_master_of_the_horse
		has_minor_title = title_cupbearer
		has_minor_title = title_commander
	}
}


#returns true if scoped character already dislikes ROOT (while not being caught up in a friendship or love, and such)
potentially_interested_in_rivaling_root_trigger = { #must be a character
	NOT = { is_rival = ROOT }
	NOT = { is_lover = ROOT }
	NOT = { is_friend = ROOT }
	NOT = { opinion = { who = ROOT value = 5 } }
	OR = {
		ROOT = { is_foe = PREV } #checks if the current scope has committed a crime against ROOT (I hope)
		is_foe = ROOT  #checks if root has committed a crime against the current scope
		NOT = { opinion = { who = ROOT value = -25 } }
		this_has_terrible_opinion_modifier_of_root_trigger = yes
		#Fill up with fun opinion modifiers, whenever you think of them...! Ideas: opinion_spurned, opinion_revoked_my_title, etc
	}
}
#returns true if scoped character is already disliked by ROOT (while not being caught up in a friendship or love, and such)
root_potentially_interested_in_rivaling_this_trigger = { #must be a character
	NOT = { is_rival = ROOT }
	NOT = { is_lover = ROOT }
	NOT = { is_friend = ROOT }
	NOT = { reverse_opinion = { who = ROOT value = 5 } }
	OR = {
		ROOT = { is_foe = PREV } #checks if the current scope has committed a crime against ROOT (I hope)
		is_foe = ROOT  #checks if root has committed a crime against the current scope
		NOT = { reverse_opinion = { who = ROOT value = -25 } }
		root_has_terrible_opinion_modifier_of_this_trigger = yes
		#Fill up with fun opinion modifiers, whenever you think of them...! Ideas: opinion_spurned, opinion_revoked_my_title, etc
	}
}

#returns true if scoped character and ROOT are both sort of interested in a rivalry
#(they both dislike one another and are not friends, lovers, or rivals already)
current_scope_and_root_make_sense_as_rivals_trigger = {
	potentially_interested_in_rivaling_root_trigger = yes
	root_potentially_interested_in_rivaling_this_trigger = yes
}

#checks whether the current scope has one of the following opinion modifiers against PREV
this_has_friendly_opinion_modifier_of_prev_trigger = {
	OR = {
		has_opinion_modifier = { who = PREV modifier = opinion_budding_friendship }
		has_opinion_modifier = { who = PREV modifier = opinion_was_praised }
		has_opinion_modifier = { who = PREV modifier = opinion_charmed }
		has_opinion_modifier = { who = PREV modifier = opinion_honorable }
		has_opinion_modifier = { who = PREV modifier = opinion_was_rewarded }
		has_opinion_modifier = { who = PREV modifier = nice_adventure }
		has_opinion_modifier = { who = PREV modifier = great_adventure }
		has_opinion_modifier = { who = PREV modifier = epic_adventure }
		has_opinion_modifier = { who = PREV modifier = opinion_accomplice }
		has_opinion_modifier = { who = PREV modifier = opinion_mediator }
		has_opinion_modifier = { who = PREV modifier = opinion_poet_pen_pal }
		has_opinion_modifier = { who = PREV modifier = opinion_calmed }
		has_opinion_modifier = { who = PREV modifier = opinion_cheered_up }
		has_opinion_modifier = { who = PREV modifier = opinion_teach_virtue }
		has_opinion_modifier = { who = PREV modifier = opinion_no_cat }
		has_opinion_modifier = { who = PREV modifier = opinion_feels_appreciated }
		has_opinion_modifier = { who = PREV modifier = opinion_amused }
		has_opinion_modifier = { who = PREV modifier = opinion_swayed_3 }
	}
}

#checks whether PREV has one of the following opinion modifiers against the currently scoped character
prev_has_friendly_opinion_modifier_of_this_trigger = {
	OR = {
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_budding_friendship }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_was_praised }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_charmed }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_honorable }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_was_rewarded }
		reverse_has_opinion_modifier = { who = PREV modifier = nice_adventure }
		reverse_has_opinion_modifier = { who = PREV modifier = great_adventure }
		reverse_has_opinion_modifier = { who = PREV modifier = epic_adventure }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_accomplice }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_mediator }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_poet_pen_pal }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_calmed }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_cheered_up }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_teach_virtue }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_no_cat }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_feels_appreciated }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_amused }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_swayed_3 }
	}
}

#checks whether the current scope has one of the following opinion modifiers against ROOT
this_has_friendly_opinion_modifier_of_root_trigger = {
	OR = {
		has_opinion_modifier = { who = ROOT modifier = opinion_budding_friendship }
		has_opinion_modifier = { who = ROOT modifier = opinion_was_praised }
		has_opinion_modifier = { who = ROOT modifier = opinion_charmed }
		has_opinion_modifier = { who = ROOT modifier = opinion_honorable }
		has_opinion_modifier = { who = ROOT modifier = opinion_was_rewarded }
		has_opinion_modifier = { who = ROOT modifier = nice_adventure }
		has_opinion_modifier = { who = ROOT modifier = great_adventure }
		has_opinion_modifier = { who = ROOT modifier = epic_adventure }
		has_opinion_modifier = { who = ROOT modifier = opinion_accomplice }
		has_opinion_modifier = { who = ROOT modifier = opinion_mediator }
		has_opinion_modifier = { who = ROOT modifier = opinion_poet_pen_pal }
		has_opinion_modifier = { who = ROOT modifier = opinion_calmed }
		has_opinion_modifier = { who = ROOT modifier = opinion_cheered_up }
		has_opinion_modifier = { who = ROOT modifier = opinion_teach_virtue }
		has_opinion_modifier = { who = ROOT modifier = opinion_no_cat }
		has_opinion_modifier = { who = ROOT modifier = opinion_feels_appreciated }
		has_opinion_modifier = { who = ROOT modifier = opinion_amused }
		has_opinion_modifier = { who = ROOT modifier = opinion_swayed_3 }
	}
}

#checks whether ROOT has one of the following opinion modifiers against the currently scoped character
root_has_friendly_opinion_modifier_of_this_trigger = {
	OR = {
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_budding_friendship }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_was_praised }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_charmed }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_honorable }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_was_rewarded }
		reverse_has_opinion_modifier = { who = ROOT modifier = nice_adventure }
		reverse_has_opinion_modifier = { who = ROOT modifier = great_adventure }
		reverse_has_opinion_modifier = { who = ROOT modifier = epic_adventure }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_accomplice }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_mediator }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_poet_pen_pal }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_calmed }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_cheered_up }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_teach_virtue }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_no_cat }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_feels_appreciated }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_amused }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_swayed_3 }
	}
}
#returns true if scoped character already likes ROOT
potentially_platonically_interested_in_root_trigger = {
	NOT = { is_rival = ROOT }
	NOT = { is_friend = ROOT }
	opinion = { who = ROOT value = 10 }
	this_has_terrible_opinion_modifier_of_root_trigger = no

	OR = {
		opinion = { who = ROOT value = 45 }
		this_has_friendly_opinion_modifier_of_root_trigger = yes
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_budding_friendship } #Or if ROOT has this opinion of current scope
	}
}

#returns true if scoped character is already liked by ROOT
root_potentially_platonically_interested_in_this_trigger = {
	NOT = { is_rival = ROOT }
	NOT = { is_friend = ROOT }
	root_has_terrible_opinion_modifier_of_this_trigger = no

	OR = { 
		reverse_opinion = { who = ROOT value = 45 }
		root_has_friendly_opinion_modifier_of_this_trigger = yes
		has_opinion_modifier = { who = ROOT modifier = opinion_budding_friendship } #Or if current scope has this opinion of current ROOT
	}
}

#returns true if scoped character and ROOT are both sort of interested in a rivalry
#(they both dislike one another and are not friends, lovers, or rivals already)
current_scope_and_root_make_sense_as_friendlies_trigger = {
	potentially_platonically_interested_in_root_trigger = yes
	root_potentially_platonically_interested_in_this_trigger = yes
}

# Hardcoded trigger for Pagan baptism. Only used (except where referenced in script) for the Pagan baptism tooltip in the religion window
pagan_baptism_trigger = {
	NOT = { trait = incapable }
	has_regent = no
	war = no
	prisoner = no
	prestige = 500
	conditional_tooltip = {
		trigger = { has_character_flag = ai_flag_refuse_conversion }
		custom_tooltip = {
			text = NOT_TRUE_BELIEVER
			hidden_tooltip = {
				NOT = { has_character_flag = ai_flag_refuse_conversion }
			}
		}
	}
	conditional_tooltip = {
		trigger = { has_character_modifier = baptism_request_cooldown }
		custom_tooltip = {
			text = NOT_ASKED_BAPTISM_RECENTLY
			hidden_tooltip = {  
				NOT = { has_character_modifier = baptism_request_cooldown } 
			} 
		} 
	} 
	custom_tooltip = {
		text = TT_UNREFORMED_PAGAN
		hidden_tooltip = {
			religion_group = pagan_group
			NOT = { is_reformed_religion = yes }
			#NOT = { religion = bon }
		}
	}
	primary_title = { 
		OR = { 
			has_law = tribal_organization_2 
			has_law = tribal_organization_3 
			has_law = tribal_organization_4 
		} 
	}
}

has_fat_for_flag_trigger = { 
	OR = {
		has_character_flag = flag_fat_for_gluttony 
		has_character_flag = flag_fat_for_stress
		has_character_flag = flag_fat_for_depression
		has_character_flag = flag_fat_for_sloth
		has_character_flag = flag_fat_for_hedonism
		has_character_flag = flag_fat_for_carousing
		has_character_flag = flag_fat_for_family 
		has_character_flag = flag_fat_for_content 
		has_character_flag = flag_fat_for_lust
		has_character_flag = flag_fat_for_wroth
		has_character_flag = flag_fat_for_drunkard
		has_character_flag = flag_fat_for_boredom #fallback reason
	}
}

has_malnourished_for_flag_trigger = { 
	OR = {
		has_character_flag = flag_malnourished_for_temperance 
		has_character_flag = flag_malnourished_for_stress
		has_character_flag = flag_malnourished_for_depression
		has_character_flag = flag_malnourished_for_sloth
		has_character_flag = flag_malnourished_for_study
		has_character_flag = flag_malnourished_for_faith
		has_character_flag = flag_malnourished_for_paranoia 
		has_character_flag = flag_malnourished_for_diligence
		has_character_flag = flag_malnourished_for_cannibal
		has_character_flag = flag_malnourished_for_craven
		has_character_flag = flag_malnourished_for_boredom #fallback reason
	}
}

is_child_or_sibling_of_from_trigger = {
	custom_tooltip = {
		text = is_child_or_sibling_of_yours_tt
		OR = {
			is_child_of = FROM
			sibling = FROM
		}
	}
}

should_evolve_cultures_trigger = {
	hidden_tooltip = {
		OR = {
			is_alternate_start = no
			has_alternate_start_parameter = {
				key = culture_names
				value = historical
			}
		}
	}
}

non_historical_culture_names_in_alt_start_trigger = {
	hidden_tooltip = {
		AND = {
			is_alternate_start = yes
			NOT = {
				has_alternate_start_parameter = {
					key = culture_names
					value = historical
				}
			}
		}
	}
}

religions_are_standard_trigger = {
	hidden_tooltip = {
		OR = {
			is_alternate_start = no
			has_alternate_start_parameter = {
				key = religion_names
				value = historical
			}
		}
	}
}

this_has_terrible_opinion_modifier_of_root_extended_trigger = {
	OR = {
		#Personal grievances.

		has_opinion_modifier = { who = ROOT modifier = opinion_hate }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_imprisoned }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder }

		#Family grievances
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_executed_child }

		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_spouse }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_child }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_parent }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_sibling }
	}
}
root_has_terrible_opinion_modifier_of_this_extended_trigger = {
	OR = {
		#Personal grievances.

		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_hate }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_tortured_me }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_me }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_imprisoned }
		reverse_has_opinion_modifier = { who = ROOT modifier = attempted_murder }

		#Family grievances
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_tortured_family }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_tortured_close_kin }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_family }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_close_kin }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_executed_child }

		reverse_has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_spouse }
		reverse_has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_child }
		reverse_has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_parent }
		reverse_has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_sibling }
	}
}

this_has_terrible_opinion_modifier_of_prev_extended_trigger = {
	OR = {
		#Personal grievances.

		has_opinion_modifier = { who = PREV modifier = opinion_hate }
		has_opinion_modifier = { who = PREV modifier = opinion_tortured_me }
		has_opinion_modifier = { who = PREV modifier = opinion_mutilated_me }
		has_opinion_modifier = { who = PREV modifier = opinion_imprisoned }
		has_opinion_modifier = { who = PREV modifier = attempted_murder }

		#Family grievances
		has_opinion_modifier = { who = PREV modifier = opinion_tortured_family }
		has_opinion_modifier = { who = PREV modifier = opinion_tortured_close_kin }
		has_opinion_modifier = { who = PREV modifier = opinion_mutilated_family }
		has_opinion_modifier = { who = PREV modifier = opinion_mutilated_close_kin }
		has_opinion_modifier = { who = PREV modifier = opinion_executed_child }

		has_opinion_modifier = { who = PREV modifier = attempted_murder_of_spouse }
		has_opinion_modifier = { who = PREV modifier = attempted_murder_of_child }
		has_opinion_modifier = { who = PREV modifier = attempted_murder_of_parent }
		has_opinion_modifier = { who = PREV modifier = attempted_murder_of_sibling }
	}
}
prev_has_terrible_opinion_modifier_of_this_extended_trigger = {
	OR = {
		#Personal grievances.

		reverse_has_opinion_modifier = { who = PREV modifier = opinion_hate }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_tortured_me }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_mutilated_me }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_imprisoned }
		reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder }

		#Family grievances
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_tortured_family }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_tortured_close_kin }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_mutilated_family }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_mutilated_close_kin }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_executed_child }

		reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder_of_spouse }
		reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder_of_child }
		reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder_of_parent }
		reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder_of_sibling }
	}
}

# Hardcoded trigger for Coronation alert. Only used (except where referenced in script) for that alert, on top of the "potential" for the coronation decision. If it does not exist, only the decision potential is used
needs_coronation_trigger = {
	age >= 16
}

ruler_has_dedicated_temple_trigger = {
	always = no
}

martyrs_death_trigger = {
	OR = {
		death_reason = death_sacrificed
  		death_reason = death_sacrificed_ancestors
  		
	}
}
can_build_hillfort_trigger = {
						OR = { 
							AND = { 
										NOR = { 
											is_building = tb_hillfort_1 
											has_building = tb_hillfort_1 
										}
										location = { TECH_CASTLE_CONSTRUCTION = 0 }
							}
							AND = { 
										has_building = tb_hillfort_1
										NOR = { 
											is_building = tb_hillfort_2 
											has_building = tb_hillfort_2 
										}
										location = { TECH_CASTLE_CONSTRUCTION = 0 }
							}
							AND = { 
										has_building = tb_hillfort_2
										NOR = { 
											is_building = tb_hillfort_3 
											has_building = tb_hillfort_3 
										}
										location = { TECH_CASTLE_CONSTRUCTION = 1 }
							}
							AND = { 
										has_building = tb_hillfort_3
										NOR = { 
												is_building = tb_hillfort_4 
												has_building = tb_hillfort_4 
											}
										location = { TECH_CASTLE_CONSTRUCTION = 1 }
							}
						}
}
can_build_defensive_fortifications_trigger = {
						holding_type = tribal
						hidden_tooltip = { 
							NOR = { 
								is_building = tb_defensive_fortifications_4
								has_building = tb_defensive_fortifications_4
							}
						}
						OR = { 
							AND = { 
								custom_tooltip = { 
									text = tooltip_can_build_tb_defensive_fortifications_1
									hidden_tooltip = { 
										NOR = { 
											is_building = tb_defensive_fortifications_1 
											has_building = tb_defensive_fortifications_1
										}
										location = { TECH_CASTLE_CONSTRUCTION = 0 }
									}
								}
							}
							AND = { 
								custom_tooltip = { 
									text = tooltip_can_build_tb_defensive_fortifications_2 
									hidden_tooltip = { 
										has_building = tb_defensive_fortifications_1
										NOR = { 
											is_building = tb_defensive_fortifications_2 
											has_building = tb_defensive_fortifications_2 
										}
										location = { TECH_CASTLE_CONSTRUCTION = 0 }
									}
								}
							}
							AND = { 
								custom_tooltip = { 
									text = tooltip_can_build_tb_defensive_fortifications_3
									hidden_tooltip = { 
										has_building = tb_defensive_fortifications_2
										NOR = { 
											is_building = tb_defensive_fortifications_3 
											has_building = tb_defensive_fortifications_3 
										}
										location = { TECH_CASTLE_CONSTRUCTION = 1 }
									}
								}
							}
							AND = { 
								custom_tooltip = { 
									text = tooltip_can_build_tb_defensive_fortifications_4
									hidden_tooltip = { 
										has_building = tb_defensive_fortifications_3
										NOR = { 
											is_building = tb_defensive_fortifications_4 
											has_building = tb_defensive_fortifications_4 
										}
										location = { TECH_CASTLE_CONSTRUCTION = 1 }
									}
								}
							}
						}
}
can_build_walls_trigger = {
						holding_type = castle
						hidden_tooltip = { NOT = { has_building = ca_wall_5 } }
						OR = { 
							AND = { 
								custom_tooltip = { 
									text = tooltip_can_build_ca_wall_1
									hidden_tooltip = { 
										NOR = { 
											is_building = ca_wall_1 
											has_building = ca_wall_1
										}
										location = { TECH_FORTIFICATIONS_CONSTRUCTION = 0 }
									}
								}
							}
							AND = { 
								custom_tooltip = { 
									text = tooltip_can_build_ca_wall_2
									hidden_tooltip = { 
										has_building = ca_wall_1
										NOR = { 
											is_building = ca_wall_2 
											has_building = ca_wall_2
										}
										location = { TECH_FORTIFICATIONS_CONSTRUCTION = 2 }
									}
								}
							}
							AND = { 
								custom_tooltip = { 
									text = tooltip_can_build_ca_wall_3
									hidden_tooltip = { 
										has_building = ca_wall_2
										NOR = { 
											is_building = ca_wall_3 
											has_building = ca_wall_3
										}
										location = { TECH_FORTIFICATIONS_CONSTRUCTION = 4 }
									}
								}
							}
							AND = { 
								custom_tooltip = { 
									text = tooltip_can_build_ca_wall_4
									hidden_tooltip = { 
										has_building = ca_wall_3
										NOR = { 
											is_building = ca_wall_4 
											has_building = ca_wall_4
										}
										location = { TECH_FORTIFICATIONS_CONSTRUCTION = 6 }
									}
								}
							}
							AND = { 
								custom_tooltip = { 
									text = tooltip_can_build_ca_wall_5
									hidden_tooltip = { 
										has_building = ca_wall_4
										NOR = { 
											is_building = ca_wall_5 
											has_building = ca_wall_5
										}
										location = { TECH_FORTIFICATIONS_CONSTRUCTION = 8 }
									}
								}
							}
						}
}
can_build_castle_fortifications_trigger = {
						holding_type = castle
						hidden_tooltip = { 
							NOR = { 
								is_building = ca_wall_q_5
								has_building = ca_wall_q_5
							}
						}
						OR = { 
							AND = { 
								custom_tooltip = { 
									text = tooltip_can_build_ca_wall_q_1
									hidden_tooltip = { 
										NOR = { 
											is_building = ca_wall_q_1
											has_building = ca_wall_q_1
										}
										location = { TECH_FORTIFICATIONS_CONSTRUCTION = 0 }
									}
								}
							}
							AND = { 
								custom_tooltip = { 
									text = tooltip_can_build_ca_wall_q_2
									hidden_tooltip = { 
										has_building = ca_wall_q_1
										NOR = { 
											is_building = ca_wall_q_2 
											has_building = ca_wall_q_2
										}
										location = { TECH_FORTIFICATIONS_CONSTRUCTION = 1 }
									}
								}
							}
							AND = { 
								custom_tooltip = { 
									text = tooltip_can_build_ca_wall_q_3
									hidden_tooltip = { 
										has_building = ca_wall_q_2
										NOR = { 
											is_building = ca_wall_q_3 
											has_building = ca_wall_q_3
										}
										location = { TECH_FORTIFICATIONS_CONSTRUCTION = 3 }
									}
								}
							}
							AND = { 
								custom_tooltip = { 
									text = tooltip_can_build_ca_wall_q_4
									hidden_tooltip = { 
										has_building = ca_wall_q_3
										NOR = { 
											is_building = ca_wall_q_4 
											has_building = ca_wall_q_4 
										}
									}
								}
								location = { TECH_FORTIFICATIONS_CONSTRUCTION = 5 }
							}
							AND = { 
								custom_tooltip = { 
									text = tooltip_can_build_ca_wall_q_5
									hidden_tooltip = { 
										has_building = ca_wall_q_4
										NOR = { 
											is_building = ca_wall_q_5 
											has_building = ca_wall_q_5
										}
										location = { TECH_FORTIFICATIONS_CONSTRUCTION = 7 }
									}
								}
							}
						}
}

personal_grievance_trigger = {
	OR = {
		has_opinion_modifier = { who = ROOT modifier = opinion_hate }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_imprisoned }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder }
	}
}

family_grievance_trigger = {
	OR = {
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_executed_child }

		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_spouse }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_child }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_parent }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_sibling }
	}
}

no_grievance_trigger = {
	NOR = {
		personal_grievance_trigger = yes
		family_grievance_trigger = yes
	}
}

is_inaccessible_or_incapable_trigger = {
	OR = {  
		is_inaccessible_trigger = yes
		trait = incapable
		prisoner = yes
	}
}

lower_educational_trait_trigger = {
	OR = {
		AND = {
			trait = naive_appeaser
			ROOT = {
				OR = {
					trait = underhanded_rogue
					trait = charismatic_negotiator
					trait = grey_eminence
				}
			}
		}
		AND = {
			trait = underhanded_rogue 
			ROOT = {
				OR = {
					trait = charismatic_negotiator
					trait = grey_eminence
				}
			}
		}
		AND = {
			trait = charismatic_negotiator
			ROOT = {
				trait = grey_eminence
			}
		}
		AND = {
			trait = misguided_warrior
			ROOT = {
				OR = {
					trait = tough_soldier
					trait = skilled_tactician
					trait = brilliant_strategist
				}
			}
		}
		AND = {
			trait = tough_soldier
			ROOT = {
				OR = {
					trait = skilled_tactician
					trait = brilliant_strategist
				}
			}
		}
		AND = {
			trait = skilled_tactician
			ROOT = {
				trait = brilliant_strategist
			}
		}
		AND = {
			trait = indulgent_wastrel
			ROOT = {
				OR = {
					trait = thrifty_clerk
					trait = fortune_builder
					trait = midas_touched
				}
			}
		}
		AND = {
			trait = thrifty_clerk
			ROOT = {
				OR = {
					trait = fortune_builder
					trait = midas_touched
				}
			}
		}
		AND = {
			trait = fortune_builder
			ROOT = {
				trait = midas_touched
			}
		}
		AND = {
			trait = amateurish_plotter
			ROOT = {
				OR = {
					trait = flamboyant_schemer
					trait = intricate_webweaver
					trait = elusive_shadow
				}
			}
		}
		AND = {
			trait = flamboyant_schemer
			ROOT = {
				OR = {
					trait = intricate_webweaver
					trait = elusive_shadow
				}
			}
		}
		AND = {
			trait = intricate_webweaver
			ROOT = {
				trait = elusive_shadow
			}
		}
		AND = {
			trait = detached_priest
			ROOT = {
				OR = {
					trait = martial_cleric
					trait = scholarly_theologian
					trait = mastermind_theologian
				}
			}
		}
		AND = {
			trait = martial_cleric
			ROOT = {
				OR = {
					trait = scholarly_theologian
					trait = mastermind_theologian
				}
			}
		}
		AND = {
			trait = scholarly_theologian
			ROOT = {
				trait = mastermind_theologian
			}
		}
	}
}

has_scarred_trait_trigger = {
	OR = {  
		trait = scarred
		trait = scarred_mid
		trait = scarred_high
	}
}

this_is_warrior_culture_trigger = { #Not really about culture - Used in AI voting logic.
	NOT = { pacifist = yes }
	OR = {
		religion = tengri_pagan
		has_religion_feature = religion_warlike
		is_tribal = yes
		is_nomadic = yes
	}
}

this_is_diplomatic_culture_trigger = { #Not really about culture - Used in AI voting logic.
	OR = {
		is_feudal = yes
		is_patrician = yes
		is_merchant_republic = yes
	} 
	OR = {
		religion_group = chinese_religion
		religion_group = tao
		has_religion_feature = religion_cosmopolitan
	}
}
this_is_spiritual_culture_trigger = { #Not really about culture - Used in AI voting logic.
	OR = {
		religion_group = buddhist_religion
		has_religion_feature = religion_peaceful
	}
}
this_is_sea_raider_trigger = {
	OR = { 
		trait = pirate
		trait = ravager
		trait = seaking
		trait = sea_queen
	}
}

can_apply_lame_nickname_trigger = {
	has_nickname = no
}

can_apply_average_nickname_trigger = {
	OR = {
		has_nickname = no
		this_has_lame_nickname_trigger = yes
	}	
}

can_apply_cool_nickname_trigger = {
	OR = {
		has_nickname = no
		this_has_lame_nickname_trigger = yes
		this_has_average_nickname_trigger = yes
	}
}

can_apply_super_cool_nickname_trigger = {
	OR = {
		has_nickname = no
		this_has_lame_nickname_trigger = yes
		this_has_average_nickname_trigger = yes
		this_has_cool_nickname_trigger = yes
	}
}

this_has_lame_nickname_trigger = {
	OR = { 
		has_nickname = nick_the_avenger
		has_nickname = nick_the_brave
		has_nickname = nick_the_fearless
		has_nickname = nick_the_unlucky
		has_nickname = nick_the_lucky
		has_nickname = nick_the_restorer
		has_nickname = nick_the_effeminate
		has_nickname = nick_the_clueless
		has_nickname = nick_the_ill_tempered
		has_nickname = nick_the_affable
		has_nickname = nick_the_liberator
		has_nickname = nick_the_glorious
		has_nickname = nick_the_younger
		has_nickname = nick_the_youthful
		has_nickname = nick_the_unfaithful
		has_nickname = nick_the_beguiling
		has_nickname = nick_the_temptress
		has_nickname = nick_the_seducer
		has_nickname = nick_the_lewd
		has_nickname = nick_the_lecher
		has_nickname = nick_the_unchaste
		has_nickname = nick_the_culture			
		has_nickname = nick_the_rel_group		
		has_nickname = nick_the_pilgrim
		has_nickname = nick_the_shrewd
		has_nickname = nick_the_wily
		has_nickname = nick_the_jovial
		has_nickname = nick_the_jolly
		has_nickname = nick_the_gracious
		has_nickname = nick_the_rash
		has_nickname = nick_the_ruthless
		has_nickname = nick_the_strange
		has_nickname = nick_the_shieldmaiden
		has_nickname = nick_the_clumsy
		has_nickname = nick_the_evil
		has_nickname = nick_the_culture_marauder
		has_nickname = nick_the_kingslayer
		has_nickname = nick_iron_hand
		has_nickname = nick_peg_leg
		has_nickname = nick_the_goldsmith
		has_nickname = nick_the_weaponsmith
		has_nickname = nick_the_armorsmith
		has_nickname = nick_the_trader
		has_nickname = nick_the_lisp_and_lame
		has_nickname = nick_the_able
		has_nickname = nick_the_kind
		has_nickname = nick_the_good
		has_nickname = nick_the_strong
		has_nickname = nick_the_magnanimous
		has_nickname = nick_the_simple
		has_nickname = nick_the_merry
		has_nickname = nick_the_noble
		has_nickname = nick_the_blind
		has_nickname = nick_the_leper
		has_nickname = nick_the_gentle
		has_nickname = nick_the_proud
		has_nickname = nick_the_silent
		has_nickname = nick_the_bastard
		has_nickname = nick_the_gouty
		has_nickname = nick_half_hand
		has_nickname = nick_the_chaste
		has_nickname = nick_the_hunter
		has_nickname = nick_the_fowler
		has_nickname = nick_the_just
		has_nickname = nick_the_lame
		has_nickname = nick_the_handsome
		has_nickname = nick_the_fair
		has_nickname = nick_the_hideous
		has_nickname = nick_the_frog
		has_nickname = nick_the_tenacious
		has_nickname = nick_the_repulsive
		has_nickname = nick_the_mad
		has_nickname = nick_the_fat
		has_nickname = nick_the_hollow
		has_nickname = nick_the_drunkard
		has_nickname = nick_the_cruel
		has_nickname = nick_the_wise
		has_nickname = nick_the_resilient
		has_nickname = nick_one_eye
		has_nickname = nick_one_hand
		has_nickname = nick_one_leg
		has_nickname = nick_the_wicked 
		has_nickname = nick_the_bewitched 
		has_nickname = nick_priest_hater 
		has_nickname = nick_the_pious 
		has_nickname = nick_the_blessed 
		has_nickname = nick_the_monk 
		has_nickname = nick_the_nun 
		has_nickname = nick_the_ill_ruler 
		has_nickname = nick_the_terrible 
		has_nickname = nick_the_oppressor 
		has_nickname = nick_the_witch 
		has_nickname = nick_the_magnificent 
		has_nickname = nick_the_careless 
		has_nickname = nick_the_young 
		has_nickname = nick_the_old 
		has_nickname = nick_the_hunchback 
		has_nickname = nick_the_scholar 
		has_nickname = nick_the_black 
		has_nickname = nick_the_healer 
		has_nickname = nick_the_unmercenary_healer 
		has_nickname = nick_the_understanding 
		has_nickname = nick_the_merciful 
		has_nickname = nick_the_flat_chested 
		has_nickname = nick_the_oakskin
		has_nickname = nick_the_green_faced 
		has_nickname = nick_the_word_thief 
		has_nickname = nick_the_pups_gut 
		has_nickname = nick_the_jittery
		has_nickname = nick_the_broken_lute
		has_nickname = nick_the_dust_biter
		has_nickname = nick_the_sleepy
		has_nickname = nick_the_squealer
		has_nickname = nick_the_toothless
		has_nickname = nick_butter_teeth
		has_nickname = nick_the_cowardly
		has_nickname = nick_the_squirmy
		has_nickname = nick_the_frantic 
		has_nickname = nick_the_spare 
		has_nickname = nick_the_dry_throat 
		has_nickname = nick_the_floor_kisser 
		has_nickname = nick_the_toothless_wolf 
		has_nickname = nick_the_rough_hair
		has_nickname = nick_the_singing_crow
		has_nickname = nick_the_broken_nail
		has_nickname = nick_the_forgetful
		has_nickname = nick_the_thin_minded
		has_nickname = nick_the_messy 
		has_nickname = nick_the_feeble
		has_nickname = nick_the_milkdrinker
		has_nickname = nick_the_girls_arm
		has_nickname = nick_the_flower
		has_nickname = nick_the_hermit
		has_nickname = nick_the_recluse
		has_nickname = nick_the_absolved
		has_nickname = nick_the_short_tempered
		has_nickname = nick_the_red_cheeks
		has_nickname = nick_the_blushing
		has_nickname = nick_the_shrinking_violet
		has_nickname = nick_the_whiner
		has_nickname = nick_the_moaner
		has_nickname = nick_the_liar
		has_nickname = nick_the_cheater
		has_nickname = nick_the_vain
		has_nickname = nick_the_twitchy
	}
}
this_has_average_nickname_trigger = {
	OR = {
		has_nickname = nick_the_troubadour
		has_nickname = nick_the_holy
		has_nickname = nick_the_usurper
		has_nickname = nick_the_conqueror
		has_nickname = nick_the_victorious
		has_nickname = nick_the_martyr
		has_nickname = nick_the_heathen
		has_nickname = nick_the_jackal
		has_nickname = nick_the_maid
		has_nickname = nick_ring
		has_nickname = nick_of_the_wilds
		has_nickname = nick_the_impaler
		has_nickname = nick_bloodaxe
		has_nickname = nick_the_fox
		has_nickname = nick_the_headless
		has_nickname = nick_the_beheader
		has_nickname = nick_the_red
		has_nickname = nick_the_defender
		has_nickname = nick_the_legendary
		has_nickname = nick_the_slayer_of_culture
		has_nickname = nick_the_butcher
		has_nickname = nick_the_vengeful
		has_nickname = nick_the_betrayer
		has_nickname = nick_the_flayer
		has_nickname = nick_the_tormentor
		has_nickname = nick_the_mutilator
		has_nickname = nick_the_depraved
		has_nickname = nick_the_monster
		has_nickname = nick_the_abomination
		has_nickname = nick_the_inquisitor
		has_nickname = nick_the_purifier
		has_nickname = nick_the_tiger
		has_nickname = nick_the_explorer
		has_nickname = nick_the_astrologer	
		has_nickname = nick_the_terrain_commander
		has_nickname = nick_the_ground_warrior
		has_nickname = nick_lord_lady_of_the_terrain
		has_nickname = nick_lord_lady_ground
		has_nickname = nick_warrior_lodge_spirit
		has_nickname = nick_the_cannibal
		has_nickname = nick_the_frail
		has_nickname = nick_the_weak
		has_nickname = nick_the_brute
		has_nickname = nick_the_mule
		has_nickname = nick_the_wealthy
		has_nickname = nick_the_loyal
		has_nickname = nick_the_lord_of_realm
		has_nickname = nick_the_beanstalk 
		has_nickname = nick_the_accursed 
		has_nickname = nick_the_apostle 
		has_nickname = nick_the_confessor 
		has_nickname = nick_the_ironside 
		has_nickname = nick_the_lion 
		has_nickname = nick_the_bold 
		has_nickname = nick_the_unready 
		has_nickname = nick_the_tyrant 
		has_nickname = nick_the_quarreller 
		has_nickname = nick_the_devil 
		has_nickname = nick_the_great 
		has_nickname = nick_the_giant 
		has_nickname = nick_tiny 
		has_nickname = nick_the_shield_of_capital 
		has_nickname = nick_the_myrrh_streaming 
		has_nickname = nick_the_god_bearing 
		has_nickname = nick_the_righteous 
		has_nickname = nick_the_venerable 
		has_nickname = nick_the_spark_of_god 
		has_nickname = nick_the_right_believing 
		has_nickname = nick_the_miracle_worker 
		has_nickname = nick_the_pest
		has_nickname = nick_the_little_crow
		has_nickname = nick_the_piglet
		has_nickname = nick_the_splinter
		has_nickname = nick_the_word_master
		has_nickname = nick_the_mead_master
		has_nickname = nick_the_horse_gelder
		has_nickname = nick_the_undefeated
		has_nickname = nick_the_thigh_biter
		has_nickname = nick_the_hundred_flagons
		has_nickname = nick_the_bottomless
		has_nickname = nick_the_silver_tongue
		has_nickname = nick_the_bard
		has_nickname = nick_the_fairest_of_location
		has_nickname = nick_the_tamer
		has_nickname = nick_the_strongest_of_location
		has_nickname = nick_the_beef_thrasher
		has_nickname = nick_the_dove
		has_nickname = nick_the_stallion
		has_nickname = nick_the_harth_of_location
		has_nickname = nick_the_star_weaver
		has_nickname = nick_the_quick_fingers
		has_nickname = nick_the_strongarm
		has_nickname = nick_the_iron_grip
		has_nickname = nick_the_knuckle_slammer
		has_nickname = nick_the_gods_arm
		has_nickname = nick_the_bone_squeezer
		has_nickname = nick_the_bull
		has_nickname = nick_the_butch
		has_nickname = nick_the_protector
		has_nickname = nick_the_guardian
		has_nickname = nick_the_sharp_tongue
		has_nickname = nick_the_trickster
		has_nickname = nick_the_merciless
		has_nickname = nick_the_word_slayer
		has_nickname = nick_the_grinner
		has_nickname = nick_the_poison_tooth
		has_nickname = nick_the_vixen
		has_nickname = nick_the_hyena
		has_nickname = nick_the_guide
		has_nickname = nick_the_elder
		has_nickname = nick_the_knight_of_turnips
		has_nickname = nick_the_festive
		has_nickname = nick_the_burden
		has_nickname = nick_the_snake
	}
}
this_has_cool_nickname_trigger = {
	OR = { 
		has_nickname = nick_the_lawgiver
		has_nickname = nick_the_hammer
		has_nickname = nick_the_stranger
		has_nickname = nick_the_bald
		has_nickname = nick_the_stammerer
		has_nickname = nick_the_shadow
		has_nickname = nick_the_whisperer
		has_nickname = nick_the_spider
		has_nickname = nick_the_sea_devil
		has_nickname = nick_the_lioness
		has_nickname = nick_the_flail_of
		has_nickname = nick_the_scourge_of
		has_nickname = nick_the_scourge
		has_nickname = nick_the_alchemist
		has_nickname = nick_the_survivor
		has_nickname = nick_the_valkyrie
		has_nickname = nick_the_destroyer
		has_nickname = nick_the_terror_of_provincename
		has_nickname = nick_son_of_evilgod
		has_nickname = nick_the_cleansing_flame
		has_nickname = nick_the_witch_hunter
		has_nickname = nick_the_eastern_wind
		has_nickname = nick_the_despoiler
		has_nickname = nick_the_bane_of_realmname
		has_nickname = nick_the_heavenly
		has_nickname = nick_the_great_beast
		has_nickname = nick_the_great_eagle
		has_nickname = nick_the_artist_ruler
		has_nickname = nick_the_ambitious
		has_nickname = nick_the_bloody
		has_nickname = nick_the_diplomat
		has_nickname = nick_the_kind_hearted
		has_nickname = nick_the_generous
		has_nickname = nick_the_executioner
		has_nickname = nick_iron_fist
		has_nickname = nick_stone_fist
		has_nickname = nick_the_bulwark
		has_nickname = nick_the_tower
		has_nickname = nick_the_wall_of_title
		has_nickname = nick_the_underdog
		has_nickname = nick_of_a_thousand_faces
		has_nickname = nick_the_plaguebearer
		has_nickname = nick_the_persevering
		has_nickname = nick_twistedbeard 
		has_nickname = nick_the_bear 
		has_nickname = nick_the_boar 
		has_nickname = nick_the_faceless 
		has_nickname = nick_the_cyclops 
		has_nickname = nick_the_lionheart 
		has_nickname = nick_the_dragon 
		has_nickname = nick_the_dragoness 
		has_nickname = nick_the_undying 
		has_nickname = nick_the_wolf 
		has_nickname = the_timely_rain 
		has_nickname = the_jade_unicorn 
		has_nickname = the_wizard 
		has_nickname = the_big_halberd 
		has_nickname = beautiful_beard 
		has_nickname = the_tattooed_monk 
		has_nickname = the_unrestrained 
		has_nickname = nick_the_roaring_flame 
		has_nickname = nick_the_goliath 
		has_nickname = nick_the_mythological_creature 
		has_nickname = nick_the_fool_for_christ 
		has_nickname = nick_the_skull_crusher
		has_nickname = nick_the_quick_foot
		has_nickname = nick_the_bleeder
		has_nickname = nick_the_sharp_teeth
		has_nickname = nick_the_crimson_flurry
		has_nickname = nick_the_champion_of_province
		has_nickname = nick_the_bone_gnasher
		has_nickname = nick_the_gods_champion
		has_nickname = nick_the_red_gladiator
		has_nickname = nick_the_red_gladiatrix
		has_nickname = nick_the_crimson_gorgon
		has_nickname = nick_the_scarlet_eagle
		has_nickname = nick_the_exalted_chosen_of_province
		has_nickname = nick_the_scarlet_painter
		has_nickname = nick_the_ladder_legs
		has_nickname = nick_the_peacock
		has_nickname = nick_the_bellower
	}
}
this_has_super_cool_nickname_trigger = {
	OR = {
		has_nickname = nick_the_boneless
		has_nickname = nick_bluetooth
		has_nickname = nick_snake_in_the_eye
		has_nickname = nick_fairhair
		has_nickname = nick_whiteshirt
		has_nickname = nick_the_world_burner
		has_nickname = nick_the_vatican_prince
		has_nickname = nick_the_vatican_princess
		has_nickname = nick_the_pale_prince
		has_nickname = nick_the_leechlord
		has_nickname = nick_the_black_boar
		has_nickname = nick_the_apostate
		has_nickname = nick_the_hawk_of_quarysh
		has_nickname = nick_the_submissive 			
		has_nickname = nick_the_deliverer			
		has_nickname = nick_the_purified			
		has_nickname = nick_the_illuminated		
		has_nickname = nick_the_exalted			
		has_nickname = nick_the_awoken 			
		has_nickname = nick_the_bleeding_eyes		
		has_nickname = nick_the_sky_rider			
		has_nickname = nick_the_civilized 
		has_nickname = nick_the_missionary 		
		has_nickname = nick_the_proselytizer 		
		has_nickname = nick_the_adjudicator	 	
		has_nickname = nick_the_enlightened				
		has_nickname = nick_the_waking_teacher 	
		has_nickname = nick_the_whirling_spell	
		has_nickname = nick_the_horse_shepherd	
		has_nickname = nick_the_educator 	
		has_nickname = nick_the_white_raven
		has_nickname = nick_the_salt_snake
		has_nickname = nick_the_salt_viper
		has_nickname = nick_the_siren
		has_nickname = nick_the_wyrm
		has_nickname = nick_the_fury
		has_nickname = nick_the_stormforged
		has_nickname = nick_the_tempest_of_capital
		has_nickname = the_panther_head 
		has_nickname = the_thunderbolt 
		has_nickname = the_whirlwind 
		has_nickname = the_black_whirlwind 
		has_nickname = the_winged_tiger 
		has_nickname = the_turbulent_river_dragon 
		has_nickname = the_ferocious_giant 
		has_nickname = the_prodigy 
		has_nickname = nick_of_the_nine_hostages 
		has_nickname = nick_gods_torturer 
		has_nickname = nick_gods_hedonist 
		has_nickname = nick_gods_cannibal 
		has_nickname = nick_gods_drunkard
		has_nickname = nick_papal_lover  
		has_nickname = nick_gods_seducer 
		has_nickname = nick_the_red_storm
		has_nickname = nick_the_scarlet_hands
		has_nickname = nick_the_blood_monger
		has_nickname = nick_the_black_skull
		has_nickname = nick_the_heart_eater
		has_nickname = nick_the_slaughterer
		has_nickname = nick_the_spirit_stalker
		has_nickname = nick_the_soul_flayer
		has_nickname = nick_the_crimson_reaper
		has_nickname = nick_the_dreaded
		has_nickname = nick_the_chest_buster
		has_nickname = nick_the_angel_of_location
		has_nickname = nick_the_chosen_of_gabriel
		has_nickname = nick_the_page_of_lord
		has_nickname = nick_the_maid_of_virgin
		has_nickname = nick_the_messenger_of_christ
		has_nickname = nick_the_deaths_child
		has_nickname = nick_the_snakeling
		has_nickname = nick_the_little_spider
		has_nickname = nick_the_eerie
		has_nickname = nick_the_little_nightmare
		has_nickname = nick_the_ripper
		has_nickname = nick_the_black_widow
		has_nickname = nick_the_ferrante
		has_nickname = nick_the_iron_heart
		has_nickname = nick_the_pale_spider
		has_nickname = nick_the_grim_mistress
		has_nickname = nick_the_young_eagle
		has_nickname = nick_the_green_warrior
		has_nickname = nick_the_warrior_child
		has_nickname = nick_the_young_conqueror
		has_nickname = nick_the_white_knight 
		has_nickname = nick_the_virago
		has_nickname = nick_the_bloodhound
		has_nickname = nick_the_warrior_philosopher
		has_nickname = nick_the_angel
		has_nickname = nick_the_pure
		has_nickname = nick_the_celestial
		has_nickname = nick_the_radiant
		has_nickname = nick_the_innocent
		has_nickname = nick_the_peace_maker
		has_nickname = nick_the_munificent
		has_nickname = nick_the_architect
		has_nickname = nick_the_castellan
		has_nickname = nick_the_carpenter
		has_nickname = nick_the_grandiose
		has_nickname = nick_the_griffin
		has_nickname = nick_the_compassionate
		has_nickname = nick_the_founder
		has_nickname = nick_the_bloodlime
		has_nickname = nick_the_patron_of_arts
		has_nickname = nick_the_bastion_of_capital
		has_nickname = nick_the_holy_mason
		has_nickname = nick_the_grand_patriarch
		has_nickname = nick_the_grand_matriarch
		has_nickname = nick_the_philosopher
		has_nickname = nick_the_theologian
		has_nickname = nick_the_zealot
		has_nickname = nick_the_benevolent
	}
}

#Sex restrictions on Great Tribal Festival activities.
can_enter_festival_physical_competitions_trigger = { 
	is_adult = yes
	OR = {
		AND = {
			is_female = no
			OR = { 
				NOT = { has_religion_feature = religion_matriarchal }
				is_member_of_any_warrior_lodge_trigger = yes
				has_character_flag = special_marshal
			}
		}
		AND = {
			is_female = yes
			OR = { 
				trait = shieldmaiden
				has_religion_feature = religion_matriarchal 
				has_character_flag = special_marshal
				is_member_of_any_warrior_lodge_trigger = yes
			}
		}
	}
}

has_at_least_3_traits_in_common_with_prev_trigger = {
	calc_true_if = { 
		amount = 3
		#Virtues...
		AND = {
			trait = chaste
			PREV = { trait = chaste }
		}
		AND = {
			trait = temperate
			PREV = { trait = temperate }
		}
		AND = {
			trait = charitable
			PREV = { trait = charitable }
		}
		AND = {
			trait = diligent
			PREV = { trait = diligent }
		}
		AND = {
			trait = patient
			PREV = { trait = patient }
		}
		AND = {
			trait = kind
			PREV = { trait = kind }
		}
		AND = {
			trait = humble
			PREV = { trait = humble }
		}

		#sins...
		AND = {
			trait = lustful
			PREV = { trait = lustful }
		}
		AND = {
			trait = gluttonous
			PREV = { trait = gluttonous }
		}
		AND = {
			trait = greedy
			PREV = { trait = greedy }
		}
		AND = {
			trait = slothful
			PREV = { trait = slothful }
		}
		AND = {
			trait = envious
			PREV = { trait = envious }
		}
		AND = {
			trait = wroth
			PREV = { trait = wroth }
		}
		AND = {
			trait = proud
			PREV = { trait = proud }
		}

		#Others traits!
		AND = {
			trait = ambitious
			PREV = { trait = ambitious }
		}
		AND = {
			trait = arbitrary
			PREV = { trait = arbitrary }
		}
		AND = {
			trait = brave
			PREV = { trait = brave }
		}
		AND = {
			trait = content
			PREV = { trait = content }
		}
		AND = {
			trait = craven
			PREV = { trait = craven }
		}
		AND = {
			trait = cruel
			PREV = { trait = cruel }
		}
		AND = {
			trait = cynical
			PREV = { trait = cynical }
		}
		AND = {
			trait = deceitful
			PREV = { trait = deceitful }
		}
		AND = {
			trait = erudite
			PREV = { trait = erudite }
		}
		AND = {
			trait = gregarious
			PREV = { trait = gregarious }
		}
		AND = {
			trait = honest
			PREV = { trait = honest }
		}
		AND = {
			trait = just
			PREV = { trait = just }
		}
		AND = {
			trait = paranoid
			PREV = { trait = paranoid }
		}
		AND = {
			trait = shy
			PREV = { trait = shy }
		}
		AND = {
			trait = stubborn
			PREV = { trait = stubborn }
		}
		AND = {
			trait = trusting
			PREV = { trait = trusting }
		}
		AND = {
			trait = zealous
			PREV = { trait = zealous }
		}
	}
}

has_at_least_3_traits_opposite_prev_trigger = {
	calc_true_if = { 
		amount = 3
		#Virtues...
		AND = {
			trait = chaste
			PREV = { trait = lustful }
		}
		AND = {
			trait = temperate
			PREV = { trait = gluttonous }
		}
		AND = {
			trait = charitable
			PREV = { trait = greedy }
		}
		AND = {
			trait = diligent
			PREV = { trait = slothful }
		}
		AND = {
			trait = patient
			PREV = { trait = wroth }
		}
		AND = {
			trait = kind
			PREV = {
				OR = {
					trait = envious
					trait = cruel
				}
			}
		}
		AND = {
			trait = humble
			PREV = { trait = proud }
		}

		#sins...
		AND = {
			trait = lustful
			PREV = { trait = chaste }
		}
		AND = {
			trait = gluttonous
			PREV = { trait = temperate }
		}
		AND = {
			trait = greedy
			PREV = { trait = charitable }
		}
		AND = {
			trait = slothful
			PREV = { trait = diligent }
		}
		AND = {
			OR = {
				trait = envious
				trait = cruel
			}
			PREV = { trait = kind }
		}
		AND = {
			trait = wroth
			PREV = { trait = patient }
		}
		AND = {
			trait = proud
			PREV = { trait = humble }
		}

		#Others traits!
		AND = {
			trait = ambitious
			PREV = { trait = content }
		}
		AND = {
			trait = arbitrary
			PREV = { trait = just }
		}
		AND = {
			trait = brave
			PREV = { trait = craven }
		}
		AND = {
			trait = content
			PREV = { trait = ambitious }
		}
		AND = {
			trait = craven
			PREV = { trait = brave }
		}
		AND = {
			trait = cynical
			PREV = { trait = zealous }
		}
		AND = {
			trait = deceitful
			PREV = { trait = honest }
		}
		AND = {
			trait = gregarious
			PREV = { trait = shy }
		}
		AND = {
			trait = honest
			PREV = { trait = deceitful }
		}
		AND = {
			trait = just
			PREV = { trait = arbitrary }
		}
		AND = {
			trait = paranoid
			PREV = { trait = trusting }
		}
		AND = {
			trait = shy
			PREV = { trait = gregarious }
		}
		AND = {
			trait = trusting
			PREV = { trait = paranoid }
		}
		AND = {
			trait = zealous
			PREV = { trait = cynical }
		}
	}
}

has_any_sympathy_trait_trigger = { 
	OR = {
		trait = sympathy_confucian
		trait = sympathy_tao
		trait = sympathy_pagans
		trait = sympathy_buddhist
	}
}

preferred_gender_based_on_laws_trigger = {
	OR = {
		AND = {
			is_female = no
			PREV = {
				OR = {
					has_law = cognatic_succession
					has_law = agnatic_succession
				}
			}
		}
		PREV = { has_law = true_cognatic_succession }
		AND = {
			is_female = yes
			PREV = {
				OR = {
					has_law = enatic_succession
					has_law = enatic_cognatic_succession
				}
			}
		}
	}
}

has_bad_priest_trait_trigger = {
	always = no
}

# Referenced by the "button_rename" button in the character view 
can_rename_character_trigger = {
	is_liege_or_above = FROM
	dynasty = FROM
	age < 10
}

is_sick_or_injured_trigger = {
	OR = {
		trait = pneumonic
		trait = leper
		trait = maimed
		trait = infirm
		trait = incapable
		trait = has_tuberculosis
		trait = has_typhoid_fever
		trait = has_typhus
		trait = has_bubonic_plague
		trait = has_measles
		trait = has_small_pox
		trait = mangled
		trait = severely_injured
		trait = flu
		trait = dysentery
		trait = gout
		trait = food_poisoning
		trait = rabies
		trait = cancer
		trait = scurvy
	}
}

has_fair_trait_trigger = {
	OR = {
		trait = fair
		trait = groomed
	}
}

has_ugly_trait_trigger = {
	OR = {
		trait = ugly
		trait = uncouth
	}
}

parent_for_elective_succession_trigger = {
	NOT = { character = ROOT } #Not the current ruler.
	OR = {
		any_claim = { title = ROOT_FROMFROM }
		AND = { 
			is_close_relative = ROOT
			OR = { 
				dynasty = ROOT
				AND = { is_landed = yes higher_real_tier_than = BARON }
			}
		}
		AND = { 
			higher_real_tier_than = COUNT
			OR = { #Either defacto direct vassal, or independent ruler who is dejure vassal.
				vassal_of = ROOT 
				AND = { 
			 		any_dejure_liege = { title = ROOT } 
					independent = yes
				}
			}
		}
	}
	AND = {
		OR = { #Candidate should not be a landless Courtier that is about to inherit a Theocracy or Republic
			AND = {
				is_ruler = yes
				is_landed = yes
				is_republic = no
				is_merchant_republic = no
				is_theocracy = no
			}
			NOR = {
				any_heir_title = {
					is_republic = yes
				}
				any_heir_title = {
					is_merchant_republic = yes
				}
				any_heir_title = {
					is_theocracy = yes
				}
			}
		}
		OR = { #If the title controls the religion, candidates must be of the same religion.
			ROOT = { 
				NOT = { 
					controls_religion = yes
				}
			}
			ROOT = { 
				religion = PREV
			}
		}
		NOR = {
			trait = cat
			trait = disinherited
			trait = horse
			trait = eunuch
			trait = bastard
			is_ascetic_trigger = yes
			is_theocracy = yes
			is_republic = yes
			is_merchant_republic = yes
		}
	}
}

has_any_leadership_trait_trigger = {
	OR = {
		trait = aggressive_leader
		trait = narrow_flank_leader
		trait = cavalry_leader
		trait = defensive_leader
		trait = desert_terrain_leader
		trait = experimenter
		trait = flanker
		trait = flat_terrain_leader
		trait = heavy_infantry_leader
		trait = holy_warrior
		trait = inspiring_leader
		trait = jungle_terrain_leader
		trait = light_foot_leader
		trait = mountain_terrain_leader
		trait = organizer
		trait = rough_terrain_leader
		trait = siege_leader
		trait = trickster
		trait = unyielding_leader
		trait = logistics_expert
		trait = master_of_flame
		trait = sapper
		trait = levy_coordinator
		trait = war_elephant_leader
		trait = winter_soldier
	}
}

has_any_astrology_trait_trigger = {
	OR = {
		trait = zodiac_rat
		trait = zodiac_ox
		trait = zodiac_tiger
		trait = zodiac_rabbit
		trait = zodiac_dragon
		trait = zodiac_snake
		trait = zodiac_horse
		trait = zodiac_goat
		trait = zodiac_monkey
		trait = zodiac_rooster
		trait = zodiac_dog
		trait = zodiac_pig
	}
}

this_has_execution_reason_opinion_trigger = {
	OR = { 
		has_opinion_modifier = { who = THIS modifier = opinion_rebel_traitor }
		has_opinion_modifier = { who = THIS modifier = opinion_regicide_traitor }
		has_opinion_modifier = { who = THIS modifier = attempted_murder_of_spouse }
		has_opinion_modifier = { who = THIS modifier = attempted_murder_of_child }
		has_opinion_modifier = { who = THIS modifier = attempted_murder_of_parent }
		has_opinion_modifier = { who = THIS modifier = attempted_murder_of_sibling }
		has_opinion_modifier = { who = THIS modifier = attempted_murder_of_vassal }
		has_opinion_modifier = { who = THIS modifier = attempted_murder }
		has_opinion_modifier = { who = THIS modifier = opinion_spouse_slayer }
		has_opinion_modifier = { who = THIS modifier = opinion_murder_attempt }
		has_opinion_modifier = { who = THIS modifier = opinion_killed_close_kin }
		has_opinion_modifier = { who = THIS modifier = opinion_killed_father }
		has_opinion_modifier = { who = THIS modifier = opinion_castrated_me }
		has_opinion_modifier = { who = THIS modifier = opinion_blinded_me }
		has_opinion_modifier = { who = THIS modifier = opinion_witch }
		has_opinion_modifier = { who = THIS modifier = opinion_attempted_abduction }
		has_opinion_modifier = { who = THIS modifier = opinion_unfaithful_wife }
		has_opinion_modifier = { who = THIS modifier = opinion_unfaithful_husband_crime }
		has_opinion_modifier = { who = THIS modifier = opinion_cuckolded }
		has_opinion_modifier = { who = THIS modifier = opinion_charge_dw }
		has_opinion_modifier = { who = THIS modifier = opinion_tortured_me }
		has_opinion_modifier = { who = THIS modifier = opinion_mutilated_me }
		has_opinion_modifier = { who = THIS modifier = opinion_mutilated_family }
		has_opinion_modifier = { who = THIS modifier = opinion_mutilated_close_kin }
		has_opinion_modifier = { who = THIS modifier = opinion_outlawed_society }
		has_opinion_modifier = { who = THIS modifier = opinion_accused_apostate }
	}
}

root_has_execution_reason_opinion_trigger = {
	OR = { 
		has_opinion_modifier = { who = ROOT modifier = opinion_rebel_traitor }
		has_opinion_modifier = { who = ROOT modifier = opinion_regicide_traitor }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_spouse }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_child }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_parent }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_sibling }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_vassal }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder }
		has_opinion_modifier = { who = ROOT modifier = opinion_spouse_slayer }
		has_opinion_modifier = { who = ROOT modifier = opinion_murder_attempt }
		has_opinion_modifier = { who = ROOT modifier = opinion_killed_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_killed_father }
		has_opinion_modifier = { who = ROOT modifier = opinion_castrated_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_blinded_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_witch }
		has_opinion_modifier = { who = ROOT modifier = opinion_attempted_abduction }
		has_opinion_modifier = { who = ROOT modifier = opinion_unfaithful_wife }
		has_opinion_modifier = { who = ROOT modifier = opinion_unfaithful_husband_crime }
		has_opinion_modifier = { who = ROOT modifier = opinion_cuckolded }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_dw }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_outlawed_society }
		has_opinion_modifier = { who = ROOT modifier = opinion_accused_apostate }
	}
}

root_has_imprisonment_reason_opinion_trigger = {
	OR = { 
		has_opinion_modifier = { who = ROOT modifier = opinion_dishonorable }
		has_opinion_modifier = { who = ROOT modifier = opinion_traitor }
		has_opinion_modifier = { who = ROOT modifier = opinion_rebel_traitor }
		has_opinion_modifier = { who = ROOT modifier = opinion_regicide_traitor }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_spouse }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_child }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_parent }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_sibling }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_vassal }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder }
		has_opinion_modifier = { who = ROOT modifier = opinion_spouse_slayer }
		has_opinion_modifier = { who = ROOT modifier = opinion_murder_attempt }
		has_opinion_modifier = { who = ROOT modifier = opinion_killed_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_killed_father }
		has_opinion_modifier = { who = ROOT modifier = opinion_refused_order }
		has_opinion_modifier = { who = ROOT modifier = opinion_castrated_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_blinded_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_castrated_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_castrated_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_blinded_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_blinded_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_witch }
		has_opinion_modifier = { who = ROOT modifier = opinion_attempted_abduction }
		has_opinion_modifier = { who = ROOT modifier = opinion_killed_lover }
		has_opinion_modifier = { who = ROOT modifier = opinion_unfaithful_wife }
		has_opinion_modifier = { who = ROOT modifier = opinion_unfaithful_husband_crime }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_heresiarch }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_infidel }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_deviant }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_illegitimate }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_cultist }
		has_opinion_modifier = { who = ROOT modifier = opinion_cuckolded }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_dw }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_traitor }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_slanderer }
		has_opinion_modifier = { who = ROOT modifier = abuse_of_office }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_thief }
		has_opinion_modifier = { who = ROOT modifier = opinion_outlawed_society }
		has_opinion_modifier = { who = ROOT modifier = opinion_accused_apostate }
	}
}

has_rain_or_drought_modifier_trigger = {
	always = no
}

any_neighbor_province_has_dry_weather_trigger = {
	always = no
	any_neighbor_province = {
    	is_land = yes
	}
}
any_neighbor_province_has_heavy_rain_trigger = {
	always = no
	any_neighbor_province = {
    	is_land = yes
	}
}
any_neighbor_province_has_light_rain_trigger = {
	always = no
	any_neighbor_province = {
    	is_land = yes
	}
}

is_mongol_empire_leader_trigger = {
	OR = {
		has_landed_title = e_northern
		liege = { has_landed_title = e_northern }
		top_liege = { has_landed_title = e_northern }
	}
}

is_single_player_observer_mode = {
	AND = {
		multiplayer = no
		is_local_human_observer = yes
	}
}